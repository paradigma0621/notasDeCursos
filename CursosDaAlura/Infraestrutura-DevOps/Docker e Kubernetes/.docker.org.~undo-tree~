(undo-tree-save-format-version . 1)
"9960d98db99d39f247923d4649a4d52846c6bc26"
[nil nil nil nil (26046 42130 495481 917000) 0 nil]
([nil nil ((1 . 9) (t 26046 41480 108406 36000)) nil (26046 42130 495480 837000) 0 nil])
([nil nil ((9 . 10)) nil (26046 42130 495479 721000) 0 nil])
([nil nil ((nil rear-nonsticky nil 473 . 474) (nil fontified nil 143 . 474) (nil fontified nil 142 . 143) (nil fontified nil 30 . 142) (nil fontified nil 10 . 30) (10 . 474)) nil (26046 42130 495478 473000) 0 nil])
([nil nil ((10 . 13)) nil (26046 42130 495476 770000) 0 nil])
([nil nil ((477 . 478)) nil (26046 42130 495475 908000) 0 nil])
([nil nil ((478 . 481)) nil (26046 42130 495474 987000) 0 nil])
([nil nil ((nil rear-nonsticky nil 963 . 964) (nil fontified nil 805 . 964) (nil fontified nil 804 . 805) (nil fontified nil 625 . 804) (nil fontified nil 624 . 625) (nil fontified nil 489 . 624) (nil fontified nil 481 . 489) (481 . 964)) nil (26046 42130 495473 937000) 0 nil])
([nil nil ((777 . 778)) nil (26046 42130 495471 422000) 0 nil])
([nil nil ((nil rear-nonsticky nil 800 . 801) (nil fontified nil 778 . 801) (778 . 801)) nil (26046 42130 495470 287000) 0 nil])
([nil nil ((801 . 803)) nil (26046 42130 495468 541000) 0 nil])
([nil nil ((990 . 991) 803) nil (26046 42147 630780 883000) 0 nil])
([nil nil ((991 . 992) (t 26046 42130 497193 840000)) nil (26046 42304 880390 535000) 0 nil] [nil nil ((803 . 804) (t 26046 42130 497193 840000)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 803) (undo-tree-id0 . -1)) (26046 42147 630510 663000) 0 nil])
([nil nil ((992 . 995)) nil (26046 42304 880389 497000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1211 . 1212) (nil fontified nil 1012 . 1212) (nil fontified nil 995 . 1012) (995 . 1212)) nil (26046 42304 880388 696000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 991)) nil (26046 42304 880387 263000) 0 nil])
([nil nil ((1211 . 1213)) nil (26046 42304 880386 510000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -1211) (undo-tree-id4 . -1) (#("*" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -1212) (undo-tree-id5 . -1) 1213) nil (26046 42304 880385 472000) 0 nil])
([nil nil ((1211 . 1212)) nil (26046 42304 880383 47000) 0 nil])
([nil nil ((1212 . 1215)) nil (26046 42304 880382 271000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1307 . 1308) (nil fontified nil 1241 . 1308) (nil fontified nil 1215 . 1241) (1215 . 1308)) nil (26046 42304 880381 274000) 0 nil])
([nil nil ((1308 . 1309)) nil (26046 42304 880379 979000) 0 nil])
([nil nil ((1292 . 1293)) nil (26046 42304 880379 238000) 0 nil])
([nil nil ((1293 . 1294)) nil (26046 42304 880378 154000) 0 nil])
([nil nil ((1294 . 1295)) nil (26046 42304 880377 432000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("         " 0 3 (face org-indent) 3 9 (face org-indent)) fontified t)) . -1309) (undo-tree-id2 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("         " 0 3 (face org-indent) 3 9 (face org-indent)) fontified t rear-nonsticky t)) . -1310) (undo-tree-id3 . -1) 1311) nil (26046 42304 880376 218000) 0 nil])
([nil nil ((1309 . 1310)) nil (26046 42304 880373 455000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1356 . 1357) (nil fontified nil 1310 . 1357) (1310 . 1357)) nil (26046 42304 880372 556000) 0 nil])
([nil nil ((1357 . 1358)) nil (26046 42304 880371 466000) 0 nil])
([nil nil ((1358 . 1359)) nil (26046 42304 880370 705000) 0 nil])
([nil nil ((1359 . 1362)) nil (26046 42304 880369 831000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1732 . 1733) (nil fontified nil 1480 . 1733) (nil fontified nil 1479 . 1480) (nil fontified nil 1384 . 1479) (nil fontified nil 1362 . 1384) (1362 . 1733)) nil (26046 42304 880368 843000) 0 nil])
([nil nil ((1467 . 1468)) nil (26046 42304 880367 46000) 0 nil])
([nil nil ((1468 . 1469)) nil (26046 42304 880366 104000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t)) . -1479) (undo-tree-id1 . -1) 1480) nil (26046 42304 880364 776000) 0 nil])
([nil nil ((1542 . 1543)) nil (26046 42304 880357 62000) 0 nil])
([nil nil ((1567 . 1568)) nil (26046 42304 880356 136000) 0 nil])
([nil nil ((1571 . 1572)) nil (26046 42304 880355 324000) 0 nil])
([nil nil ((1543 . 1544)) nil (26046 42304 880354 40000) 0 nil])
([nil nil ((1573 . 1574)) nil (26046 42304 880353 81000) 0 nil])
([nil nil ((1597 . 1598)) nil (26046 42304 880352 38000) 0 nil])
([nil nil ((991 . 992)) nil (26046 42304 880545 818000) 0 nil])
([nil nil ((1213 . 1214)) nil (26046 42311 338430 848000) 0 nil] [nil nil ((1241 . 1242)) ((#("*" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . 1241) (undo-tree-id6 . -1)) (26046 42304 880346 494000) 0 nil])
([nil nil ((1743 . 1746) (t 26046 42311 338082 776000)) nil (26046 42349 59070 818000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1916 . 1917) (nil fontified nil 1778 . 1917) (nil fontified nil 1746 . 1778) (1746 . 1917)) nil (26046 42349 59069 626000) 0 nil])
([nil nil ((1364 . 1374)) nil (26046 42349 59068 77000) 0 nil])
([nil nil ((1374 . 1396) (#("Executando Containers" 0 21 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . 1374)) nil (26046 42349 59066 857000) 0 nil])
([nil nil ((1375 . 1376)) nil (26046 42349 59065 556000) 0 nil])
([nil nil ((1376 . 1379)) nil (26046 42349 59064 597000) 0 nil])
([nil nil ((1758 . 1759)) nil (26046 42349 59063 642000) 0 nil])
([nil nil ((1852 . 1853)) nil (26046 42349 59062 228000) 0 nil])
([nil nil ((1853 . 1854)) nil (26046 42349 59061 85000) 0 nil])
([nil nil ((1864 . 1865)) nil (26046 42349 59059 683000) 0 nil])
([nil nil ((1936 . 1937) 1865) nil (26046 42349 59055 665000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1915) (undo-tree-id31 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1916) (undo-tree-id32 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1917) (undo-tree-id33 . -1) (#("p" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1918) (undo-tree-id34 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1919) (undo-tree-id35 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1920) (undo-tree-id36 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1921) (undo-tree-id37 . -1) (#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1922) (undo-tree-id38 . -1) (#("i" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1923) (undo-tree-id39 . -1) (#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1924) (undo-tree-id40 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1925) (undo-tree-id41 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1926) (undo-tree-id42 . -1) (#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1927) (undo-tree-id43 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1928) (undo-tree-id44 . -1) (#("m" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1929) (undo-tree-id45 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1930) (undo-tree-id46 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1931) (undo-tree-id47 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1932) (undo-tree-id48 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1933) (undo-tree-id49 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1934) (undo-tree-id50 . -1) (#(":" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t rear-nonsticky t)) . -1935) (undo-tree-id51 . -1) 1936 (t 26046 42349 61448 142000)) nil (26046 42353 668870 394000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1894) (undo-tree-id10 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1895) (undo-tree-id11 . -1) (#("l" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1896) (undo-tree-id12 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1897) (undo-tree-id13 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1898) (undo-tree-id14 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1899) (undo-tree-id15 . -1) (#("x" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1900) (undo-tree-id16 . -1) (#("i" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1901) (undo-tree-id17 . -1) (#("b" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1902) (undo-tree-id18 . -1) (#("i" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1903) (undo-tree-id19 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1904) (undo-tree-id20 . -1) (#("á" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1905) (undo-tree-id21 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1906) (undo-tree-id22 . -1) (#("u" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1907) (undo-tree-id23 . -1) (#("m" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1908) (undo-tree-id24 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1909) (undo-tree-id25 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1910) (undo-tree-id26 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1911) (undo-tree-id27 . -1) (#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1912) (undo-tree-id28 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1913) (undo-tree-id29 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1914) (undo-tree-id30 . -1) 1915) nil (26046 42353 668850 236000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1891) (undo-tree-id7 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1892) (undo-tree-id8 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -1893) (undo-tree-id9 . -1) 1894) nil (26046 42353 668818 518000) 0 nil])
([nil nil ((1891 . 1892)) nil (26046 42353 668805 953000) 0 nil])
([nil nil ((1892 . 1893) (t 26046 42353 673370 850000)) nil (26046 42427 194054 617000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2464 . 2465) (nil fontified nil 2184 . 2465) (nil fontified nil 2183 . 2184) (nil fontified nil 1893 . 2183) (1893 . 2465)) nil (26046 42427 194053 415000) 0 nil])
([nil nil ((2261 . 2262)) nil (26046 42427 194051 882000) 0 nil])
([nil nil ((2262 . 2263)) nil (26046 42427 194051 166000) 0 nil])
([nil nil ((2272 . 2273)) nil (26046 42427 194050 458000) 0 nil])
([nil nil ((2417 . 2418)) nil (26046 42427 194049 600000) 0 nil])
([nil nil ((2418 . 2419)) nil (26046 42427 194048 761000) 0 nil])
([nil nil ((2432 . 2433)) nil (26046 42427 194047 867000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2452) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("p" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2453) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2454) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2455) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2456) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2457) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("i" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2458) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2459) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2460) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2461) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2462) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2463) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("m" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2464) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2465) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2466) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2467) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2468) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2469) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (#(":" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t rear-nonsticky t)) . -2470) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) 2471) nil (26046 42427 194040 757000) 0 nil])
([nil nil ((2452 . 2453)) nil (26046 42427 193892 457000) 0 nil])
([nil nil ((2453 . 2454) (t 26046 42427 200146 536000)) nil (26046 42466 998201 252000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2586 . 2587) (nil fontified nil 2454 . 2587) (2454 . 2587)) nil (26046 42466 998200 268000) 0 nil])
([nil nil ((2496 . 2504)) nil (26046 42466 998199 265000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2498) (undo-tree-id111 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2499) (undo-tree-id112 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2500) (undo-tree-id113 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2501) (undo-tree-id114 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2502) (undo-tree-id115 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2503) (undo-tree-id116 . -1) 2504) nil (26046 42466 998197 718000) 0 nil])
([nil nil ((2498 . 2505)) nil (26046 42466 998191 778000) 0 nil])
([nil nil ((2505 . 2519)) nil (26046 42466 998191 51000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2517) (undo-tree-id109 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2518) (undo-tree-id110 . -1) 2519) nil (26046 42466 998189 744000) 0 nil])
([nil nil ((2517 . 2519)) nil (26046 42466 998181 429000) 0 nil])
([nil nil ((2529 . 2534)) nil (26046 42466 998180 563000) 0 nil])
([nil nil ((2537 . 2541)) nil (26046 42466 998179 544000) 0 nil])
([nil nil ((#("u" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2544)) nil (26046 42466 998177 548000) 0 nil])
([nil nil ((2544 . 2546)) nil (26046 42466 998173 599000) 0 nil])
([nil nil ((2519 . 2539) (t 26046 42467 3489 566000)) nil (26046 42517 948670 996000) 0 nil])
([nil nil ((2539 . 2544)) nil (26046 42517 948670 153000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2543) (undo-tree-id120 . -1) 2544) nil (26046 42517 948669 262000) 0 nil])
([nil nil ((2543 . 2549)) nil (26046 42517 948665 946000) 0 nil])
([nil nil ((#("0" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -2548) (undo-tree-id119 . -1) 2549) nil (26046 42517 948664 826000) 0 nil])
([nil nil ((2548 . 2549)) nil (26046 42517 948663 89000) 0 nil])
([nil nil ((2547 . 2548)) nil (26046 42517 948662 359000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2539) (undo-tree-id117 . 1) (undo-tree-id118 . -1)) nil (26046 42517 948661 444000) 0 nil])
([nil nil ((2539 . 2540)) nil (26046 42517 948653 604000) 0 nil])
([nil nil ((2550 . 2551)) nil (26046 42517 948652 866000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2561) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2561) (#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2561) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2561) (#("p" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2561)) nil (26046 42517 948651 582000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2564) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2564) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2564) (#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2564)) nil (26046 42517 948649 757000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2567) (#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 2567)) nil (26046 42517 948647 897000) 0 nil])
([nil nil ((2567 . 2568)) nil (26046 42517 948646 372000) 0 nil])
([nil nil ((2642 . 2643)) nil (26046 42517 948642 572000) 0 nil])
([nil nil ((2643 . 2647) (t 26046 42517 950654 4000)) nil (26046 42616 922118 799000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3346 . 3347) (nil fontified nil 3213 . 3347) (nil fontified nil 3212 . 3213) (nil fontified nil 2906 . 3212) (nil fontified nil 2905 . 2906) (nil fontified nil 2668 . 2905) (nil fontified nil 2647 . 2668) (2647 . 3347)) nil (26046 42616 922117 560000) 0 nil])
([nil nil ((2716 . 2717)) nil (26046 42616 922115 581000) 0 nil])
([nil nil ((2717 . 2718)) nil (26046 42616 922114 878000) 0 nil])
([nil nil ((2728 . 2729)) nil (26046 42616 922114 164000) 0 nil])
([nil nil ((2820 . 2821)) nil (26046 42616 922113 454000) 0 nil])
([nil nil ((2821 . 2822)) nil (26046 42616 922112 774000) 0 nil])
([nil nil ((2845 . 2846)) nil (26046 42616 922112 156000) 0 nil])
([nil nil ((2849 . 2850)) nil (26046 42616 922111 486000) 0 nil])
([nil nil ((2850 . 2851)) nil (26046 42616 922110 797000) 0 nil])
([nil nil ((2874 . 2875)) nil (26046 42616 922110 112000) 0 nil])
([nil nil ((3024 . 3025)) nil (26046 42616 922109 420000) 0 nil])
([nil nil ((3025 . 3026)) nil (26046 42616 922108 680000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("          " 0 5 (face org-indent) 5 10 (face org-indent)) fontified t)) . -3052) (undo-tree-id121 . -1) 3053) nil (26046 42616 922107 205000) 0 nil])
([nil nil ((3052 . 3053)) nil (26046 42616 922099 305000) 0 nil])
([nil nil ((3167 . 3168)) nil (26046 42616 922098 63000) 0 nil])
([nil nil ((3177 . 3178)) nil (26046 42616 922094 73000) 0 nil])
([nil nil ((1058 . 1059) (t 26046 42616 929045 891000)) nil (26046 42663 654279 67000) 0 nil])
([nil nil ((1070 . 1071)) nil (26046 42663 654277 816000) 0 nil])
([nil nil ((1195 . 1196)) nil (26046 42663 654276 425000) 0 nil])
([nil nil ((1196 . 1197)) nil (26046 42663 654272 556000) 0 nil])
([nil nil ((3365 . 3368) (t 26046 42663 660292 773000)) nil (26046 42872 750447 418000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -3366) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("*" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -3367) (undo-tree-id176 . -1) 3368) nil (26046 42872 750446 250000) 0 nil])
([nil nil ((3366 . 3368)) nil (26046 42872 750443 452000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4207 . 4208) (nil fontified nil 4040 . 4208) (nil fontified nil 4039 . 4040) (nil fontified nil 3993 . 4039) (nil fontified nil 3973 . 3993) (nil fontified nil 3972 . 3973) (nil fontified nil 3833 . 3972) (nil fontified nil 3832 . 3833) (nil fontified nil 3831 . 3832) (nil fontified nil 3569 . 3831) (nil fontified nil 3568 . 3569) (nil fontified nil 3396 . 3568) (nil fontified nil 3368 . 3396) (3368 . 4208)) nil (26046 42872 750442 119000) 0 nil])
([nil nil ((#("Para ver o Dockerfile completo consulte aqui." 0 45 (fontified t)) . 3993) (undo-tree-id171 . -45) (undo-tree-id172 . -45) (undo-tree-id173 . -45)) nil (26046 42872 750438 783000) 0 nil])
([nil nil ((3832 . 3836)) nil (26046 42872 750436 289000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -3831) (undo-tree-id166 . -1) (#("`" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -3832) (undo-tree-id167 . -1) (#("`" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -3833) (undo-tree-id168 . -1) (#("`" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -3834) (undo-tree-id169 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -3835) (undo-tree-id170 . -1) 3836) nil (26046 42872 750434 751000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 3992)) nil (26046 42872 750430 273000) 0 nil])
([nil nil ((4052 . 4053)) nil (26046 42872 750429 651000) 0 nil])
([nil nil ((4053 . 4054)) nil (26046 42872 750428 913000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t)) . 4066)) nil (26046 42872 750428 96000) 0 nil])
([nil nil ((4066 . 4067)) nil (26046 42872 750427 236000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)) fontified t)) . 4067)) nil (26046 42872 750426 269000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4141) (undo-tree-id145 . -1) (#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4142) (undo-tree-id146 . -1) (#("r" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4143) (undo-tree-id147 . -1) (#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4144) (undo-tree-id148 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4145) (undo-tree-id149 . -1) (#("u" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4146) (undo-tree-id150 . -1) (#("m" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4147) (undo-tree-id151 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4148) (undo-tree-id152 . -1) (#("p" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4149) (undo-tree-id153 . -1) (#("r" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4150) (undo-tree-id154 . -1) (#("ó" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4151) (undo-tree-id155 . -1) (#("x" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4152) (undo-tree-id156 . -1) (#("i" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4153) (undo-tree-id157 . -1) (#("m" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4154) (undo-tree-id158 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4155) (undo-tree-id159 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4156) (undo-tree-id160 . -1) (#("p" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4157) (undo-tree-id161 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4158) (undo-tree-id162 . -1) (#("s" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4159) (undo-tree-id163 . -1) (#("t" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4160) (undo-tree-id164 . -1) (#("." 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t rear-nonsticky t)) . -4161) (undo-tree-id165 . -1) 4162) nil (26046 42872 750421 532000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4120) (undo-tree-id124 . -1) (#("s" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4121) (undo-tree-id125 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4122) (undo-tree-id126 . -1) (#("i" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4123) (undo-tree-id127 . -1) (#("s" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4124) (undo-tree-id128 . -1) (#("s" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4125) (undo-tree-id129 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4126) (undo-tree-id130 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4127) (undo-tree-id131 . -1) (#("é" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4128) (undo-tree-id132 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4129) (undo-tree-id133 . -1) (#("u" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4130) (undo-tree-id134 . -1) (#("m" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4131) (undo-tree-id135 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4132) (undo-tree-id136 . -1) (#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4133) (undo-tree-id137 . -1) (#("s" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4134) (undo-tree-id138 . -1) (#("s" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4135) (undo-tree-id139 . -1) (#("u" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4136) (undo-tree-id140 . -1) (#("n" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4137) (undo-tree-id141 . -1) (#("t" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4138) (undo-tree-id142 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4139) (undo-tree-id143 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4140) (undo-tree-id144 . -1) 4141) nil (26046 42872 750399 609000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4118) (undo-tree-id122 . -1) (#("M" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4119) (undo-tree-id123 . -1) 4120) nil (26046 42872 750380 23000) 0 nil])
([nil nil ((4118 . 4119)) nil (26046 42872 750368 183000) 0 nil])
([nil nil ((9 . 10) (t 26046 42872 756961 310000)) nil (26046 42910 882112 871000) 0 nil])
([nil nil ((2 . 3)) nil (26046 42910 882111 932000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t line-prefix "" wrap-prefix "")) . -2) (undo-tree-id185 . -1) 3) nil (26046 42910 882110 827000) 0 nil])
([nil nil ((2 . 7)) nil (26046 42910 882016 68000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4) (undo-tree-id182 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -5) (undo-tree-id183 . -1) (#("r" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -6) (undo-tree-id184 . -1) 7) nil (26046 42910 882014 881000) 0 nil])
([nil nil ((4 . 7)) nil (26046 42910 882009 932000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -5) (undo-tree-id180 . -1) (#("t" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -6) (undo-tree-id181 . -1) 7) nil (26046 42910 882008 612000) 0 nil])
([nil nil ((5 . 10)) nil (26046 42910 882005 880000) 0 nil])
([nil nil ((17 . 18)) nil (26046 42910 882004 823000) 0 nil])
([nil nil ((nil rear-nonsticky nil 70 . 71) (nil fontified nil 18 . 71) (18 . 71)) nil (26046 42910 882003 785000) 0 nil])
([nil nil ((#("Docker" 0 6 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -11) (undo-tree-id177 . -6) (undo-tree-id178 . -1) (undo-tree-id179 . -6) 17) nil (26046 42910 882001 575000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30 . 31) (nil fontified nil 11 . 31) (11 . 31)) nil (26046 42910 881989 430000) 0 nil])
([nil nil ((4195 . 4207) (t 26046 42910 892359 294000)) nil (26046 42946 749039 884000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -4206) (undo-tree-id186 . -1) 4207) nil (26046 42946 749038 421000) 0 nil])
([nil nil ((4206 . 4227)) nil (26046 42946 749030 838000) 0 nil])
([nil nil ((4227 . 4231)) nil (26046 42946 749029 853000) 0 nil])
([nil nil ((4231 . 4246)) nil (26046 42946 749028 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4358 . 4359) (nil fontified nil 4246 . 4359) (4246 . 4359)) nil (26046 42946 749024 634000) 0 nil])
([nil nil ((4360 . 4370) (t 26046 42946 759794 378000)) nil (26046 43014 862414 866000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4367) (undo-tree-id205 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4368) (undo-tree-id206 . -1) (#("q" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4369) (undo-tree-id207 . -1) 4370) nil (26046 43014 862413 542000) 0 nil])
([nil nil ((4367 . 4376)) nil (26046 43014 862410 539000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4373) (undo-tree-id202 . -1) (#("f" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4374) (undo-tree-id203 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4375) (undo-tree-id204 . -1) 4376) nil (26046 43014 862409 429000) 0 nil])
([nil nil ((4373 . 4379)) nil (26046 43014 862405 323000) 0 nil])
([nil nil ((4379 . 4380)) nil (26046 43014 862404 548000) 0 nil])
([nil nil ((4380 . 4388)) nil (26046 43014 862403 868000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4387) (undo-tree-id201 . -1) 4388) nil (26046 43014 862403 44000) 0 nil])
([nil nil ((4387 . 4408)) nil (26046 43014 862401 583000) 0 nil])
([nil nil ((4408 . 4409)) nil (26046 43014 862400 897000) 0 nil])
([nil nil ((4409 . 4413)) nil (26046 43014 862400 231000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4412) (undo-tree-id200 . -1) 4413) nil (26046 43014 862399 447000) 0 nil])
([nil nil ((4412 . 4433)) nil (26046 43014 862398 11000) 0 nil])
([nil nil ((4433 . 4442)) nil (26046 43014 862397 343000) 0 nil])
([nil nil ((4442 . 4463)) nil (26046 43014 862396 658000) 0 nil])
([nil nil ((4463 . 4478)) nil (26046 43014 862395 968000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4477) (undo-tree-id199 . -1) 4478) nil (26046 43014 862395 59000) 0 nil])
([nil nil ((4477 . 4491)) nil (26046 43014 862393 621000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4490) (undo-tree-id198 . -1) 4491) nil (26046 43014 862392 777000) 0 nil])
([nil nil ((4490 . 4491)) nil (26046 43014 862391 378000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4490) (undo-tree-id197 . -1) 4491) nil (26046 43014 862390 530000) 0 nil])
([nil nil ((4490 . 4492)) nil (26046 43014 862389 80000) 0 nil])
([nil nil ((4492 . 4495)) nil (26046 43014 862388 301000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4494) (undo-tree-id196 . -1) 4495) nil (26046 43014 862387 380000) 0 nil])
([nil nil ((4494 . 4501)) nil (26046 43014 862385 939000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4499) (undo-tree-id194 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4500) (undo-tree-id195 . -1) 4501) nil (26046 43014 862384 924000) 0 nil])
([nil nil ((4499 . 4505)) nil (26046 43014 862382 804000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4503) (undo-tree-id192 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4504) (undo-tree-id193 . -1) 4505) nil (26046 43014 862381 858000) 0 nil])
([nil nil ((4503 . 4513)) nil (26046 43014 862379 599000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4510) (undo-tree-id189 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4511) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4512) (undo-tree-id191 . -1) 4513) nil (26046 43014 862378 277000) 0 nil])
([nil nil ((4510 . 4517)) nil (26046 43014 862374 611000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4516) (undo-tree-id188 . -1) 4517) nil (26046 43014 862373 469000) 0 nil])
([nil nil ((4516 . 4529)) nil (26046 43014 862537 437000) 0 nil])
([nil nil ((#("?" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4528) (undo-tree-id210 . -1) 4529) nil (26046 43021 453008 343000) 0 nil] [nil nil ((#("quando a partir de uma image mysqlX eu subo um container: ao fazer um INSERT na base desse container, ele aparecerá em todos outros novos containers?" 0 149 (fontified t)) . -4380) (undo-tree-id187 . -149) 4529) ((4380 . 4529)) (26046 43014 862367 169000) 0 nil])
([nil nil ((4528 . 4531)) nil (26046 43021 453006 438000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4529) (undo-tree-id208 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4530) (undo-tree-id209 . -1) 4531) nil (26046 43021 453004 697000) 0 nil])
([nil nil ((4529 . 4550)) nil (26046 43021 452994 979000) 0 nil])
([nil nil ((4550 . 4552)) nil (26046 43021 452993 490000) 0 nil])
([nil nil ((4552 . 4553)) nil (26046 43021 452989 808000) 0 nil])
([nil nil ((4552 . 4553) (t 26046 43021 458621 536000)) nil (26046 43034 291645 984000) 0 nil])
([nil nil ((4553 . 4555)) nil (26046 43034 291644 957000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4603 . 4604) (nil fontified nil 4564 . 4604) (nil fontified nil 4555 . 4564) (4555 . 4604)) nil (26046 43034 291643 757000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t)) . 4563)) nil (26046 43034 291641 898000) 0 nil])
([nil nil ((4563 . 4564)) nil (26046 43034 291640 658000) 0 nil])
([nil nil ((4604 . 4605)) nil (26046 43034 291636 310000) 0 nil])
([nil nil ((4605 . 4612) (t 26046 43034 298420 400000)) nil (26046 44130 276869 550000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -4611) (undo-tree-id230 . -1) 4612) nil (26046 44130 276868 219000) 0 nil])
([nil nil ((4611 . 4627)) nil (26046 44130 276866 694000) 0 nil])
([nil nil ((4627 . 4628)) nil (26046 44130 276865 949000) 0 nil])
([nil nil ((4628 . 4637)) nil (26046 44130 276865 125000) 0 nil])
([nil nil ((4637 . 4653)) nil (26046 44130 276864 441000) 0 nil])
([nil nil ((4653 . 4654)) nil (26046 44130 276863 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10477 . 10478) (nil fontified nil 10285 . 10478) (nil fontified nil 10284 . 10285) (nil fontified nil 10061 . 10284) (nil fontified nil 10051 . 10061) (nil fontified nil 10050 . 10051) (nil fontified nil 9839 . 10050) (nil fontified nil 9838 . 9839) (nil fontified nil 9548 . 9838) (nil fontified nil 9547 . 9548) (nil fontified nil 9361 . 9547) (nil fontified nil 9360 . 9361) (nil fontified nil 9060 . 9360) (nil fontified nil 9059 . 9060) (nil fontified nil 8664 . 9059) (nil fontified nil 8663 . 8664) (nil fontified nil 8529 . 8663) (nil fontified nil 8528 . 8529) (nil fontified nil 8182 . 8528) (nil fontified nil 8181 . 8182) (nil fontified nil 7867 . 8181) (nil fontified nil 7849 . 7867) (nil fontified nil 7848 . 7849) (nil fontified nil 7558 . 7848) (nil fontified nil 7557 . 7558) (nil fontified nil 7216 . 7557) (nil fontified nil 7215 . 7216) (nil fontified nil 6926 . 7215) (nil fontified nil 6925 . 6926) (nil fontified nil 6643 . 6925) (nil fontified nil 6642 . 6643) (nil fontified nil 6471 . 6642) (nil fontified nil 6470 . 6471) (nil fontified nil 6212 . 6470) (nil fontified nil 6211 . 6212) (nil fontified nil 5909 . 6211) (nil fontified nil 5908 . 5909) (nil fontified nil 5715 . 5908) (nil fontified nil 5669 . 5715) (nil fontified nil 5668 . 5669) (nil fontified nil 5416 . 5668) (nil fontified nil 5415 . 5416) (nil fontified nil 5200 . 5415) (nil fontified nil 5199 . 5200) (nil fontified nil 5019 . 5199) (nil fontified nil 4997 . 5019) (nil fontified nil 4996 . 4997) (nil fontified nil 4797 . 4996) (nil fontified nil 4796 . 4797) (nil fontified nil 4654 . 4796) (4654 . 10478)) nil (26046 44130 276860 872000) 0 nil])
([nil nil ((#("Vamos partir do problema inicial? Os sistemas, atualmente, têm diversas aplicações e ferramentas que interagem entre si para compor seu todo.

É mais ou menos esse caso que vamos visualizar e entender por que os containers podem ser úteis nessas situações. Porém, antes disso, vamos partir do básico da ideia de como chegamos a essa solução.
" 0 142 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 142 143 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 143 342 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -4654) (undo-tree-id228 . -342) (undo-tree-id229 . -342) 4996) nil (26046 44130 276851 260000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 4654)) nil (26046 44130 276848 964000) 0 nil])
([nil nil ((#("Conhecendo o problema" 0 21 (fontified t)) . 4654) (undo-tree-id226 . -21) (undo-tree-id227 . -21) 4675) nil (26046 44130 276847 875000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 4654)) nil (26046 44130 276845 595000) 0 nil])
([nil nil ((6560 . 6563)) nil (26046 44130 276844 821000) 0 nil])
([nil nil ((6563 . 6571)) nil (26046 44130 276844 141000) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -6569) (undo-tree-id224 . -1) (#("ã" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -6570) (undo-tree-id225 . -1) 6571) nil (26046 44130 276843 11000) 0 nil])
([nil nil ((6569 . 6573)) nil (26046 44130 276839 253000) 0 nil])
([nil nil ((6573 . 6594)) nil (26046 44130 276838 397000) 0 nil])
([nil nil ((6594 . 6607)) nil (26046 44130 276837 636000) 0 nil])
([nil nil ((7531 . 7548)) nil (26046 44130 276836 946000) 0 nil])
([nil nil ((#("0" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 7543)) nil (26046 44130 276836 54000) 0 nil])
([nil nil ((8757 . 8763)) nil (26046 44130 276835 215000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -8760) (undo-tree-id221 . -1) (#("C" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -8761) (undo-tree-id222 . -1) (#("o" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -8762) (undo-tree-id223 . -1) 8763) nil (26046 44130 276833 927000) 0 nil])
([nil nil ((8760 . 8761)) nil (26046 44130 276830 830000) 0 nil])
([nil nil ((#("S" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8760) (undo-tree-id220 . -1) 8761) nil (26046 44130 276829 791000) 0 nil])
([nil nil ((8760 . 8766)) nil (26046 44130 276828 156000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -8765) (undo-tree-id219 . -1) 8766) nil (26046 44130 276827 78000) 0 nil])
([nil nil ((8765 . 8783)) nil (26046 44130 276825 251000) 0 nil])
([nil nil ((4628 . 4629)) nil (26046 44130 276824 378000) 0 nil])
([nil nil ((4654 . 4655)) nil (26046 44130 276823 303000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4666 . 4667) (nil fontified nil 4655 . 4667) (4655 . 4667)) nil (26046 44130 276822 239000) 0 nil])
([nil nil ((4654 . 4655)) nil (26046 44130 276820 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4680 . 4681) (nil fontified nil 4660 . 4681) (nil fontified nil 4658 . 4660) (nil fontified nil 4656 . 4658) (nil fontified nil 4655 . 4656) (4655 . 4681)) nil (26046 44130 276819 497000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -4659) (undo-tree-id217 . -1) (undo-tree-id218 . -1) 4660) nil (26046 44130 276817 182000) 0 nil])
([nil nil ((4659 . 4660)) nil (26046 44130 276814 422000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide)) . 4628)) nil (26046 44130 276813 340000) 0 nil])
([nil nil ((#("01_Usando_VM" 0 11 (fontified t) 11 12 (fontified t rear-nonsticky t)) . 4681) (undo-tree-id214 . -12) (undo-tree-id215 . -12) (undo-tree-id216 . -12) 4693) nil (26046 44130 276812 230000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 4681) (undo-tree-id213 . -1)) nil (26046 44130 276809 8000) 0 nil])
([nil nil ((6587 . 6589)) nil (26046 44130 276807 80000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-hide)) . -6588) (undo-tree-id212 . -1) 6589) nil (26046 44130 276805 829000) 0 nil])
([nil nil ((7559 . 7560)) nil (26046 44130 276803 741000) 0 nil])
([nil nil ((7593 . 7600)) nil (26046 44130 276803 18000) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -7599) (undo-tree-id211 . -1) 7600) nil (26046 44130 276801 849000) 0 nil])
([nil nil ((7599 . 7601)) nil (26046 44130 276794 403000) 0 nil])
([nil nil ((7601 . 7609)) nil (26046 44130 276793 655000) 0 nil])
([nil nil ((nil fontified nil 7620 . 7621) (nil fontified nil 7609 . 7620) (7609 . 7621)) nil (26046 44130 276792 822000) 0 nil])
([nil nil ((7621 . 7626)) nil (26046 44130 276791 582000) 0 nil])
([nil nil ((8819 . 8820)) nil (26046 44130 402956 196000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8878 . 8879) (nil fontified nil 8874 . 8879) (nil fontified nil 8873 . 8874) (nil fontified nil 8862 . 8873) (nil fontified nil 8846 . 8862) (8846 . 8879)) nil (26046 44139 759005 997000) 0 nil] [nil nil ((8846 . 8848)) ((#(" (" 0 2 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 8846) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2)) (26046 44130 277267 870000) 0 nil])
([nil nil ((#("1" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -8863) (undo-tree-id242 . -1) 8864) nil (26046 44139 759004 173000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8880 . 8881) (nil fontified nil 8876 . 8881) (nil fontified nil 8875 . 8876) (nil fontified nil 8864 . 8875) (nil fontified nil 8848 . 8864) (8848 . 8881)) ((#(" (ver ./Imagens/01_Usando_VM.png)" 0 16 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil face org-level-4) 16 27 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil face org-level-4) 27 28 (rear-nonsticky t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil face org-level-4) 28 32 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil face org-level-4) 32 33 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil rear-nonsticky nil face org-level-4)) . 8848) (undo-tree-id231 . -33) (undo-tree-id232 . 1) (undo-tree-id233 . -33) (undo-tree-id234 . 32) (undo-tree-id235 . -2) (nil rear-nonsticky t 8880 . 8881)) (26046 44130 276785 274000) 0 nil])
([nil nil ((8863 . 8864)) nil (26046 44139 759002 380000) 0 nil])
nil
([nil nil ((#("." 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 8873) (#("M" 0 1 (rear-nonsticky t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 8873)) nil (26046 44139 759001 152000) 0 nil])
([nil nil ((#("V" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -8872) (undo-tree-id241 . -1) 8873) nil (26046 44139 758999 83000) 0 nil])
([nil nil ((8872 . 8883)) nil (26046 44139 758988 896000) 0 nil])
([nil nil ((9879 . 9884) (t 26046 44139 766206 197000)) nil (26046 44147 94420 812000) 0 nil])
([nil nil ((10312 . 10315) (t 26046 44147 102423 300000)) nil (26046 44941 853644 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -10314) (undo-tree-id245 . -1) 10315) nil (26046 44941 853643 767000) 0 nil])
([nil nil ((10314 . 10335)) nil (26046 44941 853641 921000) 0 nil])
([nil nil ((10335 . 10342)) nil (26046 44941 853641 211000) 0 nil])
([nil nil ((10342 . 10343)) nil (26046 44941 853640 336000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14837 . 14838) (nil fontified nil 14795 . 14838) (nil fontified nil 14794 . 14795) (nil fontified nil 14572 . 14794) (nil fontified nil 14571 . 14572) (nil fontified nil 14379 . 14571) (nil fontified nil 14369 . 14379) (nil fontified nil 14368 . 14369) (nil fontified nil 14008 . 14368) (nil fontified nil 14007 . 14008) (nil fontified nil 13729 . 14007) (nil fontified nil 13728 . 13729) (nil fontified nil 13468 . 13728) (nil fontified nil 13467 . 13468) (nil fontified nil 13266 . 13467) (nil fontified nil 13258 . 13266) (nil fontified nil 13257 . 13258) (nil fontified nil 13028 . 13257) (nil fontified nil 13027 . 13028) (nil fontified nil 12826 . 13027) (nil fontified nil 12740 . 12826) (nil fontified nil 12739 . 12740) (nil fontified nil 12662 . 12739) (nil fontified nil 12661 . 12662) (nil fontified nil 12319 . 12661) (nil fontified nil 12318 . 12319) (nil fontified nil 12146 . 12318) (nil fontified nil 12145 . 12146) (nil fontified nil 11812 . 12145) (nil fontified nil 11790 . 11812) (nil fontified nil 11789 . 11790) (nil fontified nil 11484 . 11789) (nil fontified nil 11425 . 11484) (nil fontified nil 11368 . 11425) (nil fontified nil 11327 . 11368) (nil fontified nil 11326 . 11327) (nil fontified nil 11286 . 11326) (nil fontified nil 11285 . 11286) (nil fontified nil 11049 . 11285) (nil fontified nil 11048 . 11049) (nil fontified nil 10853 . 11048) (nil fontified nil 10852 . 10853) (nil fontified nil 10624 . 10852) (nil fontified nil 10597 . 10624) (nil fontified nil 10553 . 10597) (nil fontified nil 10501 . 10553) (nil fontified nil 10468 . 10501) (nil fontified nil 10397 . 10468) (nil fontified nil 10396 . 10397) (nil fontified nil 10343 . 10396) (10343 . 14838)) nil (26046 44941 853637 580000) 0 nil])
([nil nil ((10623 . 10624)) nil (26046 44941 853628 336000) 0 nil])
([nil nil ((10597 . 10598)) nil (26046 44941 853627 588000) 0 nil])
([nil nil ((10598 . 10603)) nil (26046 44941 853626 681000) 0 nil])
([nil nil ((11797 . 11802)) nil (26046 44941 853625 787000) 0 nil])
([nil nil ((13270 . 13275)) nil (26046 44941 853624 517000) 0 nil])
([nil nil ((14386 . 14391)) nil (26046 44941 853623 580000) 0 nil])
([nil nil ((#("primeiramente" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -11858) (undo-tree-id243 . -13) (undo-tree-id244 . -13) 11871) nil (26046 44941 853622 364000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 11858)) nil (26046 44941 853613 609000) 0 nil])
([nil nil ((11858 . 11859)) nil (26046 44941 853612 748000) 0 nil])
([nil nil ((11859 . 11860)) nil (26046 44941 853611 935000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 11860) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 11860)) nil (26046 44941 853610 901000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 12143) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 12143) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("é" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 12143) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("T" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12143)) nil (26046 44941 853607 783000) 0 nil])
([nil nil ((12143 . 12145)) nil (26046 44941 853603 742000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 12300) (#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12300)) nil (26046 44941 853601 807000) 0 nil])
([nil nil ((12300 . 12301)) nil (26046 44941 853599 68000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12301)) nil (26046 44941 853597 957000) 0 nil])
([nil nil ((12377 . 12378)) nil (26046 44941 853597 226000) 0 nil])
([nil nil ((12378 . 12379)) nil (26046 44941 853596 392000) 0 nil])
([nil nil ((#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12379)) nil (26046 44941 853595 476000) 0 nil])
([nil nil ((12498 . 12499)) nil (26046 44941 853594 610000) 0 nil])
([nil nil ((12499 . 12500)) nil (26046 44941 853593 442000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 12500) (#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#("f" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 12500) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#("P" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 12500) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 12500)) nil (26046 44941 853590 432000) 0 nil])
([nil nil ((14811 . 14812) 13993) nil (26046 44941 853584 207000) 0 nil])
([nil nil ((#("
Agora que entendemos como um container se diferencia de uma máquina virtual tradicional, aprenderemos a instalar o Docker, inicialmente no Windows e depois no Linux, onde vamos abordar as principais utilizações do Docker.

Nos encontramos no próximo vídeo. Até mais!
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 223 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 223 224 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 224 266 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 266 267 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t) 267 268 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -14544) (undo-tree-id249 . -268) (undo-tree-id250 . -268) 14812 (t 26046 44941 859749 998000)) nil (26046 45024 752855 148000) 0 nil])
([nil nil ((#("
**** Conclusão
Respondemos às principais perguntas de quem está começando agora no mundo de containers: como garantir o isolamento, como ele funciona sem instalar um sistema operacional, e assim por diante.
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 4 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide) 4 6 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4) 6 15 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4) 15 16 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t) 16 144 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 144 208 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 14336) (undo-tree-id246 . -208) (undo-tree-id247 . -208) (undo-tree-id248 . -208)) nil (26046 45024 752849 384000) 0 nil])
([nil nil ((4552 . 4553) (t 26046 45024 759797 623000)) nil (26046 46075 91598 450000) 0 nil])
([nil nil ((4553 . 4558)) nil (26046 46075 91597 320000) 0 nil])
([nil nil ((#("ṕ" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4556) (undo-tree-id265 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -4557) (undo-tree-id266 . -1) 4558) nil (26046 46075 91596 59000) 0 nil])
([nil nil ((4556 . 4562)) nil (26046 46075 91593 518000) 0 nil])
([nil nil ((4562 . 4563)) nil (26046 46075 91592 686000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4852 . 4853) (nil fontified nil 4587 . 4853) (nil fontified nil 4563 . 4587) (4563 . 4853)) nil (26046 46075 91591 572000) 0 nil])
([nil nil ((4853 . 4854)) nil (26046 46075 91590 280000) 0 nil])
([nil nil ((4368 . 4369)) nil (26046 46075 91589 418000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4375) (undo-tree-id260 . -1) (#("q" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4376) (undo-tree-id261 . -1) (#("u" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4377) (undo-tree-id262 . -1) (#("e" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4378) (undo-tree-id263 . -1) (#("i" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4379) (undo-tree-id264 . -1) 4380) nil (26046 46075 91587 479000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . -4374) (undo-tree-id259 . -1) 4375) nil (26046 46075 91520 590000) 0 nil])
([nil nil ((4374 . 4378)) nil (26046 46075 91519 35000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 4362)) nil (26046 46075 91518 166000) 0 nil])
([nil nil ((4362 . 4363)) nil (26046 46075 91517 48000) 0 nil])
([nil nil ((#("* Dúvidas que tive
quando a partir de uma image mysqlX eu subo um container: ao fazer um INSERT na base desse container, ele aparecerá em todos outros novos containers dessa imagem do mysqlX?
Resposta:
Isolamento de Contextos
Como cada contêiner possui seu próprio sistema de arquivos, processo, espaço de rede e recursos, garantindo que a aplicação dentro do contêiner não interfira em outras aplicações ou no sistema hospedeiro, isso proporciorna um alto grau de independência e isolamento.
" 0 2 (fontified t face org-level-1) 2 3 (fontified t face org-level-1) 3 18 (fontified t face org-level-1) 18 19 (fontified t) 19 192 (fontified t) 192 202 (fontified t) 202 226 (fontified t) 226 491 (fontified t) 491 492 (fontified t rear-nonsticky t) 492 493 (fontified t)) . 4360) (undo-tree-id257 . -493) (undo-tree-id258 . -493) 4853) nil (26046 46075 91515 962000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 4360)) nil (26046 46075 91512 318000) 0 nil])
([nil nil ((14142 . 14143)) nil (26046 46075 91511 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14635 . 14636) (nil fontified nil 14635 . 14636) (nil fontified nil 14634 . 14635) (nil fontified nil 14369 . 14634) (nil fontified nil 14345 . 14369) (nil fontified nil 14335 . 14345) (nil fontified nil 14162 . 14335) (nil fontified nil 14161 . 14162) (nil fontified nil 14146 . 14161) (nil fontified nil 14145 . 14146) (nil fontified nil 14143 . 14145) (14143 . 14636)) nil (26046 46075 91510 113000) 0 nil])
([nil nil ((14162 . 14165)) nil (26046 46075 91507 66000) 0 nil])
([nil nil ((#("Resposta:" 0 9 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -14338) (undo-tree-id255 . -9) (undo-tree-id256 . -9) 14347) nil (26046 46075 91505 758000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 14338)) nil (26046 46075 91502 510000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 14629) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1)) nil (26046 46075 91498 533000) 0 nil])
([nil nil ((14142 . 14143) (t 26046 46075 104311 809000)) nil (26046 46201 432036 340000) 0 nil])
([nil nil ((14143 . 14149)) nil (26046 46201 432035 343000) 0 nil])
([nil nil ((#("P" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14147) (undo-tree-id269 . -1) (#("i" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14148) (undo-tree-id270 . -1) 14149) nil (26046 46201 432034 146000) 0 nil])
([nil nil ((14147 . 14151)) nil (26046 46201 432031 69000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14150) (undo-tree-id268 . -1) 14151) nil (26046 46201 432030 22000) 0 nil])
([nil nil ((14150 . 14158)) nil (26046 46201 432027 819000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14157) (undo-tree-id267 . -1) 14158) nil (26046 46201 432026 477000) 0 nil])
([nil nil ((14157 . 14159)) nil (26046 46201 432019 10000) 0 nil])
([nil nil ((14159 . 14160)) nil (26046 46201 432018 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14683 . 14684) (nil fontified nil 14188 . 14684) (nil fontified nil 14160 . 14188) (14160 . 14684)) nil (26046 46201 432016 498000) 0 nil])
([nil nil ((14160 . 14165)) nil (26046 46201 432012 54000) 0 nil])
([nil nil ((14689 . 14690) (t 26046 46201 441104 483000)) nil (26046 46238 595384 111000) 0 nil])
([nil nil ((14690 . 14711)) nil (26046 46238 595382 558000) 0 nil])
([nil nil ((14711 . 14714)) nil (26046 46238 595381 24000) 0 nil])
([nil nil ((14714 . 14715)) nil (26046 46238 595376 245000) 0 nil])
([nil nil ((14715 . 14736) (t 26046 46238 603196 43000)) nil (26046 47216 933750 935000) 0 nil])
([nil nil ((14736 . 14741)) nil (26046 47216 933749 870000) 0 nil])
([nil nil ((14738 . 14739)) nil (26046 47216 933749 31000) 0 nil])
([nil nil ((14742 . 14743)) nil (26046 47216 933748 285000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21214 . 21215) (nil fontified nil 20963 . 21215) (nil fontified nil 20962 . 20963) (nil fontified nil 20742 . 20962) (nil fontified nil 20732 . 20742) (nil fontified nil 20731 . 20732) (nil fontified nil 20524 . 20731) (nil fontified nil 20523 . 20524) (nil fontified nil 20319 . 20523) (nil fontified nil 20318 . 20319) (nil fontified nil 20059 . 20318) (nil fontified nil 20058 . 20059) (nil fontified nil 20025 . 20058) (nil fontified nil 20024 . 20025) (nil fontified nil 19974 . 20024) (nil fontified nil 19973 . 19974) (nil fontified nil 19893 . 19973) (nil fontified nil 19892 . 19893) (nil fontified nil 19864 . 19892) (nil fontified nil 19863 . 19864) (nil fontified nil 19825 . 19863) (nil fontified nil 19824 . 19825) (nil fontified nil 19798 . 19824) (nil fontified nil 19797 . 19798) (nil fontified nil 19775 . 19797) (nil fontified nil 19761 . 19775) (nil fontified nil 19742 . 19761) (nil fontified nil 19741 . 19742) (nil fontified nil 19441 . 19741) (nil fontified nil 19427 . 19441) (nil fontified nil 19409 . 19427) (nil fontified nil 19408 . 19409) (nil fontified nil 19235 . 19408) (nil fontified nil 19234 . 19235) (nil fontified nil 18832 . 19234) (nil fontified nil 18831 . 18832) (nil fontified nil 18541 . 18831) (nil fontified nil 18540 . 18541) (nil fontified nil 18304 . 18540) (nil fontified nil 18303 . 18304) (nil fontified nil 17993 . 18303) (nil fontified nil 17992 . 17993) (nil fontified nil 17614 . 17992) (nil fontified nil 17613 . 17614) (nil fontified nil 17560 . 17613) (nil fontified nil 17559 . 17560) (nil fontified nil 17474 . 17559) (nil fontified nil 17460 . 17474) (nil fontified nil 17442 . 17460) (nil fontified nil 17441 . 17442) (nil fontified nil 17204 . 17441) (nil fontified nil 17203 . 17204) (nil fontified nil 17088 . 17203) (nil fontified nil 17087 . 17088) (nil fontified nil 16767 . 17087) (nil fontified nil 16766 . 16767) (nil fontified nil 16375 . 16766) (nil fontified nil 16374 . 16375) (nil fontified nil 16349 . 16374) (nil fontified nil 16348 . 16349) (nil fontified nil 16117 . 16348) (nil fontified nil 16116 . 16117) (nil fontified nil 16016 . 16116) (nil fontified nil 16015 . 16016) (nil fontified nil 15992 . 16015) (nil fontified nil 15978 . 15992) (nil fontified nil 15906 . 15978) (nil fontified nil 15905 . 15906) (nil fontified nil 15596 . 15905) (nil fontified nil 15595 . 15596) (nil fontified nil 15540 . 15595) (nil fontified nil 15539 . 15540) (nil fontified nil 15432 . 15539) (nil fontified nil 15431 . 15432) (nil fontified nil 15390 . 15431) (nil fontified nil 15389 . 15390) (nil fontified nil 15339 . 15389) (nil fontified nil 15338 . 15339) (nil fontified nil 15147 . 15338) (nil fontified nil 15133 . 15147) (nil fontified nil 15110 . 15133) (nil fontified nil 15109 . 15110) (nil fontified nil 15001 . 15109) (nil fontified nil 14977 . 15001) (nil fontified nil 14976 . 14977) (nil fontified nil 14743 . 14976) (14743 . 21215)) nil (26046 47216 933743 929000) 0 nil])
([nil nil ((#("Agora, analisaremos o impacto do comando docker run e seu funcionamento específico. Aprofundaremos as nuances desse comando, explorando como ele identificou a execução do hello world, demonstrando um entendimento imediato da tarefa.

Conhecendo o Docker Hub
" 0 233 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 233 234 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 234 258 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -14743) (undo-tree-id325 . -258) (undo-tree-id326 . -258) 15001) nil (26046 47216 933728 47000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -14875) (undo-tree-id323 . -13) (undo-tree-id324 . -13) 14888) nil (26046 47216 933725 701000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15118)) nil (26046 47216 933723 546000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15159)) nil (26046 47216 933722 804000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15266)) nil (26046 47216 933721 755000) 0 nil])
([nil nil ((15842 . 15843)) nil (26046 47216 933720 966000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)) fontified t)) . -15842) (undo-tree-id322 . -1) 15843) nil (26046 47216 933719 891000) 0 nil])
([nil nil ((#("See 'docker run --help'." 0 24 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 16075) (undo-tree-id320 . -24) (undo-tree-id321 . -24)) nil (26046 47216 933717 985000) 0 nil])
([nil nil ((#("N" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 16075) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 16075) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 16075)) nil (26046 47216 933714 443000) 0 nil])
([nil nil ((16075 . 16076)) nil (26046 47216 933713 350000) 0 nil])
([nil nil ((#("Em vez de inserir simplesmente hello world, questionaremos a origem ao fornecer uma sequência aleatória de caracteres, pressionando \"Enter\".
" 0 74 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 74 141 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15490) (undo-tree-id318 . -141) (undo-tree-id319 . -141) 15631) nil (26046 47216 933712 159000) 0 nil])
([nil nil ((15490 . 15491)) nil (26046 47216 933709 891000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15503) (#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15503)) nil (26046 47216 933708 815000) 0 nil])
([nil nil ((#("sdokcmsdocmsdcoiscmdsoicmdiocsmdicosdmciosdmcidsocmsdiocms" 0 58 (fontified t)) . 15503) (undo-tree-id316 . -58) (undo-tree-id317 . -58) 15561) nil (26046 47216 933707 662000) 0 nil])
([nil nil ((15491 . 15493)) nil (26046 47216 933705 34000) 0 nil])
([nil nil ((#("S" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15491) (undo-tree-id314 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15492) (undo-tree-id315 . -1) 15493) nil (26046 47216 933703 948000) 0 nil])
([nil nil ((15491 . 15492)) nil (26046 47216 933701 326000) 0 nil])
([nil nil ((15492 . 15500)) nil (26046 47216 933700 553000) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15495) (undo-tree-id309 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15496) (undo-tree-id310 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15497) (undo-tree-id311 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15498) (undo-tree-id312 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15499) (undo-tree-id313 . -1) 15500) nil (26046 47216 933698 589000) 0 nil])
([nil nil ((15495 . 15506)) nil (26046 47216 933693 604000) 0 nil])
([nil nil ((15518 . 15539)) nil (26046 47216 933692 553000) 0 nil])
([nil nil ((15539 . 15544)) nil (26046 47216 933691 860000) 0 nil])
([nil nil ((#("N" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15539) (undo-tree-id304 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15540) (undo-tree-id305 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15541) (undo-tree-id306 . -1) (#("E" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15542) (undo-tree-id307 . -1) (#("h" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15543) (undo-tree-id308 . -1) 15544) nil (26046 47216 933690 235000) 0 nil])
([nil nil ((15539 . 15540)) nil (26046 47216 933685 666000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15539) (undo-tree-id303 . -1) 15540) nil (26046 47216 933684 522000) 0 nil])
([nil nil ((15539 . 15553)) nil (26046 47216 933682 959000) 0 nil])
([nil nil ((15553 . 15566)) nil (26046 47216 933682 127000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15565) (undo-tree-id302 . -1) 15566) nil (26046 47216 933681 118000) 0 nil])
([nil nil ((15565 . 15566)) nil (26046 47216 933679 239000) 0 nil])
([nil nil ((#("S" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15550) (undo-tree-id297 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15551) (undo-tree-id298 . -1) (#("l" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15552) (undo-tree-id299 . -1) (#("v" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15553) (undo-tree-id300 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15554) (undo-tree-id301 . -1) 15555) nil (26046 47216 933677 429000) 0 nil])
([nil nil ((15550 . 15557)) nil (26046 47216 933671 670000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15569) (undo-tree-id295 . -13) (undo-tree-id296 . -13) 15582) nil (26046 47216 933670 669000) 0 nil])
([nil nil ((#("'cmsdokcmsdocmsdcoiscmdsoicmdiocsmdicosdmciosdmcidsocmsdiocms" 0 61 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15615) (undo-tree-id293 . -61) (undo-tree-id294 . -61) 15676) nil (26046 47216 933667 779000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15664 . 15665) (nil fontified nil 15615 . 15665) (15615 . 15665)) nil (26046 47216 933665 293000) 0 nil])
([nil nil ((#("Como retorno, obtemos:

Unable to find image umaStringAleatoriaQueNaoEhImagemContidaNoDockerHub: latest' locally

docker: Error response from daemon: pull access denied for cmsdokcmsdocmsdcoiscmdso icmdiocsmdicosdmciosdmcidsocmsdiocms, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.

" 0 23 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 23 24 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 24 45 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 45 94 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 94 95 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t rear-nonsticky t) 95 113 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 113 114 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 114 345 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 345 346 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15570) (undo-tree-id291 . -346) (undo-tree-id292 . -346) 15916) nil (26046 47216 933663 647000) 0 nil])
([nil nil ((15569 . 15590)) nil (26046 47216 933661 399000) 0 nil])
([nil nil ((15590 . 15611)) nil (26046 47216 933660 491000) 0 nil])
([nil nil ((15611 . 15612)) nil (26046 47216 933659 615000) 0 nil])
([nil nil ((15612 . 15617)) nil (26046 47216 933658 581000) 0 nil])
([nil nil ((15617 . 15618)) nil (26046 47216 933657 691000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15569)) nil (26046 47216 933656 711000) 0 nil])
([nil nil ((15569 . 15570)) nil (26046 47216 933655 879000) 0 nil])
([nil nil ((15570 . 15571)) nil (26046 47216 933655 1000) 0 nil])
([nil nil ((15508 . 15509)) nil (26046 47216 933654 185000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -15508) (undo-tree-id290 . -1) 15509) nil (26046 47216 933653 149000) 0 nil])
([nil nil ((15507 . 15508)) nil (26046 47216 933651 471000) 0 nil])
([nil nil ((#("Na etapa inicial, a situação permanece inalterada: é mencionado que a busca pela imagem local não teve êxito. Em seguida, surge uma mensagem de erro indicando uma negação de acesso ou inexistência do repositório que contém a imagem. Contudo, o significado de \"imagem\" ainda não foi completamente esclarecido; essa resposta será gradualmente desenvolvida, resultando em uma explicação final.
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1 30 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 30 391 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15621) (undo-tree-id288 . -391) (undo-tree-id289 . -391) 16012) nil (26046 47216 933650 174000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15621)) nil (26046 47216 933647 968000) 0 nil])
([nil nil ((#("No entanto, ao utilizar hello world, a localização é bem-sucedida." 0 66 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -15874) (undo-tree-id286 . -66) (undo-tree-id287 . -66) 15940) nil (26046 47216 933646 907000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 15991)) nil (26046 47216 933644 460000) 0 nil])
([nil nil ((15991 . 15992)) nil (26046 47216 933643 597000) 0 nil])
([nil nil ((#("Voltamos ao terminal. Se executarmos docker run --help, notamos as informações apresentadas.

docker run --help
COPIAR CÓDIGO
Além das diversas flags retornadas, o comando docker run segue a seguinte estrutura:

Usage: docker run [OPTIONS] IMAGE [COMMAND] [ARG...]
" 0 93 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 93 94 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 94 112 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 112 126 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 126 211 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 211 212 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 212 265 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -16136) (undo-tree-id284 . -265) (undo-tree-id285 . -265) 16401) nil (26046 47216 933642 658000) 0 nil])
([nil nil ((16136 . 16137)) nil (26046 47216 933640 199000) 0 nil])
([nil nil ((16040 . 16041)) nil (26046 47216 933639 244000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16063 . 16064) (nil fontified nil 16041 . 16064) (16041 . 16064)) nil (26046 47216 933638 202000) 0 nil])
([nil nil ((16064 . 16065)) nil (26046 47216 933636 647000) 0 nil])
([nil nil ((#("O docker run, algumas opções (a serem compreendidas em breve), e o nome da imagem que pretendemos executar. Portanto, hello world é o nome de uma imagem. Aquele nome sem sentido que passamos também foi uma tentativa de nome de uma imagem. Isso significa que, se formos ao Docker Hub e pesquisarmos na parte superior, por exemplo, por hello world, ele vai encontrar essa imagem.
" 0 327 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 327 378 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -16163) (undo-tree-id282 . -378) (undo-tree-id283 . -378) 16541) nil (26046 47216 933635 395000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 16163)) nil (26046 47216 933632 917000) 0 nil])
([nil nil ((#("A imagem oficial significa que ela foi criada e é mantida por um grupo confiável de pessoas desenvolvedoras e tem reconhecimento da comunidade. Ela recebe esse selo de oficial. Na parte inferior da busca, ele mostra as instruções, o que é essa imagem efetivamente, conta uma breve história sobre ela e pronto.

Se tentarmos pesquisar no Docker Hub por aquele nome sem sentido que criamos, nada será encontrado. É por isso que, ao executarmos o docker run com aquele nome sem sentido, não houve sucesso. No entanto, hello world já está disponível.

" 0 310 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 310 311 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 311 499 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 499 547 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 547 548 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -16163) (undo-tree-id280 . -548) (undo-tree-id281 . -548) 16711) nil (26046 47216 933631 607000) 0 nil])
([nil nil ((#("Voltaremos ao terminal, teclamos \"Ctrl + R\", utilizado apenas para encerrar. " 0 77 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -16857) (undo-tree-id278 . -77) (undo-tree-id279 . -77) 16934) nil (26046 47216 934058 549000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 16972) (undo-tree-id335 . -13) (undo-tree-id336 . -13) (undo-tree-id337 . -13) 16985) nil (26046 47313 962221 847000) 0 nil] [nil nil ((#("COPIAR CÓDIGO
Ele acessa o Docker Hub, adquire a imagem e inicia o container. Ou, se optarmos por uma abordagem passo a passo, retornando ao Docker Hub, primeiramente podemos baixar a imagem para posterior execução. Portanto, voltando ao terminal, em vez de docker run ubuntu, podemos utilizar docker pull ubuntu.

docker pull ubuntu
COPIAR CÓDIGO
Obtemos como retorno:

Using default tag: latest

latest: Pulling from library/ubuntu 1

7b1a6ab2e44d: Pull complete

Digest: sha256:626ffe58f6e7566e00254b638eb7e0f3b11d4da9675088f4781a50ae288f3322

Status: Downloaded newer image for ubuntu: latest

docker.io/library/ubuntu: latest

O processo envolve o download, com uma saída inicial semelhante, não indicando localização local, pois estamos solicitando o download. Ele realiza a operação, extrai e, por fim, verifica. No entanto, não executa, pois apenas solicitamos o download da imagem.

Agora, se solicitarmos a execução com o comando, ele não fará o download, pois já possuímos a imagem localmente. Assim, podemos simplesmente inserir docker run ubuntu para que o container seja executado.

E qual é o desdobramento aqui? Nada. Por quê? No momento do comando docker run ubuntu, o que esperávamos? A criação de um container com Ubuntu e a execução de alguma operação. \"Bem-vindo ao Ubuntu,\" talvez.

Conclusão
Contudo, no final, surgem duas perguntas. Por que o container não foi iniciado? Ou será que foi iniciado, e não temos conhecimento? Por que não foi exibida nenhuma saída para nós? São questões que precisamos esclarecer.

O que exatamente o docker run realizou nos bastidores? Sabemos que ele acessou o Docker Hub, adquiriu a imagem (a receita para o container) e executou. Entretanto, como isso efetivamente ocorre, para compreender todo o processo e entender nossas ações?
* Dúvidas que tive
** quando a partir de uma image mysqlX eu subo um container: ao fazer um INSERT na base desse container, ele aparecerá em todos outros novos containers dessa imagem do mysqlX?
Isolamento de Contextos
Como cada contêiner possui seu próprio sistema de arquivos, processo, espaço de rede e recursos, garantindo que a aplicação dentro do contêiner não interfira em outras aplicações ou no sistema hospedeiro, isso proporciorna um alto grau de independência e isolamento.
" 0 14 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 14 307 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 307 314 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 314 315 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 315 334 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 334 348 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 348 370 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 370 371 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 371 397 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 397 398 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 398 436 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 436 437 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 437 465 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 465 466 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 466 546 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 546 547 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 547 597 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 597 598 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 598 631 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 631 632 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 632 814 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 814 891 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 891 892 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 892 1096 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1096 1097 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1097 1304 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1304 1305 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1305 1315 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1315 1391 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1391 1535 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1535 1536 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1536 1787 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1787 1788 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t rear-nonsticky t) 1788 1789 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1789 1791 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 1791 1792 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 1792 1807 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 1807 1808 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t) 1808 1809 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-hide) 1809 1811 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 1811 1983 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 1983 1984 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t) 1984 2008 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 2008 2273 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 2273 2274 (rear-nonsticky t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 2274 2275 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t rear-nonsticky t)) . -16972) (undo-tree-id271 . -2275) (undo-tree-id272 . -546) (undo-tree-id273 . -1984) (undo-tree-id274 . -2275) (undo-tree-id275 . 468) (undo-tree-id276 . -2274) (undo-tree-id277 . -2275) 19247) ((16972 . 19247)) (26046 47216 933620 839000) 0 nil])
([nil nil ((16954 . 16955)) nil (26046 47313 962218 545000) 0 nil])
nil
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -17294) (undo-tree-id333 . -13) (undo-tree-id334 . -13) 17307) nil (26046 47313 962217 299000) 0 nil])
([nil nil ((16973 . 16974)) nil (26046 47313 962214 967000) 0 nil])
([nil nil ((16974 . 16977)) nil (26046 47313 962214 40000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . 16974)) nil (26046 47313 962213 219000) 0 nil])
([nil nil ((16976 . 16988)) nil (26046 47313 962212 339000) 0 nil])
([nil nil ((14743 . 14744)) nil (26046 47313 962211 427000) 0 nil])
([nil nil ((14743 . 14752)) nil (26046 47313 962210 585000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14751) (undo-tree-id332 . -1) 14752) nil (26046 47313 962209 576000) 0 nil])
([nil nil ((14751 . 14760)) nil (26046 47313 962207 609000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14758) (undo-tree-id330 . -1) (#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14759) (undo-tree-id331 . -1) 14760) nil (26046 47313 962206 381000) 0 nil])
([nil nil ((14758 . 14764)) nil (26046 47313 962203 722000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14763) (undo-tree-id329 . -1) 14764) nil (26046 47313 962202 493000) 0 nil])
([nil nil ((14763 . 14767)) nil (26046 47313 962200 611000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14765) (undo-tree-id327 . -1) (#("o" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14766) (undo-tree-id328 . -1) 14767) nil (26046 47313 962199 264000) 0 nil])
([nil nil ((14765 . 14771)) nil (26046 47313 962192 676000) 0 nil])
([nil nil ((17003 . 17005)) nil (26046 47313 962191 764000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17390)) nil (26046 47313 962190 692000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17428)) nil (26046 47313 962441 764000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17456)) nil (26046 47363 593177 603000) 0 nil] [nil nil ((#("D" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17456) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17456)) ((17456 . 17457) (17456 . 17457)) (26046 47313 962184 943000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17536)) nil (26046 47363 593176 462000) 0 nil])
nil
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17586)) nil (26046 47363 593174 747000) 0 nil])
([nil nil ((#("Agora, se solicitarmos a execução com o comando, ele não fará o download, pois já possuímos a imagem localmente. Assim, podemos simplesmente inserir docker run ubuntu para que o container seja executado.

E qual é o desdobramento aqui? Nada. Por quê? No momento do comando docker run ubuntu, o que esperávamos? A criação de um container com Ubuntu e a execução de alguma operação. \"Bem-vindo ao Ubuntu,\" talvez.

Conclusão
Contudo, no final, surgem duas perguntas. Por que o container não foi iniciado? Ou será que foi iniciado, e não temos conhecimento? Por que não foi exibida nenhuma saída para nós? São questões que precisamos esclarecer.

O que exatamente o docker run realizou nos bastidores? Sabemos que ele acessou o Docker Hub, adquiriu a imagem (a receita para o container) e executou. Entretanto, como isso efetivamente ocorre, para compreender todo o processo e entender nossas ações?" 0 154 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 154 204 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 204 205 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 205 412 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 412 413 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 413 423 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 423 499 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 499 643 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 643 644 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 644 704 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 704 895 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 895 896 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -17880) (undo-tree-id338 . -896) (undo-tree-id339 . -896) 18776) nil (26046 47363 593170 701000) 0 nil])
([nil nil ((17002 . 17003) (t 26046 47363 607628 529000)) nil (26046 48012 796777 636000) 0 nil])
([nil nil ((17003 . 17024)) nil (26046 48012 796776 580000) 0 nil])
([nil nil ((17024 . 17028)) nil (26046 48012 796775 941000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17025) (undo-tree-id365 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17026) (undo-tree-id366 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17027) (undo-tree-id367 . -1) 17028) nil (26046 48012 796774 638000) 0 nil])
([nil nil ((17025 . 17026)) nil (26046 48012 796771 284000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17024) (undo-tree-id363 . -1) (#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17025) (undo-tree-id364 . -1) 17026) nil (26046 48012 796770 70000) 0 nil])
([nil nil ((17024 . 17031)) nil (26046 48012 796767 820000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17029) (undo-tree-id361 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17030) (undo-tree-id362 . -1) 17031) nil (26046 48012 796766 720000) 0 nil])
([nil nil ((17029 . 17032)) nil (26046 48012 796763 264000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17030) (undo-tree-id359 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17031) (undo-tree-id360 . -1) 17032) nil (26046 48012 796762 83000) 0 nil])
([nil nil ((17030 . 17034)) nil (26046 48012 796758 945000) 0 nil])
([nil nil ((17034 . 17045)) nil (26046 48012 796757 757000) 0 nil])
([nil nil ((17045 . 17047)) nil (26046 48012 796756 813000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18797 . 18798) (nil fontified nil 18797 . 18798) (nil fontified nil 18589 . 18797) (nil fontified nil 18575 . 18589) (nil fontified nil 18552 . 18575) (nil fontified nil 18551 . 18552) (nil fontified nil 18444 . 18551) (nil fontified nil 18443 . 18444) (nil fontified nil 18203 . 18443) (nil fontified nil 18202 . 18203) (nil fontified nil 18148 . 18202) (nil fontified nil 18147 . 18148) (nil fontified nil 17994 . 18147) (nil fontified nil 17980 . 17994) (nil fontified nil 17960 . 17980) (nil fontified nil 17959 . 17960) (nil fontified nil 17695 . 17959) (nil fontified nil 17694 . 17695) (nil fontified nil 17640 . 17694) (nil fontified nil 17639 . 17640) (nil fontified nil 17617 . 17639) (nil fontified nil 17603 . 17617) (nil fontified nil 17593 . 17603) (nil fontified nil 17592 . 17593) (nil fontified nil 17418 . 17592) (nil fontified nil 17417 . 17418) (nil fontified nil 17242 . 17417) (nil fontified nil 17228 . 17242) (nil fontified nil 17210 . 17228) (nil fontified nil 17209 . 17210) (nil fontified nil 17065 . 17209) (nil fontified nil 17047 . 17065) (17047 . 18798)) nil (26046 48012 796738 782000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17003)) nil (26046 48012 796731 785000) 0 nil])
([nil nil ((17003 . 17004)) nil (26046 48012 796730 945000) 0 nil])
([nil nil ((17045 . 17046)) nil (26046 48012 796729 909000) 0 nil])
([nil nil ((#("Primeiramente, por que o container não funcionou? Retornamos ao nosso terminal mais uma vez. Tentaremos novamente executar o docker run ubuntu.
" 0 144 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17066) (undo-tree-id357 . -144) (undo-tree-id358 . -144) 17210) nil (26046 48012 796728 838000) 0 nil])
([nil nil ((#("Entendendo o erro" 0 17 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17048) (undo-tree-id355 . -17) (undo-tree-id356 . -17) 17065) nil (26046 48012 796726 219000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17048)) nil (26046 48012 796724 5000) 0 nil])
([nil nil ((#("
docker run ubuntu
COPIAR CÓDIGO
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 19 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 19 33 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17048) (undo-tree-id353 . -33) (undo-tree-id354 . -33) 17081) nil (26046 48012 796722 943000) 0 nil])
([nil nil ((#("Sem novidades. Contudo, c" 0 25 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17048) (undo-tree-id351 . -25) (undo-tree-id352 . -25) 17073) nil (26046 48012 796701 942000) 0 nil])
([nil nil ((17048 . 17049)) nil (26046 48012 796699 610000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17047) (undo-tree-id350 . -1)) nil (26046 48012 796698 629000) 0 nil])
([nil nil ((#("	docker run ubuntu

Porém com o comando acima \"nada aconteceu\".
Compreenderemos e exploraremos outros comandos do Docker que nos auxiliarão a verificar se o container de fato foi executado e por que não exibe nada.

Um comando extremamente útil que utilizamos com frequência é o docker ps, que mostra quais containers estão em execução no momento. Limpamos a tela e executaremos docker ps.

docker ps
COPIAR CÓDIGO
Obtemos como retorno:

CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES

Exibiu apenas o cabeçalho. Isso indica que a tabela de containers em execução está vazia. Não há nenhum container de fato em execução. Outra maneira, por mera curiosidade, de utilizar o docker ps, um tanto mais semântica, é através do comando docker container ls.

docker container ls
COPIAR CÓDIGO
É essencialmente o mesmo comando, um pouco mais longo, porém ao mesmo tempo mais semântico. Também apresentará o mesmo resultado que o comando anterior.

CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES

Como percebemos agora, temos ciência de que nosso container não está em execução. Como visualizamos todos os containers, inclusive os que já não estão mais em execução, para determinar se nosso comando docker run teve algum efeito efetivo?

Esse comando pode ser simplesmente o docker ps -a ou docker container ls -a, sendo essencialmente o mesmo.

docker container ls -a
COPIAR CÓDIGO
Executamos e observamos que possui nosso hello-world, executado há nove minutos, o Ubuntu, e outro Ubuntu. Este último é o que configuramos anteriormente, enquanto o primeiro é o último que executamos agora.

" 0 1 (fontified t) 1 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 64 (fontified t) 64 65 (fontified t) 65 215 (fontified t) 215 216 (fontified t) 216 345 (fontified t) 345 390 (fontified t) 390 391 (fontified t) 391 401 (fontified t) 401 415 (fontified t) 415 437 (fontified t) 437 438 (fontified t) 438 492 (fontified t) 492 493 (fontified t) 493 757 (fontified t) 757 758 (fontified t) 758 778 (fontified t) 778 792 (fontified t) 792 890 (fontified t) 890 945 (fontified t) 945 946 (fontified t) 946 1000 (fontified t) 1000 1001 (fontified t) 1001 1241 (fontified t) 1241 1242 (fontified t) 1242 1349 (fontified t) 1349 1350 (fontified t) 1350 1373 (fontified t) 1373 1387 (fontified t) 1387 1445 (fontified t) 1445 1595 (fontified t) 1595 1596 (fontified t rear-nonsticky t)) . 16983) (undo-tree-id344 . -1596) (undo-tree-id345 . -945) (undo-tree-id346 . -19) (undo-tree-id347 . -64) (undo-tree-id348 . -1596) (undo-tree-id349 . -1596) 18579) nil (26046 48012 796696 855000) 0 nil])
([nil nil ((17861 . 17866)) nil (26046 48012 796692 290000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -17865) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 17866) nil (26046 48012 796691 319000) 0 nil])
([nil nil ((17865 . 17877)) nil (26046 48012 796688 662000) 0 nil])
([nil nil ((17877 . 17883)) nil (26046 48012 796639 657000) 0 nil])
([nil nil ((17883 . 17884)) nil (26046 48012 796638 910000) 0 nil])
([nil nil ((nil fontified nil 19479 . 19480) (nil fontified nil 19329 . 19479) (nil fontified nil 19271 . 19329) (nil fontified nil 19257 . 19271) (nil fontified nil 19234 . 19257) (nil fontified nil 19233 . 19234) (nil fontified nil 19126 . 19233) (nil fontified nil 19125 . 19126) (nil fontified nil 18885 . 19125) (nil fontified nil 18884 . 18885) (nil fontified nil 18830 . 18884) (nil fontified nil 18829 . 18830) (nil fontified nil 18774 . 18829) (nil fontified nil 18676 . 18774) (nil fontified nil 18662 . 18676) (nil fontified nil 18642 . 18662) (nil fontified nil 18641 . 18642) (nil fontified nil 18377 . 18641) (nil fontified nil 18376 . 18377) (nil fontified nil 18322 . 18376) (nil fontified nil 18321 . 18322) (nil fontified nil 18299 . 18321) (nil fontified nil 18285 . 18299) (nil fontified nil 18275 . 18285) (nil fontified nil 18274 . 18275) (nil fontified nil 18229 . 18274) (nil fontified nil 18100 . 18229) (nil fontified nil 18099 . 18100) (nil fontified nil 17949 . 18099) (nil fontified nil 17948 . 17949) (nil fontified nil 17905 . 17948) (nil fontified nil 17904 . 17905) (nil fontified nil 17903 . 17904) (nil fontified nil 17885 . 17903) (nil fontified nil 17884 . 17885) (17884 . 19480)) nil (26046 48012 796636 633000) 0 nil])
([nil nil ((16982 . 16983)) nil (26046 48012 796629 894000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17000 . 17001) (nil fontified nil 16984 . 17001) (nil fontified nil 16983 . 16984) (16983 . 17001)) nil (26046 48012 796628 443000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                " 0 7 (face org-indent) 7 16 (face org-indent)))) . 16982) (undo-tree-id340 . -1) (undo-tree-id341 . -1)) nil (26046 48012 796623 721000) 0 nil])
([nil nil ((17001 . 17002) (t 26046 48012 807408 396000)) nil (26046 48200 847230 369000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17001) (undo-tree-id389 . -1) 17002) nil (26046 48200 847229 268000) 0 nil])
([nil nil ((17001 . 17007)) nil (26046 48200 847227 731000) 0 nil])
([nil nil ((17007 . 17028)) nil (26046 48200 847227 32000) 0 nil])
([nil nil ((17028 . 17033)) nil (26046 48200 847226 341000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17031) (undo-tree-id387 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17032) (undo-tree-id388 . -1) 17033) nil (26046 48200 847225 353000) 0 nil])
([nil nil ((17031 . 17052)) nil (26046 48200 847222 984000) 0 nil])
([nil nil ((17052 . 17055)) nil (26046 48200 847221 994000) 0 nil])
([nil nil ((17055 . 17056)) nil (26046 48200 847221 354000) 0 nil])
([nil nil ((17056 . 17065)) nil (26046 48200 847220 355000) 0 nil])
([nil nil ((17065 . 17068)) nil (26046 48200 847219 644000) 0 nil])
([nil nil ((#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17066) (undo-tree-id385 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17067) (undo-tree-id386 . -1) 17068) nil (26046 48200 847218 589000) 0 nil])
([nil nil ((17066 . 17070)) nil (26046 48200 847216 415000) 0 nil])
([nil nil ((#("x" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17069) (undo-tree-id384 . -1) 17070) nil (26046 48200 847215 496000) 0 nil])
([nil nil ((17069 . 17072)) nil (26046 48200 847213 380000) 0 nil])
([nil nil ((#("comandos diversos" 0 17 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 17955) (undo-tree-id382 . -17) (undo-tree-id383 . -17)) nil (26046 48200 847212 192000) 0 nil])
([nil nil ((17955 . 17957)) nil (26046 48200 847113 543000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -17956) (undo-tree-id381 . -1) 17957) nil (26046 48200 847112 689000) 0 nil])
([nil nil ((17956 . 17958)) nil (26046 48200 847111 135000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -17956) (undo-tree-id379 . -1) (#("o" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -17957) (undo-tree-id380 . -1) 17958) nil (26046 48200 847110 71000) 0 nil])
([nil nil ((17956 . 17964)) nil (26046 48200 847107 776000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 17984)) nil (26046 48200 847106 783000) 0 nil])
([nil nil ((18179 . 18180)) nil (26046 48200 847106 42000) 0 nil])
([nil nil ((18180 . 18181)) nil (26046 48200 847105 165000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . -18180) (undo-tree-id378 . -1) 18181) nil (26046 48200 847104 65000) 0 nil])
([nil nil ((18356 . 18357)) nil (26046 48200 847102 675000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 18367) (undo-tree-id376 . -13) (undo-tree-id377 . -13)) nil (26046 48200 847101 734000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 18367)) nil (26046 48200 847099 845000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 18389)) nil (26046 48200 847099 174000) 0 nil])
([nil nil ((18367 . 18368)) nil (26046 48200 847098 505000) 0 nil])
([nil nil ((18688 . 18689)) nil (26046 48200 847097 726000) 0 nil])
([nil nil ((18689 . 18690)) nil (26046 48200 847096 717000) 0 nil])
([nil nil ((#("
docker container ls
COPIAR CÓDIGO" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 21 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 21 34 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 18711) (undo-tree-id374 . -34) (undo-tree-id375 . -34)) nil (26046 48200 847095 900000) 0 nil])
([nil nil ((#(" Também apresentará o mesmo resultado que o comando anterior.

CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES" 0 7 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 7 62 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 62 63 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 63 116 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -18803) (undo-tree-id372 . -116) (undo-tree-id373 . -116) 18919) nil (26046 48200 847093 685000) 0 nil])
([nil nil ((19083 . 19084)) nil (26046 48200 847091 287000) 0 nil])
([nil nil ((19097 . 19098)) nil (26046 48200 847090 538000) 0 nil])
([nil nil ((19101 . 19102)) nil (26046 48200 847089 577000) 0 nil])
([nil nil ((19102 . 19103)) nil (26046 48200 847088 923000) 0 nil])
([nil nil ((19084 . 19085)) nil (26046 48200 847088 98000) 0 nil])
([nil nil ((19126 . 19127)) nil (26046 48200 847087 215000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 19127) (#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 19127)) nil (26046 48200 847086 122000) 0 nil])
([nil nil ((#("
docker container ls -a
COPIAR CÓDIGO" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 24 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 24 37 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -19157) (undo-tree-id370 . -37) (undo-tree-id371 . -37) 19194) nil (26046 48200 847084 988000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19480 . 19481) (nil fontified nil 19391 . 19481) (nil fontified nil 19303 . 19391) (nil fontified nil 19212 . 19303) (nil fontified nil 19158 . 19212) (nil fontified nil 19157 . 19158) (19157 . 19481)) nil (26046 48200 847082 390000) 0 nil])
([nil nil ((19323 . 19327)) nil (26046 48200 847080 497000) 0 nil])
([nil nil ((19232 . 19236)) nil (26046 48200 847079 579000) 0 nil])
([nil nil ((19177 . 19181)) nil (26046 48200 847078 734000) 0 nil])
([nil nil ((19342 . 19346)) nil (26046 48200 847077 959000) 0 nil])
([nil nil ((19246 . 19249)) nil (26046 48200 847077 262000) 0 nil])
([nil nil ((19189 . 19193)) nil (26046 48200 847076 325000) 0 nil])
([nil nil ((19201 . 19214)) nil (26046 48200 847075 622000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -19213) (undo-tree-id369 . -1) 19214) nil (26046 48200 847074 477000) 0 nil])
([nil nil ((19377 . 19381)) nil (26046 48200 847072 585000) 0 nil])
([nil nil ((19477 . 19481)) nil (26046 48200 847071 880000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -19480) (undo-tree-id368 . -1) 19481) nil (26046 48200 847070 770000) 0 nil])
([nil nil ((19220 . 19241)) nil (26046 48200 847063 197000) 0 nil])
([nil nil ((19241 . 19242)) nil (26046 48200 847062 525000) 0 nil])
([nil nil ((19247 . 19248)) nil (26046 48200 847061 814000) 0 nil])
([nil nil ((19338 . 19341)) nil (26046 48200 847060 977000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 19338) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 19338)) nil (26046 48200 847059 974000) 0 nil])
([nil nil ((19340 . 19342)) nil (26046 48200 847058 894000) 0 nil])
([nil nil ((19431 . 19435)) nil (26046 48200 847058 46000) 0 nil])
([nil nil ((19438 . 19439)) nil (26046 48200 847057 42000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 19338)) nil (26046 48200 847055 878000) 0 nil])
([nil nil ((19536 . 19539)) nil (26046 48200 847054 439000) 0 nil])
([nil nil ((19539 . 19540)) nil (26046 48200 847050 450000) 0 nil])
([nil nil ((19766 . 19767) (t 26046 48200 854223 893000)) nil (26046 48581 344070 367000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25038 . 25039) (nil fontified nil 24783 . 25039) (nil fontified nil 24773 . 24783) (nil fontified nil 24772 . 24773) (nil fontified nil 24513 . 24772) (nil fontified nil 24512 . 24513) (nil fontified nil 24195 . 24512) (nil fontified nil 24194 . 24195) (nil fontified nil 23972 . 24194) (nil fontified nil 23971 . 23972) (nil fontified nil 23709 . 23971) (nil fontified nil 23708 . 23709) (nil fontified nil 23562 . 23708) (nil fontified nil 23526 . 23562) (nil fontified nil 23525 . 23526) (nil fontified nil 23278 . 23525) (nil fontified nil 23277 . 23278) (nil fontified nil 22966 . 23277) (nil fontified nil 22894 . 22966) (nil fontified nil 22840 . 22894) (nil fontified nil 22839 . 22840) (nil fontified nil 22818 . 22839) (nil fontified nil 22804 . 22818) (nil fontified nil 22794 . 22804) (nil fontified nil 22793 . 22794) (nil fontified nil 22641 . 22793) (nil fontified nil 22640 . 22641) (nil fontified nil 22354 . 22640) (nil fontified nil 22340 . 22354) (nil fontified nil 22313 . 22340) (nil fontified nil 22312 . 22313) (nil fontified nil 22119 . 22312) (nil fontified nil 22118 . 22119) (nil fontified nil 22073 . 22118) (nil fontified nil 22072 . 22073) (nil fontified nil 22019 . 22072) (nil fontified nil 22018 . 22019) (nil fontified nil 21749 . 22018) (nil fontified nil 21748 . 21749) (nil fontified nil 21567 . 21748) (nil fontified nil 21566 . 21567) (nil fontified nil 21290 . 21566) (nil fontified nil 21289 . 21290) (nil fontified nil 20884 . 21289) (nil fontified nil 20883 . 20884) (nil fontified nil 20572 . 20883) (nil fontified nil 20571 . 20572) (nil fontified nil 20287 . 20571) (nil fontified nil 20286 . 20287) (nil fontified nil 20080 . 20286) (nil fontified nil 20079 . 20080) (nil fontified nil 19767 . 20079) (19767 . 25039)) nil (26046 48581 344067 296000) 0 nil])
([nil nil ((#("Executamos e observamos que possui nosso hello-world, executado há nove minutos, o Ubuntu, e outro Ubuntu. Este último é o que configuramos anteriormente, enquanto o primeiro é o último que executamos agora.
" 0 58 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 58 208 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -19558) (undo-tree-id409 . -208) (undo-tree-id410 . -208) 19766) nil (26046 48581 344056 34000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 19558)) nil (26046 48581 343987 23000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 19965)) nil (26046 48581 343986 66000) 0 nil])
([nil nil ((20076 . 20077)) nil (26046 48581 343985 409000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 20077) (undo-tree-id408 . -1)) nil (26046 48581 343984 591000) 0 nil])
([nil nil ((20674 . 20675)) nil (26046 48581 343983 47000) 0 nil])
([nil nil ((21079 . 21080)) nil (26046 48581 343982 286000) 0 nil])
([nil nil ((21082 . 21083)) nil (26046 48581 343981 327000) 0 nil])
([nil nil ((21358 . 21359)) nil (26046 48581 343980 534000) 0 nil])
([nil nil ((22107 . 22108)) nil (26046 48581 343979 731000) 0 nil])
([nil nil ((22134 . 22135)) nil (26046 48581 343978 812000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -22136) (undo-tree-id406 . -13) (undo-tree-id407 . -13) 22149) nil (26046 48581 343977 724000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22136)) nil (26046 48581 343975 306000) 0 nil])
([nil nil ((#("Então, faremos o seguinte: como travou o terminal, abriremos um novo e faremos o seguinte." 0 90 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -22423) (undo-tree-id404 . -90) (undo-tree-id405 . -90) 22513) nil (26046 48581 343973 880000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 22423)) nil (26046 48581 343970 25000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -22495) (undo-tree-id402 . -13) (undo-tree-id403 . -13) 22508) nil (26046 48581 343968 965000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22517)) nil (26046 48581 343966 645000) 0 nil])
([nil nil ((22642 . 22643)) nil (26046 48581 343965 727000) 0 nil])
([nil nil ((22536 . 22537)) nil (26046 48581 343964 813000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22536)) nil (26046 48581 343963 697000) 0 nil])
([nil nil ((22598 . 22599)) nil (26046 48581 343962 672000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22599)) nil (26046 48581 343961 626000) 0 nil])
([nil nil ((22543 . 22544)) nil (26046 48581 343960 979000) 0 nil])
([nil nil ((22553 . 22561)) nil (26046 48581 343960 265000) 0 nil])
([nil nil ((22568 . 22576)) nil (26046 48581 343959 532000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22574) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22574)) nil (26046 48581 343958 572000) 0 nil])
([nil nil ((#("Como funciona o comando docker run?
A segunda pergunta que precisamos responder é o que aconteceu nos bastidores para que nosso container pudesse ser executado daquela primeira vez?

Na ocasião em que nosso host, o Ubuntu neste caso, executou o comando docker run ubuntu, docker pull ubuntu, ele simplesmente foi até o Docker Hub e solicitou a imagem chamada Ubuntu. O Docker Hub respondeu afirmando ter essa imagem e a disponibilizou para nós.

Realizamos o download dessa imagem, e em seguida, nosso host fez, na etapa em que observamos o digest e sha256, uma validação para assegurar a autenticidade da imagem, verificando se é realmente a imagem que procurávamos.
" 0 36 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 36 182 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 182 183 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 183 251 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 251 445 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 445 446 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 446 668 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -23219) (undo-tree-id399 . -668) (undo-tree-id400 . -36) (undo-tree-id401 . -668) 23887) nil (26046 48581 343957 460000) 0 nil])
([nil nil ((23219 . 23220)) nil (26046 48581 343954 502000) 0 nil])
([nil nil ((22485 . 22486)) nil (26046 48581 343953 852000) 0 nil])
([nil nil ((#("\"" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 22607)) nil (26046 48581 343953 50000) 0 nil])
([nil nil ((22607 . 22608)) nil (26046 48581 343952 339000) 0 nil])
([nil nil ((22616 . 22617)) nil (26046 48581 343951 590000) 0 nil])
([nil nil ((#("Conclusão
Neste vídeo, compreendemos o que mantém um container vivo, a diferença entre um container em execução e um parado, e o que o docker run faz para efetuar a execução de um container quando não possuímos a imagem localmente. Assim, encerramos este vídeo aqui.
" 0 10 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 10 265 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 265 266 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t) 266 267 (rear-nonsticky t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -23801) (undo-tree-id397 . -267) (undo-tree-id398 . -267) 24068) nil (26046 48581 343950 134000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 23221) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 23221)) nil (26046 48581 343947 785000) 0 nil])
([nil nil ((23221 . 23222)) nil (26046 48581 343946 949000) 0 nil])
([nil nil ((#("A" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 23222) (undo-tree-id396 . -1)) nil (26046 48581 343946 104000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -23221) (undo-tree-id394 . -1) (undo-tree-id395 . -1) 23222) nil (26046 48581 343944 324000) 0 nil])
([nil nil ((23221 . 23222)) nil (26046 48581 343941 805000) 0 nil])
([nil nil ((23532 . 23533)) nil (26046 48581 343941 114000) 0 nil])
([nil nil ((23537 . 23538)) nil (26046 48581 343940 327000) 0 nil])
([nil nil ((23221 . 23222)) nil (26046 48581 343939 337000) 0 nil])
([nil nil ((23540 . 23541)) nil (26046 48581 343937 911000) 0 nil])
([nil nil ((#("
Caso não tenhamos cuidado, acabaremos criando containers zumbis que iniciarão e logo encerrarão, pois não teremos nenhum processo impedindo sua finalização. Contudo, agora sabemos que, mantendo pelo menos um processo, nosso container permanecerá em execução.

" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 260 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 260 261 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -23542) (undo-tree-id390 . -261) (undo-tree-id391 . -261) (undo-tree-id392 . -261) (undo-tree-id393 . -261) 23803) nil (26046 48581 343933 704000) 0 nil])
([nil nil ((23947 . 23948) (t 26046 48581 355392 28000)) nil (26046 49011 747226 759000) 0 nil])
([nil nil ((23966 . 23967)) nil (26046 49011 747225 894000) 0 nil])
([nil nil ((24030 . 24034)) nil (26046 49011 747225 180000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24033) (undo-tree-id436 . -1) 24034) nil (26046 49011 747224 87000) 0 nil])
([nil nil ((24033 . 24053)) nil (26046 49011 747222 562000) 0 nil])
([nil nil ((24053 . 24058)) nil (26046 49011 747221 749000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24055) (undo-tree-id433 . -1) (#("-" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24056) (undo-tree-id434 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24057) (undo-tree-id435 . -1) 24058) nil (26046 49011 747220 395000) 0 nil])
([nil nil ((24055 . 24076)) nil (26046 49011 747217 166000) 0 nil])
([nil nil ((24076 . 24097)) nil (26046 49011 747216 425000) 0 nil])
([nil nil ((24097 . 24100)) nil (26046 49011 747215 701000) 0 nil])
([nil nil ((24100 . 24110)) nil (26046 49011 747214 932000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24097) (undo-tree-id420 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24098) (undo-tree-id421 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24099) (undo-tree-id422 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24100) (undo-tree-id423 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24101) (undo-tree-id424 . -1) (#("l" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24102) (undo-tree-id425 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24103) (undo-tree-id426 . -1) (#("ç" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24104) (undo-tree-id427 . -1) (#("ã" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24105) (undo-tree-id428 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24106) (undo-tree-id429 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24107) (undo-tree-id430 . -1) (#("à" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24108) (undo-tree-id431 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24109) (undo-tree-id432 . -1) 24110) nil (26046 49011 747211 540000) 0 nil])
([nil nil ((24097 . 24116)) nil (26046 49011 747199 140000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24115) (undo-tree-id419 . -1) 24116) nil (26046 49011 747198 139000) 0 nil])
([nil nil ((24115 . 24131)) nil (26046 49011 747196 561000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24130) (undo-tree-id418 . -1) 24131) nil (26046 49011 747195 493000) 0 nil])
([nil nil ((24130 . 24132)) nil (26046 49011 747193 800000) 0 nil])
([nil nil ((24132 . 24146)) nil (26046 49011 747192 951000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24143) (undo-tree-id415 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24144) (undo-tree-id416 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24145) (undo-tree-id417 . -1) 24146) nil (26046 49011 747191 746000) 0 nil])
([nil nil ((24143 . 24145)) nil (26046 49011 747188 496000) 0 nil])
([nil nil ((#("k" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24142) (undo-tree-id412 . -1) (#("c" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24143) (undo-tree-id413 . -1) (#("=" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24144) (undo-tree-id414 . -1) 24145) nil (26046 49011 747187 101000) 0 nil])
([nil nil ((24142 . 24144)) nil (26046 49011 747183 317000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -24143) (undo-tree-id411 . -1) 24144) nil (26046 49011 747181 398000) 0 nil])
([nil nil ((24143 . 24147)) nil (26046 49011 747170 516000) 0 nil])
([nil nil ((23542 . 23543) (t 26046 49011 760803 102000)) nil (26046 49844 635788 947000) 0 nil])
([nil nil ((23543 . 23551)) nil (26046 49844 635787 881000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -23549) (undo-tree-id452 . -1) (#("o" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -23550) (undo-tree-id453 . -1) 23551) nil (26046 49844 635786 762000) 0 nil])
([nil nil ((23549 . 23554)) nil (26046 49844 635784 349000) 0 nil])
([nil nil ((23554 . 23555)) nil (26046 49844 635783 483000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37325 . 37326) (nil fontified nil 37184 . 37326) (nil fontified nil 37183 . 37184) (nil fontified nil 36952 . 37183) (nil fontified nil 36942 . 36952) (nil fontified nil 36941 . 36942) (nil fontified nil 36645 . 36941) (nil fontified nil 36573 . 36645) (nil fontified nil 36519 . 36573) (nil fontified nil 36518 . 36519) (nil fontified nil 36381 . 36518) (nil fontified nil 36367 . 36381) (nil fontified nil 36346 . 36367) (nil fontified nil 36343 . 36346) (nil fontified nil 36342 . 36343) (nil fontified nil 36152 . 36342) (nil fontified nil 36069 . 36152) (nil fontified nil 35994 . 36069) (nil fontified nil 35940 . 35994) (nil fontified nil 35939 . 35940) (nil fontified nil 35794 . 35939) (nil fontified nil 35793 . 35794) (nil fontified nil 35732 . 35793) (nil fontified nil 35718 . 35732) (nil fontified nil 35691 . 35718) (nil fontified nil 35690 . 35691) (nil fontified nil 35458 . 35690) (nil fontified nil 35457 . 35458) (nil fontified nil 35198 . 35457) (nil fontified nil 35197 . 35198) (nil fontified nil 35086 . 35197) (nil fontified nil 35085 . 35086) (nil fontified nil 34879 . 35085) (nil fontified nil 34878 . 34879) (nil fontified nil 34665 . 34878) (nil fontified nil 34664 . 34665) (nil fontified nil 34643 . 34664) (nil fontified nil 34629 . 34643) (nil fontified nil 34595 . 34629) (nil fontified nil 34594 . 34595) (nil fontified nil 34569 . 34594) (nil fontified nil 34555 . 34569) (nil fontified nil 34545 . 34555) (nil fontified nil 34529 . 34545) (nil fontified nil 34528 . 34529) (nil fontified nil 34381 . 34528) (nil fontified nil 34367 . 34381) (nil fontified nil 34340 . 34367) (nil fontified nil 34339 . 34340) (nil fontified nil 34230 . 34339) (nil fontified nil 34229 . 34230) (nil fontified nil 34149 . 34229) (nil fontified nil 34135 . 34149) (nil fontified nil 34112 . 34135) (nil fontified nil 34111 . 34112) (nil fontified nil 34017 . 34111) (nil fontified nil 33995 . 34017) (nil fontified nil 33994 . 33995) (nil fontified nil 33834 . 33994) (nil fontified nil 33820 . 33834) (nil fontified nil 33789 . 33820) (nil fontified nil 33788 . 33789) (nil fontified nil 33609 . 33788) (nil fontified nil 33595 . 33609) (nil fontified nil 33570 . 33595) (nil fontified nil 33569 . 33570) (nil fontified nil 33547 . 33569) (nil fontified nil 33477 . 33547) (nil fontified nil 33423 . 33477) (nil fontified nil 33422 . 33423) (nil fontified nil 33413 . 33422) (nil fontified nil 33399 . 33413) (nil fontified nil 33389 . 33399) (nil fontified nil 33388 . 33389) (nil fontified nil 33224 . 33388) (nil fontified nil 33223 . 33224) (nil fontified nil 32973 . 33223) (nil fontified nil 32972 . 32973) (nil fontified nil 32743 . 32972) (nil fontified nil 32693 . 32743) (nil fontified nil 32642 . 32693) (nil fontified nil 32593 . 32642) (nil fontified nil 32539 . 32593) (nil fontified nil 32538 . 32539) (nil fontified nil 32338 . 32538) (nil fontified nil 32324 . 32338) (nil fontified nil 32296 . 32324) (nil fontified nil 32295 . 32296) (nil fontified nil 32222 . 32295) (nil fontified nil 32221 . 32222) (nil fontified nil 32125 . 32221) (nil fontified nil 32124 . 32125) (nil fontified nil 32102 . 32124) (nil fontified nil 32088 . 32102) (nil fontified nil 32054 . 32088) (nil fontified nil 32053 . 32054) (nil fontified nil 31945 . 32053) (nil fontified nil 31860 . 31945) (nil fontified nil 31806 . 31860) (nil fontified nil 31805 . 31806) (nil fontified nil 31688 . 31805) (nil fontified nil 31607 . 31688) (nil fontified nil 31553 . 31607) (nil fontified nil 31552 . 31553) (nil fontified nil 31455 . 31552) (nil fontified nil 31441 . 31455) (nil fontified nil 31415 . 31441) (nil fontified nil 31414 . 31415) (nil fontified nil 31252 . 31414) (nil fontified nil 31202 . 31252) (nil fontified nil 31152 . 31202) (nil fontified nil 31103 . 31152) (nil fontified nil 31049 . 31103) (nil fontified nil 31048 . 31049) (nil fontified nil 30691 . 31048) (nil fontified nil 30677 . 30691) (nil fontified nil 30673 . 30677) (nil fontified nil 30672 . 30673) (nil fontified nil 30623 . 30672) (nil fontified nil 30622 . 30623) (nil fontified nil 30600 . 30622) (nil fontified nil 30599 . 30600) (nil fontified nil 30489 . 30599) (nil fontified nil 30475 . 30489) (nil fontified nil 30441 . 30475) (nil fontified nil 30440 . 30441) (nil fontified nil 30362 . 30440) (nil fontified nil 30348 . 30362) (nil fontified nil 30322 . 30348) (nil fontified nil 30321 . 30322) (nil fontified nil 30221 . 30321) (nil fontified nil 30207 . 30221) (nil fontified nil 30182 . 30207) (nil fontified nil 30181 . 30182) (nil fontified nil 29943 . 30181) (nil fontified nil 29872 . 29943) (nil fontified nil 29818 . 29872) (nil fontified nil 29817 . 29818) (nil fontified nil 29565 . 29817) (nil fontified nil 29564 . 29565) (nil fontified nil 29463 . 29564) (nil fontified nil 29413 . 29463) (nil fontified nil 29364 . 29413) (nil fontified nil 29310 . 29364) (nil fontified nil 29309 . 29310) (nil fontified nil 29203 . 29309) (nil fontified nil 29202 . 29203) (nil fontified nil 29046 . 29202) (nil fontified nil 29032 . 29046) (nil fontified nil 29028 . 29032) (nil fontified nil 29027 . 29028) (nil fontified nil 28795 . 29027) (nil fontified nil 28781 . 28795) (nil fontified nil 28766 . 28781) (nil fontified nil 28765 . 28766) (nil fontified nil 28486 . 28765) (nil fontified nil 28485 . 28486) (nil fontified nil 28282 . 28485) (nil fontified nil 28281 . 28282) (nil fontified nil 28259 . 28281) (nil fontified nil 28258 . 28259) (nil fontified nil 28216 . 28258) (nil fontified nil 28202 . 28216) (nil fontified nil 28174 . 28202) (nil fontified nil 28171 . 28174) (nil fontified nil 28170 . 28171) (nil fontified nil 27950 . 28170) (nil fontified nil 27949 . 27950) (nil fontified nil 27778 . 27949) (nil fontified nil 27777 . 27778) (nil fontified nil 27756 . 27777) (nil fontified nil 27755 . 27756) (nil fontified nil 27621 . 27755) (nil fontified nil 27607 . 27621) (nil fontified nil 27573 . 27607) (nil fontified nil 27572 . 27573) (nil fontified nil 27412 . 27572) (nil fontified nil 27398 . 27412) (nil fontified nil 27369 . 27398) (nil fontified nil 27368 . 27369) (nil fontified nil 27084 . 27368) (nil fontified nil 27070 . 27084) (nil fontified nil 27058 . 27070) (nil fontified nil 27057 . 27058) (nil fontified nil 26863 . 27057) (nil fontified nil 26862 . 26863) (nil fontified nil 26621 . 26862) (nil fontified nil 26577 . 26621) (nil fontified nil 26576 . 26577) (nil fontified nil 26375 . 26576) (nil fontified nil 26374 . 26375) (nil fontified nil 26260 . 26374) (nil fontified nil 26189 . 26260) (nil fontified nil 26135 . 26189) (nil fontified nil 26134 . 26135) (nil fontified nil 25977 . 26134) (nil fontified nil 25963 . 25977) (nil fontified nil 25937 . 25963) (nil fontified nil 25936 . 25937) (nil fontified nil 25670 . 25936) (nil fontified nil 25669 . 25670) (nil fontified nil 25615 . 25669) (nil fontified nil 25614 . 25615) (nil fontified nil 25402 . 25614) (nil fontified nil 25388 . 25402) (nil fontified nil 25363 . 25388) (nil fontified nil 25362 . 25363) (nil fontified nil 24991 . 25362) (nil fontified nil 24949 . 24991) (nil fontified nil 24948 . 24949) (nil fontified nil 24653 . 24948) (nil fontified nil 24652 . 24653) (nil fontified nil 24315 . 24652) (nil fontified nil 24225 . 24315) (nil fontified nil 24136 . 24225) (nil fontified nil 24055 . 24136) (nil fontified nil 23971 . 24055) (nil fontified nil 23901 . 23971) (nil fontified nil 23847 . 23901) (nil fontified nil 23846 . 23847) (nil fontified nil 23749 . 23846) (nil fontified nil 23710 . 23749) (nil fontified nil 23709 . 23710) (nil fontified nil 23555 . 23709) (23555 . 37326)) nil (26046 49844 635773 598000) 0 nil])
([nil nil ((#("Agora, exploraremos alguns comandos adicionais que serão bastante úteis ao longo deste curso, visando o aprimoramento do nosso conhecimento com o Docker.

Analisando outros comandos importantes
O que temos disponível? O que foi abordado até agora? Ao rodarmos o comando docker ps -a, temos:

CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
9159610d06ec	ubuntu	\"sleep id	5 minutes ago	Up 5 minutes	#	funny_pike
9c5828ed7bd3	ubuntu	\"bash\"	7 minutes ago	Exited (0) 7 minute ago	#	hundry_chebyshev
647c30aaa91a	ubuntu	\"bash\"	10 minute ago	Exited (0) 10 minute ago	#	upbeat_black
612083bad906	ubuntu	\"bash\"	13 minute ago	Exited (0) 13 minute ago	#	condescending_panini
aecbfb856a76	hello-world	\"/hello\"	18 minute ago	Exited (0) 18 minute ago	#	relaxed_beaver
Observamos a criação de containers, compreendemos o papel desempenhado pelo comando Docker Run e seu funcionamento, incluindo a configuração do comando padrão, que é inicialmente executado ao lançarmos uma imagem. Também discutimos a substituição desse comando, exemplificando com a adição de um atraso de um dia usando o comando sleep.
" 0 154 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 154 155 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 155 194 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 194 291 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 291 292 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 292 346 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 346 416 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 416 500 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 500 581 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 581 670 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 670 760 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 760 1000 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1000 1097 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -23555) (undo-tree-id450 . -1097) (undo-tree-id451 . -1097) 24652) nil (26046 49844 635728 854000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 23555)) nil (26046 49844 635726 415000) 0 nil])
([nil nil ((23851 . 23857)) nil (26046 49844 635725 491000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . 23857)) nil (26046 49844 635724 109000) 0 nil])
([nil nil ((23857 . 23858)) nil (26046 49844 635723 259000) 0 nil])
([nil nil ((23554 . 23559)) nil (26046 49844 635722 317000) 0 nil])
([nil nil ((#("Contudo, o que mais é essencial compreender? Ainda precisamos abordar o seguinte ponto: ao executarmos novamente o comando docker ps, veremos que nosso container está em execução com o sleep de um dia. No entanto, a execução está vinculada a um terminal bloqueado, o que pode ser inconveniente." 0 294 (fontified t)) . 23560) (undo-tree-id448 . -294) (undo-tree-id449 . -294)) nil (26046 49844 635721 242000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 23560) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 23560)) nil (26046 49844 635718 813000) 0 nil])
([nil nil ((23607 . 23608)) nil (26046 49844 635717 594000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23901 . 23902) (nil fontified nil 23608 . 23902) (23608 . 23902)) nil (26046 49844 635716 180000) 0 nil])
([nil nil ((23902 . 23903)) nil (26046 49844 635714 833000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -24301) (undo-tree-id446 . -13) (undo-tree-id447 . -13) 24314) nil (26046 49844 635713 617000) 0 nil])
([nil nil ((24276 . 24277)) nil (26046 49844 635659 741000) 0 nil])
([nil nil ((#("
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 1 55 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 24515) (undo-tree-id444 . -55) (undo-tree-id445 . -55)) nil (26046 49844 635658 695000) 0 nil])
([nil nil ((23555 . 23561)) nil (26046 49844 635656 581000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 24815) (undo-tree-id441 . -13) (undo-tree-id442 . -13) (undo-tree-id443 . -13)) nil (26046 49844 635655 427000) 0 nil])
([nil nil ((24789 . 24790)) nil (26046 49844 635652 279000) 0 nil])
([nil nil ((25099 . 25100)) nil (26046 49844 635651 405000) 0 nil])
([nil nil ((25002 . 25003)) nil (26046 49844 635650 495000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -25057) (undo-tree-id440 . -1) 25058) nil (26046 49844 635649 375000) 0 nil])
([nil nil ((25057 . 25058)) nil (26046 49844 635647 581000) 0 nil])
([nil nil ((25059 . 25060)) nil (26046 49844 635646 737000) 0 nil])
([nil nil ((#("'" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -25059) (undo-tree-id439 . -1) 25060) nil (26046 49844 635645 879000) 0 nil])
([nil nil ((25059 . 25060)) nil (26046 49844 635644 27000) 0 nil])
([nil nil ((25003 . 25006)) nil (26046 49844 635643 208000) 0 nil])
([nil nil ((25014 . 25018)) nil (26046 49844 635642 302000) 0 nil])
([nil nil ((25018 . 25022)) nil (26046 49844 635641 619000) 0 nil])
([nil nil ((25029 . 25036)) nil (26046 49844 635640 752000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -25035) (undo-tree-id438 . -1) 25036) nil (26046 49844 635639 895000) 0 nil])
([nil nil ((25437 . 25442)) nil (26046 49844 635637 880000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 23566) (#("*" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . 23566) (#("*" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-hide)) . 23566) (#("*" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-hide)) . 23566) (#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide)) . 23566) (#("*" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-hide)) . 23566)) nil (26046 49844 635636 458000) 0 nil])
([nil nil ((23607 . 23608)) nil (26046 49844 635634 725000) 0 nil])
([nil nil ((23608 . 23609)) nil (26046 49844 635634 16000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25449 . 25450) (nil fontified nil 25438 . 25450) (25438 . 25450)) nil (26046 49844 635633 68000) 0 nil])
([nil nil ((25450 . 25494) (#("Como interagir com um container em execução" 0 43 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 25450)) nil (26046 49844 635631 292000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t rear-nonsticky t face org-level-4)) . -25449) (undo-tree-id437 . -1) 25450) nil (26046 49844 635626 953000) 0 nil])
([nil nil ((#("Vamos um pouco mais além. Nosso container Ubuntu, que estamos usando para exemplificar, está em execução, mas como interagimos com ele? Porque, inicialmente, não conseguimos fazer nada, ele está em execução, mas não está servindo para nada.

Então, como podemos interagir com esse container de maneira interativa, para que possamos fazer alguma coisa? Existe um comando também dentro desse universo todo do Docker, que é o docker exec.
" 0 241 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 241 242 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 242 436 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 25494) (undo-tree-id465 . -436) (undo-tree-id466 . -423) (undo-tree-id467 . -436) (undo-tree-id468 . -436) (t 26046 49844 647454 776000)) nil (26047 47068 965546 331000) 0 nil])
([nil nil ((25495 . 25496)) nil (26047 47068 965542 730000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 25494)) nil (26047 47068 965541 571000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 6 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 6 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25507) (undo-tree-id460 . -13) (undo-tree-id461 . -13) (undo-tree-id462 . -13) (undo-tree-id463 . -13) (undo-tree-id464 . -13) 25520) nil (26047 47068 965540 143000) 0 nil])
([nil nil ((25507 . 25508)) nil (26047 47068 965535 365000) 0 nil])
([nil nil ((25495 . 25496)) nil (26047 47068 965534 387000) 0 nil])
([nil nil ((25496 . 25497)) nil (26047 47068 965533 415000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 25825) (undo-tree-id457 . -13) (undo-tree-id458 . -13) (undo-tree-id459 . -13)) nil (26047 47068 965532 259000) 0 nil])
([nil nil ((25796 . 25797)) nil (26047 47068 965529 339000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 26022) (undo-tree-id454 . -13) (undo-tree-id455 . -13) (undo-tree-id456 . -13)) nil (26047 47068 965527 369000) 0 nil])
([nil nil ((25988 . 25989)) nil (26047 47068 965702 819000) 0 nil])
([nil nil ((25432 . 25433)) nil (26047 47319 327847 234000) 0 nil] [nil nil ((25989 . 25990)) ((#("/" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)))) . 25989) (undo-tree-id469 . -1)) (26047 47068 965513 425000) 0 nil])
([nil nil ((25433 . 25454)) nil (26047 47319 327846 568000) 0 nil])
nil
([nil nil ((25454 . 25460)) nil (26047 47319 327845 744000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25459) (undo-tree-id490 . -1) 25460) nil (26047 47319 327844 708000) 0 nil])
([nil nil ((25459 . 25471)) nil (26047 47319 327843 76000) 0 nil])
([nil nil ((25471 . 25475)) nil (26047 47319 327842 90000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25474) (undo-tree-id489 . -1) 25475) nil (26047 47319 327841 143000) 0 nil])
([nil nil ((25474 . 25495)) nil (26047 47319 327839 375000) 0 nil])
([nil nil ((25495 . 25498)) nil (26047 47319 327838 459000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25497) (undo-tree-id488 . -1) 25498) nil (26047 47319 327837 476000) 0 nil])
([nil nil ((25497 . 25514)) nil (26047 47319 327835 806000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25513) (undo-tree-id487 . -1) 25514) nil (26047 47319 327834 887000) 0 nil])
([nil nil ((25513 . 25516)) nil (26047 47319 327833 72000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25515) (undo-tree-id486 . -1) 25516) nil (26047 47319 327832 112000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25513) (undo-tree-id484 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25514) (undo-tree-id485 . -1) 25515) nil (26047 47319 327830 140000) 0 nil])
([nil nil ((25513 . 25525)) nil (26047 47319 327827 461000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25521) (undo-tree-id480 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25522) (undo-tree-id481 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25523) (undo-tree-id482 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25524) (undo-tree-id483 . -1) 25525) nil (26047 47319 327825 975000) 0 nil])
([nil nil ((25521 . 25523)) nil (26047 47319 327822 122000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25521) (undo-tree-id478 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25522) (undo-tree-id479 . -1) 25523) nil (26047 47319 327820 516000) 0 nil])
([nil nil ((25521 . 25542)) nil (26047 47319 327818 13000) 0 nil])
([nil nil ((#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25538) (undo-tree-id474 . -1) (#("l" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25539) (undo-tree-id475 . -1) (#("h" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25540) (undo-tree-id476 . -1) (#("=" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25541) (undo-tree-id477 . -1) 25542) nil (26047 47319 327816 550000) 0 nil])
([nil nil ((25538 . 25545)) nil (26047 47319 327811 472000) 0 nil])
([nil nil ((25545 . 25552)) nil (26047 47319 327810 711000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -25551) (undo-tree-id473 . -1) 25552) nil (26047 47319 327809 623000) 0 nil])
([nil nil ((25551 . 25559)) nil (26047 47319 327807 685000) 0 nil])
([nil nil ((25433 . 25434)) nil (26047 47319 327806 814000) 0 nil])
([nil nil ((25560 . 25561)) nil (26047 47319 327805 929000) 0 nil])
([nil nil ((25560 . 25569)) nil (26047 47319 327805 277000) 0 nil])
([nil nil ((25569 . 25585)) nil (26047 47319 327804 496000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25583) (undo-tree-id471 . -1) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25584) (undo-tree-id472 . -1) 25585) nil (26047 47319 327803 352000) 0 nil])
([nil nil ((25583 . 25604)) nil (26047 47319 327800 469000) 0 nil])
([nil nil ((25604 . 25606)) nil (26047 47319 327799 549000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25605) (undo-tree-id470 . -1) 25606) nil (26047 47319 327797 985000) 0 nil])
([nil nil ((25605 . 25608)) nil (26047 47319 328014 759000) 0 nil])
([nil nil ((25608 . 25613)) nil (26047 47336 531446 792000) 0 nil] [nil nil ((25608 . 25613)) ((#("guia " 0 5 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . 25608) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5)) (26047 47319 327787 214000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25624 . 25625) (nil fontified nil 25613 . 25625) (25613 . 25625)) nil (26047 47336 531445 724000) 0 nil])
nil
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25612) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (#("f" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25613) (undo-tree-id501 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25614) (undo-tree-id502 . -1) (#("9" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25615) (undo-tree-id503 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25616) (undo-tree-id504 . -1) (#("6" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25617) (undo-tree-id505 . -1) (#("5" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25618) (undo-tree-id506 . -1) (#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25619) (undo-tree-id507 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25620) (undo-tree-id508 . -1) (#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25621) (undo-tree-id509 . -1) (#("2" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25622) (undo-tree-id510 . -1) (#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25623) (undo-tree-id511 . -1) (#("f" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t face (bold) font-lock-multiline t org-emphasis t)) . -25624) (undo-tree-id512 . -1) 25625) nil (26047 47336 531442 289000) 0 nil])
([nil nil ((25612 . 25613)) nil (26047 47336 531429 309000) 0 nil])
([nil nil ((25613 . 25622)) nil (26047 47336 531428 134000) 0 nil])
([nil nil ((#("?" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25621) (undo-tree-id497 . -1) 25622) nil (26047 47336 531426 964000) 0 nil])
([nil nil ((25621 . 25623)) nil (26047 47336 531425 109000) 0 nil])
([nil nil ((#("?" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25620) (undo-tree-id494 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25621) (undo-tree-id495 . -1) (#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25622) (undo-tree-id496 . -1) 25623) nil (26047 47336 531423 21000) 0 nil])
([nil nil ((25620 . 25637)) nil (26047 47336 531410 66000) 0 nil])
([nil nil ((#("pilha de execução" 0 17 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25538) (undo-tree-id556 . -17) (undo-tree-id557 . -17) 25555 (t 26047 47336 546756 987000)) nil (26047 47888 665724 602000) 0 nil])
([nil nil ((25538 . 25556)) nil (26047 47888 665648 760000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25554) (undo-tree-id554 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -25555) (undo-tree-id555 . -1) 25556) nil (26047 47888 665647 537000) 0 nil])
([nil nil ((25554 . 25557)) nil (26047 47888 665645 291000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -26813) (undo-tree-id552 . -13) (undo-tree-id553 . -13) 26826) nil (26047 47888 665644 367000) 0 nil])
([nil nil ((26785 . 26786)) nil (26047 47888 665641 970000) 0 nil])
([nil nil ((26782 . 26783)) nil (26047 47888 665641 216000) 0 nil])
([nil nil ((#("Entretanto, em nossa máquina, o que ocorrerá? Ao abrir nossa home, não encontraremos nada, pois os sistemas de arquivos são isolados, graças ao namespace de mnt; o filesystem está completamente isolado.

Podemos fazer diversas coisas agora nesse Ubuntu, porque ele estará devidamente isolado do nosso sistema. Poderíamos executar os comandos do apt, então apt-get update, apt-get install, coisas assim, conforme a nossa demanda, que estarão todas isoladas do nosso sistema original.

apt-get update
COPIAR CÓDIGO
Interrompemos a execução do apt-update porque não nos importamos com isso. Vamos limpar a tela usando \"ctrl + L\". Todas as ações serão realizadas dentro do terminal, desse container. Podemos executar o comando para o Ubuntu, o top.
" 0 203 (fontified t) 203 204 (fontified t) 204 392 (fontified t) 392 483 (fontified t) 483 484 (fontified t) 484 499 (fontified t) 499 513 (fontified t) 513 745 (fontified t)) . 26882) (undo-tree-id549 . -745) (undo-tree-id550 . -483) (undo-tree-id551 . -745) 27627) nil (26047 47888 665640 216000) 0 nil])
([nil nil ((26883 . 26884)) nil (26047 47888 665637 280000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 26888) (undo-tree-id547 . -13) (undo-tree-id548 . -13)) nil (26047 47888 665636 432000) 0 nil])
([nil nil ((#("
eu-sou-um-arquivo.txt

" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 23 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 23 24 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 26858) (undo-tree-id545 . -24) (undo-tree-id546 . -24)) nil (26047 47888 665634 342000) 0 nil])
([nil nil ((#(" Executaremos um \"Ctrl + D\"" 0 27 (fontified t)) . 27485) (undo-tree-id543 . -27) (undo-tree-id544 . -27) 27512) nil (26047 47888 665632 300000) 0 nil])
([nil nil ((26560 . 26561)) nil (26047 47888 665629 902000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil)) . 26561) (undo-tree-id542 . -1) (26560 . 26561) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 26559) (26560 . 26561) 26561) nil (26047 47888 665628 759000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil)) . 26561) (undo-tree-id541 . -1) (26560 . 26561) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 26559) (26560 . 26561) 26561) nil (26047 47888 665626 274000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26587 . 26588) (nil fontified nil 26561 . 26588) (26561 . 26588)) nil (26047 47888 665624 256000) 0 nil])
([nil nil ((26588 . 26589)) nil (26047 47888 665623 210000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 26561)) nil (26047 47888 665622 213000) 0 nil])
([nil nil ((26587 . 26592)) nil (26047 47888 665621 366000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -26588) (undo-tree-id537 . -1) (#("a" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -26589) (undo-tree-id538 . -1) (#("r" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -26590) (undo-tree-id539 . -1) (#("a" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -26591) (undo-tree-id540 . -1) 26592) nil (26047 47888 665619 916000) 0 nil])
([nil nil ((26588 . 26598)) nil (26047 47888 665614 401000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -26596) (undo-tree-id535 . -1) (#(" " 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -26597) (undo-tree-id536 . -1) 26598) nil (26047 47888 665613 302000) 0 nil])
([nil nil ((26596 . 26611)) nil (26047 47888 665610 907000) 0 nil])
([nil nil ((28120 . 28124)) nil (26047 47888 665609 878000) 0 nil])
([nil nil ((#("A" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28122) (undo-tree-id533 . -1) (#("P" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28123) (undo-tree-id534 . -1) 28124) nil (26047 47888 665608 625000) 0 nil])
([nil nil ((28122 . 28125)) nil (26047 47888 665605 651000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28124) (undo-tree-id532 . -1) 28125) nil (26047 47888 665604 594000) 0 nil])
([nil nil ((28124 . 28125)) nil (26047 47888 665603 139000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28124) (undo-tree-id531 . -1) 28125) nil (26047 47888 665601 982000) 0 nil])
([nil nil ((28124 . 28134)) nil (26047 47888 665600 315000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28133) (undo-tree-id530 . -1) 28134) nil (26047 47888 665599 246000) 0 nil])
([nil nil ((28133 . 28146)) nil (26047 47888 665597 772000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28143) (undo-tree-id527 . -1) (#("l" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28144) (undo-tree-id528 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28145) (undo-tree-id529 . -1) 28146) nil (26047 47888 665596 431000) 0 nil])
([nil nil ((28143 . 28144)) nil (26047 47888 665593 4000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28143) (undo-tree-id526 . -1) 28144) nil (26047 47888 665591 723000) 0 nil])
([nil nil ((28143 . 28158)) nil (26047 47888 665590 53000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28157) (undo-tree-id525 . -1) 28158) nil (26047 47888 665589 126000) 0 nil])
([nil nil ((28157 . 28160)) nil (26047 47888 665587 544000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28159) (undo-tree-id524 . -1) 28160) nil (26047 47888 665586 390000) 0 nil])
([nil nil ((28159 . 28163)) nil (26047 47888 665584 322000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28162) (undo-tree-id523 . -1) 28163) nil (26047 47888 665583 203000) 0 nil])
([nil nil ((28162 . 28170)) nil (26047 47888 665581 493000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28168) (undo-tree-id521 . -1) (#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28169) (undo-tree-id522 . -1) 28170) nil (26047 47888 665580 297000) 0 nil])
([nil nil ((28168 . 28176)) nil (26047 47888 665577 661000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28175) (undo-tree-id520 . -1) 28176) nil (26047 47888 665576 407000) 0 nil])
([nil nil ((28175 . 28185)) nil (26047 47888 665574 663000) 0 nil])
([nil nil ((28185 . 28192)) nil (26047 47888 665573 848000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28189) (undo-tree-id517 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28190) (undo-tree-id518 . -1) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28191) (undo-tree-id519 . -1) 28192) nil (26047 47888 665572 322000) 0 nil])
([nil nil ((28189 . 28210)) nil (26047 47888 665568 447000) 0 nil])
([nil nil ((28210 . 28211)) nil (26047 47888 665567 762000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 28283) (undo-tree-id514 . -13) (undo-tree-id515 . -13) (undo-tree-id516 . -13)) nil (26047 47888 665566 675000) 0 nil])
([nil nil ((28994 . 28995)) nil (26047 47888 665562 937000) 0 nil])
([nil nil ((29046 . 29047)) nil (26047 47888 665562 223000) 0 nil])
([nil nil ((28999 . 29000)) nil (26047 47888 665561 350000) 0 nil])
([nil nil ((29052 . 29053)) nil (26047 47888 665560 375000) 0 nil])
([nil nil ((29060 . 29061)) nil (26047 47888 665559 631000) 0 nil])
([nil nil ((29112 . 29113)) nil (26047 47888 665558 753000) 0 nil])
([nil nil ((29163 . 29164)) nil (26047 47888 665557 853000) 0 nil])
([nil nil ((29059 . 29060)) nil (26047 47888 665556 864000) 0 nil])
([nil nil ((29113 . 29117)) nil (26047 47888 665556 164000) 0 nil])
([nil nil ((29169 . 29173)) nil (26047 47888 665555 239000) 0 nil])
([nil nil ((#("	" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 29173)) nil (26047 47888 665554 182000) 0 nil])
([nil nil ((29173 . 29174)) nil (26047 47889 368488 551000) 0 nil])
([nil nil ((29353 . 29354)) nil (26047 48491 472806 325000) 0 nil] [nil nil ((29285 . 29286)) ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 29285) (undo-tree-id559 . -1)) (26047 47889 48722 68000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 29380) (undo-tree-id671 . -13) (undo-tree-id672 . -13)) nil (26047 48491 472805 503000) 0 nil])
([nil nil ((29286 . 29287)) ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)))) . 29286)) (26047 47888 768603 290000) 0 nil])
([nil nil ((#("
Se executarmos um docker ps, ele permanecerá presente, mas em um estado de pausa, não de parada.

CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
9159610d06ec	ubuntu	\"sleep id	16 minutes ago	Up 55 seconds (Paused)	#	funny_pike
Ao realizar novamente um docker ps, observe que o status permanece inalterado, a contagem continua na coluna \"time\".

CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
9159610d06ec	ubuntu	\"sleep id	16 minutes ago	Up about a minute (Paused)	#	funny_pike
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 98 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 98 99 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 99 153 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 153 198 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 198 234 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 234 351 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 351 352 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 352 406 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 406 491 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -29380) (undo-tree-id669 . -491) (undo-tree-id670 . -491) 29871) nil (26047 48491 472803 238000) 0 nil])
([nil nil ((29300 . 29301)) ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)) fontified t)) . 29300) (undo-tree-id558 . -1)) (26047 47888 665885 529000) 0 nil])
([nil nil ((29380 . 29381)) nil (26047 48491 472801 193000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)) fontified t)) . -29300) (undo-tree-id513 . -1) 29301) ((29300 . 29301)) (26047 47888 665545 989000) 0 nil])
([nil nil ((29190 . 29191)) nil (26047 48491 472800 488000) 0 nil])
nil
([nil nil ((29191 . 29207)) nil (26047 48491 472799 802000) 0 nil])
([nil nil ((29207 . 29369) (#("Se simplesmente sairmos do terminal mais uma vez e executarmos outro comando, como por exemplo docker pause passando o id do container; nós pausamos o container." 0 95 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 95 108 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 108 161 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 29207)) nil (26047 48491 472798 987000) 0 nil])
([nil nil ((29207 . 29213)) nil (26047 48491 472798 75000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -29212) (undo-tree-id668 . -1) 29213) nil (26047 48491 472797 273000) 0 nil])
([nil nil ((29212 . 29215)) nil (26047 48491 472795 793000) 0 nil])
([nil nil ((29758 . 29759)) nil (26047 48491 472795 21000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 29787) (undo-tree-id666 . -13) (undo-tree-id667 . -13)) nil (26047 48491 472794 208000) 0 nil])
([nil nil ((30068 . 30071)) nil (26047 48491 472792 290000) 0 nil])
([nil nil ((30013 . 30017)) nil (26047 48491 472791 633000) 0 nil])
([nil nil ((30075 . 30078)) nil (26047 48491 472790 978000) 0 nil])
([nil nil ((30049 . 30053)) nil (26047 48491 472790 321000) 0 nil])
([nil nil ((30071 . 30073)) nil (26047 48491 472789 569000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 30079) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 30079)) nil (26047 48491 472788 781000) 0 nil])
([nil nil ((30021 . 30025)) nil (26047 48491 472787 881000) 0 nil])
([nil nil ((30092 . 30097)) nil (26047 48491 472787 184000) 0 nil])
([nil nil ((30149 . 30154)) nil (26047 48491 472786 542000) 0 nil])
([nil nil ((30205 . 30210)) nil (26047 48491 472785 746000) 0 nil])
([nil nil ((30225 . 30226)) nil (26047 48491 472785 75000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30883) (undo-tree-id664 . -13) (undo-tree-id665 . -13) 30896) nil (26047 48491 472784 145000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -31066) (undo-tree-id662 . -13) (undo-tree-id663 . -13) 31079) nil (26047 48491 472781 736000) 0 nil])
([nil nil ((31041 . 31042)) nil (26047 48491 472779 341000) 0 nil])
([nil nil ((#("
docker ps

Obtemos:

CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
9159610d06ec	ubuntu	\"sleep id	17 minutes ago	Up 2 minute	#	funny_pike
Logo após, digitamos:
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1 11 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 11 12 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 12 21 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 21 22 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 22 71 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 71 76 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 76 146 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 146 168 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30872) (undo-tree-id660 . -168) (undo-tree-id661 . -168) 31040) nil (26047 48491 472778 340000) 0 nil])
([nil nil ((#("Agora, um último detalhe para entender. Vamos executar um docker ps, mas desta vez, pegaremos o ID do nosso container e executaremos um docker stop nele novamente.

	docker stop 9159610d06ec

Se desejarmos evitar que ele leve 10 segundos para executar, podemos usar a flag -t = 0, colocando-a antes do nome do nosso container, para que não haja tempo de espera ao parar.

docker stop -t=0 9159610d06ec 
COPIAR CÓDIGO
Por padrão, o container espera 10 segundos para encerrar de maneira adequada. Se quisermos ser rápidos, simplesmente usamos -t = 0 para uma parada instantânea.
" 0 164 (fontified t) 164 165 (fontified t) 165 166 (fontified t) 166 191 (fontified t) 191 192 (fontified t) 192 371 (fontified t) 371 372 (fontified t) 372 403 (fontified t) 403 417 (fontified t) 417 577 (fontified t)) . 30708) (undo-tree-id658 . -577) (undo-tree-id659 . -577) 31285) nil (26047 48491 472776 181000) 0 nil])
([nil nil ((25640 . 25642)) nil (26047 48491 472774 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26218 . 26219) (nil fontified nil 26059 . 26219) (nil fontified nil 26045 . 26059) (nil fontified nil 26014 . 26045) (nil fontified nil 26013 . 26014) (nil fontified nil 25834 . 26013) (nil fontified nil 25833 . 25834) (nil fontified nil 25808 . 25833) (nil fontified nil 25807 . 25808) (nil fontified nil 25806 . 25807) (nil fontified nil 25642 . 25806) (25642 . 26219)) nil (26047 48491 472772 987000) 0 nil])
([nil nil ((28699 . 28700)) nil (26047 48491 472770 494000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -28699) (undo-tree-id657 . -1) 28700) nil (26047 48491 472769 635000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30129) (undo-tree-id655 . -13) (undo-tree-id656 . -13) 30142) nil (26047 48491 472767 900000) 0 nil])
([nil nil ((30095 . 30096)) nil (26047 48491 472765 946000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 30250)) nil (26047 48491 472765 195000) 0 nil])
([nil nil ((30250 . 30251)) nil (26047 48491 472764 530000) 0 nil])
([nil nil ((30554 . 30555)) nil (26047 48491 472763 794000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30554) (undo-tree-id654 . -1) 30555) nil (26047 48491 472762 920000) 0 nil])
([nil nil ((30554 . 30555)) nil (26047 48491 472761 516000) 0 nil])
([nil nil ((30355 . 30356)) nil (26047 48491 472760 868000) 0 nil])
([nil nil ((30556 . 30559)) nil (26047 48491 472760 198000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30556) (undo-tree-id651 . -1) (#(")" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30557) (undo-tree-id652 . -1) (#("A" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30558) (undo-tree-id653 . -1) 30559) nil (26047 48491 472758 935000) 0 nil])
([nil nil ((30556 . 30569)) nil (26047 48491 472756 114000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -30555) (undo-tree-id650 . -1) 30556) nil (26047 48491 472755 234000) 0 nil])
([nil nil ((30568 . 30571)) nil (26047 48491 472753 791000) 0 nil])
([nil nil ((30571 . 30592)) nil (26047 48491 472753 115000) 0 nil])
([nil nil ((30592 . 30596)) nil (26047 48491 472752 352000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30595) (undo-tree-id649 . -1) 30596) nil (26047 48491 472751 425000) 0 nil])
([nil nil ((30595 . 30604)) nil (26047 48491 472750 56000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30602) (undo-tree-id647 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30603) (undo-tree-id648 . -1) 30604) nil (26047 48491 472748 938000) 0 nil])
([nil nil ((30602 . 30615)) nil (26047 48491 472746 508000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30614) (undo-tree-id646 . -1) 30615) nil (26047 48491 472745 520000) 0 nil])
([nil nil ((30614 . 30616)) nil (26047 48491 472744 30000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30615) (undo-tree-id645 . -1) 30616) nil (26047 48491 472743 171000) 0 nil])
([nil nil ((30615 . 30618)) nil (26047 48491 472741 663000) 0 nil])
([nil nil ((30618 . 30621)) nil (26047 48491 472740 640000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30618) (undo-tree-id642 . -1) (#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30619) (undo-tree-id643 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30620) (undo-tree-id644 . -1) 30621) nil (26047 48491 472739 339000) 0 nil])
([nil nil ((30618 . 30621)) nil (26047 48491 472735 943000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30618) (undo-tree-id639 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30619) (undo-tree-id640 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30620) (undo-tree-id641 . -1) 30621) nil (26047 48491 472734 743000) 0 nil])
([nil nil ((30618 . 30633)) nil (26047 48491 472731 644000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30631) (undo-tree-id637 . -1) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30632) (undo-tree-id638 . -1) 30633) nil (26047 48491 472730 635000) 0 nil])
([nil nil ((30631 . 30636)) nil (26047 48491 472728 340000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30634) (undo-tree-id635 . -1) (#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30635) (undo-tree-id636 . -1) 30636) nil (26047 48491 472727 220000) 0 nil])
([nil nil ((30634 . 30642)) nil (26047 48491 472724 994000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30641) (undo-tree-id634 . -1) 30642) nil (26047 48491 472724 124000) 0 nil])
([nil nil ((30641 . 30657)) nil (26047 48491 472722 686000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30654) (undo-tree-id631 . -1) (#("ç" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30655) (undo-tree-id632 . -1) (#("ã" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30656) (undo-tree-id633 . -1) 30657) nil (26047 48491 472721 493000) 0 nil])
([nil nil ((30654 . 30656)) nil (26047 48491 472718 392000) 0 nil])
([nil nil ((#("ã" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30654) (undo-tree-id629 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30655) (undo-tree-id630 . -1) 30656) nil (26047 48491 472717 37000) 0 nil])
([nil nil ((30654 . 30658)) nil (26047 48491 472712 705000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30657) (undo-tree-id628 . -1) 30658) nil (26047 48491 472711 894000) 0 nil])
([nil nil ((30657 . 30665)) nil (26047 48491 472710 236000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30663) (undo-tree-id626 . -1) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30664) (undo-tree-id627 . -1) 30665) nil (26047 48491 472708 871000) 0 nil])
([nil nil ((30663 . 30664)) nil (26047 48491 472706 473000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30662) (undo-tree-id624 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -30663) (undo-tree-id625 . -1) 30664) nil (26047 48491 472705 476000) 0 nil])
([nil nil ((30662 . 30668)) nil (26047 48491 472703 249000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 31388) (undo-tree-id623 . -1)) nil (26047 48491 472702 329000) 0 nil])
([nil nil ((31389 . 31393)) nil (26047 48491 472701 46000) 0 nil])
([nil nil ((29770 . 29771)) nil (26047 48491 472700 424000) 0 nil])
([nil nil ((31390 . 31391)) nil (26047 48491 472699 705000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 31535) (undo-tree-id621 . -13) (undo-tree-id622 . -13) 31548) nil (26047 48491 472698 739000) 0 nil])
([nil nil ((31512 . 31513)) nil (26047 48491 472696 142000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 31755) (undo-tree-id619 . -13) (undo-tree-id620 . -13)) nil (26047 48491 472695 330000) 0 nil])
([nil nil ((31728 . 31729)) nil (26047 48491 472693 280000) 0 nil])
([nil nil ((31617 . 31618)) nil (26047 48491 472692 531000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 31618)) nil (26047 48491 472691 687000) 0 nil])
([nil nil ((32040 . 32041)) nil (26047 48491 472690 976000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 32041)) nil (26047 48491 472690 215000) 0 nil])
([nil nil ((32041 . 32042)) nil (26047 48491 472689 544000) 0 nil])
([nil nil ((32041 . 32049)) nil (26047 48491 472688 884000) 0 nil])
([nil nil ((32049 . 32061)) nil (26047 48491 472688 121000) 0 nil])
([nil nil ((32042 . 32049)) nil (26047 48491 472687 408000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32048) (undo-tree-id618 . -1) 32049) nil (26047 48491 472686 534000) 0 nil])
([nil nil ((32048 . 32050)) nil (26047 48491 472684 911000) 0 nil])
([nil nil ((32069 . 32079)) nil (26047 48491 472684 267000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32077) (undo-tree-id616 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32078) (undo-tree-id617 . -1) 32079) nil (26047 48491 472683 292000) 0 nil])
([nil nil ((32077 . 32078)) nil (26047 48491 472681 24000) 0 nil])
([nil nil ((32078 . 32087)) nil (26047 48491 472680 383000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32086) (undo-tree-id615 . -1) 32087) nil (26047 48491 472679 528000) 0 nil])
([nil nil ((32086 . 32107)) nil (26047 48491 472678 88000) 0 nil])
([nil nil ((32107 . 32128)) nil (26047 48491 472677 444000) 0 nil])
([nil nil ((32128 . 32130)) nil (26047 48491 472676 651000) 0 nil])
([nil nil ((32130 . 32141)) nil (26047 48491 472675 958000) 0 nil])
([nil nil ((32101 . 32118)) nil (26047 48491 472675 182000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32142) (undo-tree-id599 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32143) (undo-tree-id600 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32144) (undo-tree-id601 . -1) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32145) (undo-tree-id602 . -1) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32146) (undo-tree-id603 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32147) (undo-tree-id604 . -1) (#("g" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32148) (undo-tree-id605 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32149) (undo-tree-id606 . -1) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32150) (undo-tree-id607 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32151) (undo-tree-id608 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32152) (undo-tree-id609 . -1) (#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32153) (undo-tree-id610 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32154) (undo-tree-id611 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32155) (undo-tree-id612 . -1) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32156) (undo-tree-id613 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32157) (undo-tree-id614 . -1) 32158) nil (26047 48491 472671 863000) 0 nil])
([nil nil ((32142 . 32146)) nil (26047 48491 472658 268000) 0 nil])
([nil nil ((32146 . 32167)) nil (26047 48491 472657 515000) 0 nil])
([nil nil ((32167 . 32188)) nil (26047 48491 472656 635000) 0 nil])
([nil nil ((32188 . 32197)) nil (26047 48491 472655 774000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32196) (undo-tree-id598 . -1) 32197) nil (26047 48491 472654 653000) 0 nil])
([nil nil ((32196 . 32204)) nil (26047 48491 472653 43000) 0 nil])
([nil nil ((32204 . 32214)) nil (26047 48491 472652 33000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32212) (undo-tree-id596 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32213) (undo-tree-id597 . -1) 32214) nil (26047 48491 472650 967000) 0 nil])
([nil nil ((32212 . 32216)) nil (26047 48491 472648 653000) 0 nil])
([nil nil ((32161 . 32182)) nil (26047 48491 472647 844000) 0 nil])
([nil nil ((32182 . 32192)) nil (26047 48491 472646 872000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32191) (undo-tree-id595 . -1) 32192) nil (26047 48491 472645 930000) 0 nil])
([nil nil ((32191 . 32192)) nil (26047 48491 472644 322000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32187) (undo-tree-id590 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32188) (undo-tree-id591 . -1) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32189) (undo-tree-id592 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32190) (undo-tree-id593 . -1) (#("D" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32191) (undo-tree-id594 . -1) 32192) nil (26047 48491 472642 850000) 0 nil])
([nil nil ((32181 . 32182)) nil (26047 48491 472638 126000) 0 nil])
([nil nil ((32187 . 32208)) nil (26047 48491 472637 483000) 0 nil])
([nil nil ((32208 . 32216)) nil (26047 48491 472636 642000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32214) (undo-tree-id588 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32215) (undo-tree-id589 . -1) 32216) nil (26047 48491 472635 516000) 0 nil])
([nil nil ((32214 . 32224)) nil (26047 48491 472633 244000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 32224)) nil (26047 48491 472632 499000) 0 nil])
([nil nil ((32277 . 32279)) nil (26047 48491 472631 721000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32278) (undo-tree-id587 . -1) 32279) nil (26047 48491 472630 671000) 0 nil])
([nil nil ((32278 . 32296)) nil (26047 48491 472629 80000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32293) (undo-tree-id584 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32294) (undo-tree-id585 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32295) (undo-tree-id586 . -1) 32296) nil (26047 48491 472627 732000) 0 nil])
([nil nil ((32293 . 32311)) nil (26047 48491 472624 758000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32310) (undo-tree-id583 . -1) 32311) nil (26047 48491 472623 872000) 0 nil])
([nil nil ((32310 . 32317)) nil (26047 48491 472621 941000) 0 nil])
([nil nil ((32317 . 32323)) nil (26047 48491 472621 233000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32322) (undo-tree-id582 . -1) 32323) nil (26047 48491 472620 346000) 0 nil])
([nil nil ((32322 . 32343)) nil (26047 48491 472618 862000) 0 nil])
([nil nil ((32343 . 32345)) nil (26047 48491 472618 54000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32332) (undo-tree-id569 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32333) (undo-tree-id570 . -1) (#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32334) (undo-tree-id571 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32335) (undo-tree-id572 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32336) (undo-tree-id573 . -1) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32337) (undo-tree-id574 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32338) (undo-tree-id575 . -1) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32339) (undo-tree-id576 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32340) (undo-tree-id577 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32341) (undo-tree-id578 . -1) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32342) (undo-tree-id579 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32343) (undo-tree-id580 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32344) (undo-tree-id581 . -1) 32345) nil (26047 48491 472614 846000) 0 nil])
([nil nil ((32332 . 32335)) nil (26047 48491 472602 902000) 0 nil])
([nil nil ((32335 . 32350)) nil (26047 48491 472601 905000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32347) (undo-tree-id566 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32348) (undo-tree-id567 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32349) (undo-tree-id568 . -1) 32350) nil (26047 48491 472600 790000) 0 nil])
([nil nil ((32347 . 32348)) nil (26047 48491 472597 770000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32347) (undo-tree-id565 . -1) 32348) nil (26047 48491 472596 827000) 0 nil])
([nil nil ((32347 . 32368)) nil (26047 48491 472595 199000) 0 nil])
([nil nil ((32368 . 32375)) nil (26047 48491 472594 561000) 0 nil])
([nil nil ((#("v" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32374) (undo-tree-id564 . -1) 32375) nil (26047 48491 472593 576000) 0 nil])
([nil nil ((32374 . 32375)) nil (26047 48491 472592 114000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32374) (undo-tree-id563 . -1) 32375) nil (26047 48491 472591 247000) 0 nil])
([nil nil ((32374 . 32375)) nil (26047 48491 472589 536000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32373) (undo-tree-id561 . -1) (#("v" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32374) (undo-tree-id562 . -1) 32375) nil (26047 48491 472588 507000) 0 nil])
([nil nil ((32373 . 32374)) nil (26047 48491 472585 771000) 0 nil])
([nil nil ((32374 . 32375)) nil (26047 48491 472584 998000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32374) (undo-tree-id560 . -1) 32375) nil (26047 48491 472583 653000) 0 nil])
([nil nil ((32374 . 32386)) nil (26047 48491 472576 13000) 0 nil])
([nil nil ((32601 . 32602)) nil (26047 48491 472574 708000) 0 nil])
([nil nil ((32041 . 32042)) nil (26047 48491 472570 982000) 0 nil])
([nil nil ((32923 . 32924) (t 26047 48491 484208 498000)) nil (26047 48768 283987 753000) 0 nil])
([nil nil ((32924 . 32940)) nil (26047 48768 283986 198000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32923) (undo-tree-id682 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32924) (undo-tree-id683 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -32925) (undo-tree-id684 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -32926) (undo-tree-id685 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -32927) (undo-tree-id686 . -1) (#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32928) (undo-tree-id687 . -1) (#("d" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32929) (undo-tree-id688 . -1) (#("o" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32930) (undo-tree-id689 . -1) (#("c" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32931) (undo-tree-id690 . -1) (#("k" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32932) (undo-tree-id691 . -1) (#("e" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32933) (undo-tree-id692 . -1) (#("r" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32934) (undo-tree-id693 . -1) (#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32935) (undo-tree-id694 . -1) (#("t" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32936) (undo-tree-id695 . -1) (#("u" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32937) (undo-tree-id696 . -1) (#("n" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32938) (undo-tree-id697 . -1) (#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -32939) (undo-tree-id698 . -1) 32940) nil (26047 48768 283980 694000) 0 nil])
([nil nil ((#("
Para concluir, mais um comando interessante é o seguinte: em vez de termos que executar um docker exec toda vez após um sleep, seria mais prático começarmos a executar nosso container e mantê-lo em execução, sem a necessidade de um sleep. Como podemos fazer?

Simplesmente executamos um docker run ubuntu e indicamos que queremos executar o bash. Indo um pouco além, podemos especificar que queremos executá-lo em modo interativo, semelhante ao nosso exec. Assim, docker run -it ubuntu bash.

docker run -it ubuntu bash
COPIAR CÓDIGO
Com isso, criamos um novo container diretamente no terminal.

Ao abrir mais um terminal e executar um docker ps, encontramos o container criado com o sleep de um dia há pouco e o bash criado há 10 segundos.

CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
81a143d70802	ubuntu	\"bash\"	10 seconds ago	Up 9 seconds	#	intelligent_allen
48aac971d7fb	ubuntu	\"sleep id\"	About a minute ago	Up about a minute	#	busy_ritchie
Se realizarmos alguma operação dentro dele, como ls ou criar um arquivo na home usando o comando cd pra ir para a home e logo após criamos um-arquivo.txt com o comando touch um-arquivo.txt.

cd
touch um-arquivo.txt
COPIAR CÓDIGO
No entanto, ao sairmos desse terminal, o container será encerrado. Podemos verificar isso rodando docker ps novamente no outro terminal.

CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
48aac971d7fb	ubuntu	\"sleep id\"	2 minute ago	Up 2 minutes	#	busy_ritchie
Por quê? Explicamos que, agora, não há mais nenhum processo; antes, tínhamos o bash, mas agora o terminal que mantinha a execução do processo para manter o container ativo não está mais presente. Portanto, no momento em que encerramos a execução do nosso único processo, o container é encerrado.
" 0 1 (fontified t) 1 260 (fontified t) 260 261 (fontified t) 261 388 (fontified t) 388 493 (fontified t) 493 494 (fontified t) 494 521 (fontified t) 521 535 (fontified t) 535 596 (fontified t) 596 597 (fontified t) 597 742 (fontified t) 742 743 (fontified t) 743 797 (fontified t) 797 872 (fontified t) 872 955 (fontified t) 955 993 (fontified t) 993 1145 (fontified t) 1145 1146 (fontified t) 1146 1149 (fontified t) 1149 1170 (fontified t) 1170 1184 (fontified t) 1184 1321 (fontified t) 1321 1322 (fontified t) 1322 1376 (fontified t) 1376 1448 (fontified t) 1448 1645 (fontified t) 1645 1744 (fontified t)) . 32923) (undo-tree-id679 . -1744) (undo-tree-id680 . -955) (undo-tree-id681 . -1744) 34667) nil (26047 48768 283953 70000) 0 nil])
([nil nil ((#(" Em breve, abordaremos essa questão com mais detalhes." 0 54 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -33110) (undo-tree-id677 . -54) (undo-tree-id678 . -54) 33164) nil (26047 48768 283948 711000) 0 nil])
([nil nil ((#("
Esta aula foi dedicada a compreender alguns comandos úteis e interessantes, assim como parâmetros que podemos e devemos utilizar com o Docker." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 142 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 142 143 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -33111) (undo-tree-id675 . -143) (undo-tree-id676 . -143) 33254) nil (26047 48768 283945 46000) 0 nil])
([nil nil ((17072 . 17073)) nil (26047 48768 283941 196000) 0 nil])
([nil nil ((17073 . 17082)) nil (26047 48768 283940 323000) 0 nil])
([nil nil ((17082 . 17083)) nil (26047 48768 283939 82000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18826 . 18827) (nil fontified nil 18728 . 18827) (nil fontified nil 18531 . 18728) (nil fontified nil 18459 . 18531) (nil fontified nil 18405 . 18459) (nil fontified nil 18404 . 18405) (nil fontified nil 18267 . 18404) (nil fontified nil 18253 . 18267) (nil fontified nil 18232 . 18253) (nil fontified nil 18229 . 18232) (nil fontified nil 18228 . 18229) (nil fontified nil 18076 . 18228) (nil fontified nil 18038 . 18076) (nil fontified nil 17955 . 18038) (nil fontified nil 17880 . 17955) (nil fontified nil 17826 . 17880) (nil fontified nil 17825 . 17826) (nil fontified nil 17680 . 17825) (nil fontified nil 17679 . 17680) (nil fontified nil 17618 . 17679) (nil fontified nil 17604 . 17618) (nil fontified nil 17577 . 17604) (nil fontified nil 17576 . 17577) (nil fontified nil 17471 . 17576) (nil fontified nil 17344 . 17471) (nil fontified nil 17343 . 17344) (nil fontified nil 17084 . 17343) (nil fontified nil 17083 . 17084) (17083 . 18827)) nil (26047 48768 283935 937000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -17604) (undo-tree-id673 . -13) (undo-tree-id674 . -13) 17617) nil (26047 48768 283921 426000) 0 nil])
([nil nil ((17577 . 17578)) nil (26047 48768 283910 656000) 0 nil])
([nil nil ((18420 . 18424)) nil (26047 48768 283909 669000) 0 nil])
([nil nil ((18432 . 18433)) nil (26047 48768 283908 505000) 0 nil])
([nil nil ((18433 . 18434)) nil (26047 48768 283906 703000) 0 nil])
([nil nil ((18441 . 18442)) nil (26047 48768 283905 419000) 0 nil])
([nil nil ((18442 . 18443)) nil (26047 48768 283903 61000) 0 nil])
([nil nil ((18513 . 18514)) nil (26047 48768 283900 567000) 0 nil])
([nil nil ((17895 . 17896)) nil (26047 48768 283899 535000) 0 nil])
([nil nil ((17841 . 17842)) nil (26047 48768 283898 305000) 0 nil])
([nil nil ((18028 . 18029)) nil (26047 48768 283896 972000) 0 nil])
([nil nil ((17850 . 17851)) nil (26047 48768 283894 608000) 0 nil])
([nil nil ((17851 . 17852)) nil (26047 48768 283890 526000) 0 nil])
([nil nil ((17914 . 17915)) nil (26047 48768 284133 786000) 0 nil])
([nil nil ((17852 . 17853)) nil (26047 48781 681031 652000) 0 nil] [nil nil ((17853 . 17854)) ((#("	" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 17853)) (26047 48768 283882 935000) 0 nil])
([nil nil ((17860 . 17861)) nil (26047 48781 681030 644000) 0 nil])
nil
([nil nil ((17929 . 17930)) nil (26047 48781 681029 641000) 0 nil])
([nil nil ((17861 . 17862)) nil (26047 48781 681028 567000) 0 nil])
([nil nil ((17862 . 17863)) nil (26047 48781 681027 449000) 0 nil])
([nil nil ((17934 . 17935)) nil (26047 48781 681025 818000) 0 nil])
([nil nil ((18024 . 18025)) nil (26047 48781 681021 380000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 18254) (undo-tree-id699 . -13) (undo-tree-id700 . -13) (undo-tree-id701 . -13) (t 26047 48781 698799 360000)) nil (26047 49073 999999 696000) 0 nil])
([nil nil ((34863 . 34864) (t 26047 49074 13996 525000)) nil (26047 49141 992880 882000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 34864)) nil (26047 49141 992876 607000) 0 nil])
([nil nil ((34862 . 34868) (t 26047 49142 6912 746000)) nil (26047 49226 623550 479000) 0 nil])
([nil nil ((#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34864) (undo-tree-id724 . -1) (#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34865) (undo-tree-id725 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34866) (undo-tree-id726 . -1) (#(":" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34867) (undo-tree-id727 . -1) 34868) nil (26047 49226 623548 791000) 0 nil])
([nil nil ((34864 . 34877)) nil (26047 49226 623543 143000) 0 nil])
([nil nil ((34877 . 34898)) nil (26047 49226 623542 388000) 0 nil])
([nil nil ((34898 . 34905)) nil (26047 49226 623541 510000) 0 nil])
([nil nil ((34886 . 34887)) nil (26047 49226 623540 607000) 0 nil])
([nil nil ((34898 . 34899)) nil (26047 49226 623539 751000) 0 nil])
([nil nil ((34903 . 34904)) nil (26047 49226 623538 868000) 0 nil])
([nil nil ((34908 . 34919)) nil (26047 49226 623537 925000) 0 nil])
([nil nil ((34919 . 34930)) nil (26047 49226 623537 134000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34929) (undo-tree-id723 . -1) 34930) nil (26047 49226 623536 150000) 0 nil])
([nil nil ((34929 . 34935)) nil (26047 49226 623534 691000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34924) (undo-tree-id712 . -1) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34925) (undo-tree-id713 . -1) (#("q" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34926) (undo-tree-id714 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34927) (undo-tree-id715 . -1) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34928) (undo-tree-id716 . -1) (#("v" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34929) (undo-tree-id717 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34930) (undo-tree-id718 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34931) (undo-tree-id719 . -1) (#("q" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34932) (undo-tree-id720 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34933) (undo-tree-id721 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34934) (undo-tree-id722 . -1) 34935) nil (26047 49226 623531 897000) 0 nil])
([nil nil ((34924 . 34925)) nil (26047 49226 623523 53000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34923) (undo-tree-id710 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34924) (undo-tree-id711 . -1) 34925) nil (26047 49226 623521 808000) 0 nil])
([nil nil ((34923 . 34944)) nil (26047 49226 623519 508000) 0 nil])
([nil nil ((34944 . 34949)) nil (26047 49226 623518 722000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34946) (undo-tree-id707 . -1) (#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34947) (undo-tree-id708 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34948) (undo-tree-id709 . -1) 34949) nil (26047 49226 623517 605000) 0 nil])
([nil nil ((34946 . 34955)) nil (26047 49226 623514 214000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34954) (undo-tree-id706 . -1) 34955) nil (26047 49226 623513 372000) 0 nil])
([nil nil ((34954 . 34973)) nil (26047 49226 623511 673000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34972) (undo-tree-id705 . -1) 34973) nil (26047 49226 623510 670000) 0 nil])
([nil nil ((34972 . 34981)) nil (26047 49226 623508 308000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34978) (undo-tree-id702 . -1) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34979) (undo-tree-id703 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34980) (undo-tree-id704 . -1) 34981) nil (26047 49226 623506 73000) 0 nil])
([nil nil ((34978 . 34984)) nil (26047 49226 623493 673000) 0 nil])
([nil nil ((34908 . 34909) (t 26047 49226 637161 810000)) nil (26047 49250 74561 59000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34908) (undo-tree-id729 . -1) 34909) nil (26047 49250 74559 931000) 0 nil])
([nil nil ((34909 . 34924)) nil (26047 49250 74557 848000) 0 nil])
([nil nil ((34898 . 34899)) nil (26047 49250 74556 807000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -34898) (undo-tree-id728 . -1) 34899) nil (26047 49250 74554 892000) 0 nil])
([nil nil ((34899 . 34900)) nil (26047 49250 74544 49000) 0 nil])
([nil nil ((34911 . 34912) (t 26047 49250 89605 434000)) nil (26047 49256 89251 633000) 0 nil])
([nil nil ((34925 . 34926)) nil (26047 49319 503389 445000) 0 nil])
([nil nil ((33147 . 33169) (#("Excluindo o container" 0 21 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 33147) (t 26047 49256 104819 537000)) nil (26047 49324 159331 937000) 0 nil] [nil nil ((#("Excluindo o container" 0 21 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -33147) (undo-tree-id730 . -21) (undo-tree-id731 . -21) 33168 (t 26047 49256 104819 537000)) ((33147 . 33168)) (26047 49319 502986 395000) 0 nil])
([nil nil ((33147 . 33156)) nil (26047 49324 159327 891000) 0 nil])
nil
([nil nil ((35013 . 35014) (t 26047 49324 178728 485000)) nil (26047 49543 61153 82000) 0 nil])
([nil nil ((35014 . 35018)) nil (26047 49543 61152 152000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -35017) (undo-tree-id898 . -1) 35018) nil (26047 49543 61151 181000) 0 nil])
([nil nil ((35017 . 35028)) nil (26047 49543 61149 751000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -35026) (undo-tree-id896 . -1) (#("o" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -35027) (undo-tree-id897 . -1) 35028) nil (26047 49543 61148 506000) 0 nil])
([nil nil ((35026 . 35031)) nil (26047 49543 61146 156000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-hide)) . 35014) (#("*" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-hide)) . 35014)) nil (26047 49543 61145 209000) 0 nil])
([nil nil ((35029 . 35040)) nil (26047 49543 61144 408000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35035) (undo-tree-id891 . -1) (#(" " 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35036) (undo-tree-id892 . -1) (#("d" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35037) (undo-tree-id893 . -1) (#("i" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35038) (undo-tree-id894 . -1) (#("c" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35039) (undo-tree-id895 . -1) 35040) nil (26047 49543 61143 54000) 0 nil])
([nil nil ((35035 . 35037)) nil (26047 49543 61137 990000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35036) (undo-tree-id890 . -1) 35037) nil (26047 49543 61137 214000) 0 nil])
([nil nil ((35036 . 35038)) nil (26047 49543 61135 601000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35037) (undo-tree-id889 . -1) 35038) nil (26047 49543 61134 818000) 0 nil])
([nil nil ((35037 . 35057)) nil (26047 49543 61133 473000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -35056) (undo-tree-id888 . -1) 35057) nil (26047 49543 61132 551000) 0 nil])
([nil nil ((35056 . 35060)) nil (26047 49543 61131 138000) 0 nil])
([nil nil ((35060 . 35061)) nil (26047 49543 61130 488000) 0 nil])
([nil nil ((35061 . 35074)) nil (26047 49543 61129 731000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35073) (undo-tree-id887 . -1) 35074) nil (26047 49543 61128 717000) 0 nil])
([nil nil ((35073 . 35084)) nil (26047 49543 61127 287000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35081) (undo-tree-id884 . -1) (#("d" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35082) (undo-tree-id885 . -1) (#("e" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35083) (undo-tree-id886 . -1) 35084) nil (26047 49543 61126 211000) 0 nil])
([nil nil ((35081 . 35091)) nil (26047 49543 61123 168000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35090) (undo-tree-id883 . -1) 35091) nil (26047 49543 61122 94000) 0 nil])
([nil nil ((35090 . 35111)) nil (26047 49543 61120 657000) 0 nil])
([nil nil ((35111 . 35113)) nil (26047 49543 61119 906000) 0 nil])
([nil nil ((35113 . 35118)) nil (26047 49543 61119 61000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35104) (undo-tree-id869 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35105) (undo-tree-id870 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35106) (undo-tree-id871 . -1) (#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35107) (undo-tree-id872 . -1) (#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35108) (undo-tree-id873 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35109) (undo-tree-id874 . -1) (#("h" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35110) (undo-tree-id875 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35111) (undo-tree-id876 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35112) (undo-tree-id877 . -1) (#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35113) (undo-tree-id878 . -1) (#("á" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35114) (undo-tree-id879 . -1) (#("q" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35115) (undo-tree-id880 . -1) (#("u" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35116) (undo-tree-id881 . -1) (#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35117) (undo-tree-id882 . -1) 35118) nil (26047 49543 61116 160000) 0 nil])
([nil nil ((35104 . 35111)) nil (26047 49543 61104 761000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35107) (undo-tree-id865 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35108) (undo-tree-id866 . -1) (#("o" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35109) (undo-tree-id867 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35110) (undo-tree-id868 . -1) 35111) nil (26047 49543 61103 411000) 0 nil])
([nil nil ((35107 . 35112)) nil (26047 49543 61099 781000) 0 nil])
([nil nil ((35104 . 35112)) nil (26047 49543 61099 96000) 0 nil])
([nil nil ((#("j" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35110) (undo-tree-id863 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35111) (undo-tree-id864 . -1) 35112) nil (26047 49543 61098 20000) 0 nil])
([nil nil ((35110 . 35112)) nil (26047 49543 61095 755000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35111) (undo-tree-id862 . -1) 35112) nil (26047 49543 61094 768000) 0 nil])
([nil nil ((35111 . 35112)) nil (26047 49543 61093 375000) 0 nil])
([nil nil ((#("h" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35111) (undo-tree-id861 . -1) 35112) nil (26047 49543 61092 530000) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35110) (undo-tree-id860 . -1) 35111) nil (26047 49543 61090 926000) 0 nil])
([nil nil ((35110 . 35112)) nil (26047 49543 61089 538000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35119) (undo-tree-id859 . -1) 35120) nil (26047 49543 61088 594000) 0 nil])
([nil nil ((35119 . 35120)) nil (26047 49543 61087 152000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35119) (undo-tree-id858 . -1) 35120) nil (26047 49543 61086 386000) 0 nil])
([nil nil ((35119 . 35120)) nil (26047 49543 61084 858000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35119) (undo-tree-id857 . -1) 35120) nil (26047 49543 61083 914000) 0 nil])
([nil nil ((35119 . 35140)) nil (26047 49543 61082 433000) 0 nil])
([nil nil ((35140 . 35146)) nil (26047 49543 61081 740000) 0 nil])
([nil nil ((#("u" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35145) (undo-tree-id856 . -1) 35146) nil (26047 49543 61080 862000) 0 nil])
([nil nil ((35145 . 35146)) nil (26047 49543 61079 419000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35125) (undo-tree-id835 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35126) (undo-tree-id836 . -1) (#("t" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35127) (undo-tree-id837 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35128) (undo-tree-id838 . -1) (#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35129) (undo-tree-id839 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35130) (undo-tree-id840 . -1) (#("e" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35131) (undo-tree-id841 . -1) (#("r" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35132) (undo-tree-id842 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35133) (undo-tree-id843 . -1) (#("d" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35134) (undo-tree-id844 . -1) (#("o" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35135) (undo-tree-id845 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35136) (undo-tree-id846 . -1) (#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35137) (undo-tree-id847 . -1) (#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35138) (undo-tree-id848 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35139) (undo-tree-id849 . -1) (#("g" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35140) (undo-tree-id850 . -1) (#("e" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35141) (undo-tree-id851 . -1) (#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35142) (undo-tree-id852 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35143) (undo-tree-id853 . -1) (#("u" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35144) (undo-tree-id854 . -1) (#("b" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35145) (undo-tree-id855 . -1) 35146) nil (26047 49543 61075 682000) 0 nil])
([nil nil ((#("q" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35112) (undo-tree-id822 . -1) (#("u" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35113) (undo-tree-id823 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35114) (undo-tree-id824 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35115) (undo-tree-id825 . -1) (#("d" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35116) (undo-tree-id826 . -1) (#("o" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35117) (undo-tree-id827 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35118) (undo-tree-id828 . -1) (#("c" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35119) (undo-tree-id829 . -1) (#("r" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35120) (undo-tree-id830 . -1) (#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35121) (undo-tree-id831 . -1) (#("o" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35122) (undo-tree-id832 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35123) (undo-tree-id833 . -1) (#("c" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35124) (undo-tree-id834 . -1) 35125) nil (26047 49543 61057 737000) 0 nil])
([nil nil ((35112 . 35113)) nil (26047 49543 61046 841000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35112) (undo-tree-id821 . -1) 35113) nil (26047 49543 61045 897000) 0 nil])
([nil nil ((35112 . 35124)) nil (26047 49543 61044 314000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35121) (undo-tree-id818 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35122) (undo-tree-id819 . -1) (#("c" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35123) (undo-tree-id820 . -1) 35124) nil (26047 49543 61043 25000) 0 nil])
([nil nil ((35121 . 35135)) nil (26047 49543 61039 724000) 0 nil])
([nil nil ((35135 . 35141)) nil (26047 49543 61038 954000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35134) (undo-tree-id811 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35135) (undo-tree-id812 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35136) (undo-tree-id813 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35137) (undo-tree-id814 . -1) (#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35138) (undo-tree-id815 . -1) (#("á" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35139) (undo-tree-id816 . -1) (#("q" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35140) (undo-tree-id817 . -1) 35141) nil (26047 49543 61037 139000) 0 nil])
([nil nil ((35134 . 35137)) nil (26047 49543 61031 358000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35136) (undo-tree-id810 . -1) 35137) nil (26047 49543 61030 495000) 0 nil])
([nil nil ((35136 . 35140)) nil (26047 49543 61028 711000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35137) (undo-tree-id807 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35138) (undo-tree-id808 . -1) (#("u" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35139) (undo-tree-id809 . -1) 35140) nil (26047 49543 61027 521000) 0 nil])
([nil nil ((35137 . 35158)) nil (26047 49543 61024 412000) 0 nil])
([nil nil ((35158 . 35166)) nil (26047 49543 61023 804000) 0 nil])
([nil nil ((35166 . 35180)) nil (26047 49543 61022 920000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35179) (undo-tree-id806 . -1) 35180) nil (26047 49543 61022 61000) 0 nil])
([nil nil ((35179 . 35185)) nil (26047 49543 61020 667000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35183) (undo-tree-id804 . -1) (#("r" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -35184) (undo-tree-id805 . -1) 35185) nil (26047 49543 61019 634000) 0 nil])
([nil nil ((35183 . 35195)) nil (26047 49543 61017 331000) 0 nil])
([nil nil ((35195 . 35196)) nil (26047 49543 61016 713000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35207 . 35208) (nil fontified nil 35196 . 35208) (35196 . 35208)) nil (26047 49543 61015 874000) 0 nil])
([nil nil ((#("b8811489ea78" 0 11 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 11 12 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t rear-nonsticky t)) . -35196) (undo-tree-id802 . -12) (undo-tree-id803 . -12) 35208) nil (26047 49543 61014 546000) 0 nil])
([nil nil ((35196 . 35217)) nil (26047 49543 60976 834000) 0 nil])
([nil nil ((35217 . 35220)) nil (26047 49543 60976 179000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35219) (undo-tree-id801 . -1) 35220) nil (26047 49543 60975 265000) 0 nil])
([nil nil ((35219 . 35223)) nil (26047 49543 60973 875000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35218) (undo-tree-id796 . -1) (#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35219) (undo-tree-id797 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35220) (undo-tree-id798 . -1) (#("i" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35221) (undo-tree-id799 . -1) (#("n" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35222) (undo-tree-id800 . -1) 35223) nil (26047 49543 60972 303000) 0 nil])
([nil nil ((35218 . 35239)) nil (26047 49543 60967 798000) 0 nil])
([nil nil ((35239 . 35240)) nil (26047 49543 60967 100000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35235) (undo-tree-id791 . -1) (#("ç" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35236) (undo-tree-id792 . -1) (#("ã" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35237) (undo-tree-id793 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35238) (undo-tree-id794 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35239) (undo-tree-id795 . -1) 35240) nil (26047 49543 60965 741000) 0 nil])
([nil nil ((35235 . 35252)) nil (26047 49543 60961 252000) 0 nil])
([nil nil ((35252 . 35273)) nil (26047 49543 60960 612000) 0 nil])
([nil nil ((35273 . 35290)) nil (26047 49543 60959 935000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35289) (undo-tree-id790 . -1) 35290) nil (26047 49543 60959 83000) 0 nil])
([nil nil ((35289 . 35295)) nil (26047 49543 60957 634000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35293) (undo-tree-id788 . -1) (#("d" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35294) (undo-tree-id789 . -1) 35295) nil (26047 49543 60956 599000) 0 nil])
([nil nil ((35293 . 35303)) nil (26047 49543 60954 71000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35302) (undo-tree-id787 . -1) 35303) nil (26047 49543 60953 185000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil)) . -35287) (undo-tree-id772 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35288) (undo-tree-id773 . -1) (#("n" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35289) (undo-tree-id774 . -1) (#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35290) (undo-tree-id775 . -1) (#("l" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35291) (undo-tree-id776 . -1) (#("u" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35292) (undo-tree-id777 . -1) (#("í" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35293) (undo-tree-id778 . -1) (#("d" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35294) (undo-tree-id779 . -1) (#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35295) (undo-tree-id780 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35296) (undo-tree-id781 . -1) (#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35297) (undo-tree-id782 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35298) (undo-tree-id783 . -1) (#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35299) (undo-tree-id784 . -1) (#("r" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35300) (undo-tree-id785 . -1) (#("i" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35301) (undo-tree-id786 . -1) 35302) nil (26047 49543 60949 647000) 0 nil])
([nil nil ((35287 . 35302)) nil (26047 49543 60937 790000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35300) (undo-tree-id770 . -1) (#("p" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35301) (undo-tree-id771 . -1) 35302) nil (26047 49543 60936 866000) 0 nil])
([nil nil ((35300 . 35316)) nil (26047 49543 60934 795000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35312) (undo-tree-id766 . -1) (#("=" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35313) (undo-tree-id767 . -1) (#("d" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35314) (undo-tree-id768 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -35315) (undo-tree-id769 . -1) 35316) nil (26047 49543 60933 575000) 0 nil])
([nil nil ((35312 . 35316)) nil (26047 49543 60929 586000) 0 nil])
([nil nil ((35316 . 35322)) nil (26047 49543 60928 817000) 0 nil])
([nil nil ((35322 . 35323)) nil (26047 49543 60928 130000) 0 nil])
([nil nil ((35323 . 35329)) nil (26047 49543 60927 372000) 0 nil])
([nil nil ((#(":" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face org-code)) . -35323) (undo-tree-id760 . -1) (#(" " 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face org-code)) . -35324) (undo-tree-id761 . -1) (#("d" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face org-code)) . -35325) (undo-tree-id762 . -1) (#("o" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face org-code)) . -35326) (undo-tree-id763 . -1) (#("c" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face org-code)) . -35327) (undo-tree-id764 . -1) (#("e" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face org-code)) . -35328) (undo-tree-id765 . -1) 35329) nil (26047 49543 60925 902000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35348 . 35349) (nil fontified nil 35323 . 35349) (35323 . 35349)) nil (26047 49543 60920 681000) 0 nil])
([nil nil ((35323 . 35324)) nil (26047 49543 60919 615000) 0 nil])
([nil nil ((35350 . 35351)) nil (26047 49543 60918 723000) 0 nil])
([nil nil ((35351 . 35363)) nil (26047 49543 60918 57000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35361) (undo-tree-id758 . -1) (#("p" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35362) (undo-tree-id759 . -1) 35363) nil (26047 49543 60917 141000) 0 nil])
([nil nil ((35361 . 35362)) nil (26047 49543 60914 476000) 0 nil])
([nil nil ((35362 . 35363)) nil (26047 49543 60913 721000) 0 nil])
([nil nil ((35363 . 35364)) nil (26047 49543 60913 8000) 0 nil])
([nil nil ((35364 . 35370)) nil (26047 49543 60912 175000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35361) (undo-tree-id757 . -1) 35362) nil (26047 49543 60911 314000) 0 nil])
([nil nil ((35369 . 35370)) nil (26047 49543 60909 835000) 0 nil])
([nil nil ((35370 . 35391)) nil (26047 49543 60909 146000) 0 nil])
([nil nil ((35391 . 35407)) nil (26047 49543 60908 419000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35406) (undo-tree-id756 . -1) 35407) nil (26047 49543 60907 512000) 0 nil])
([nil nil ((35406 . 35410)) nil (26047 49543 60906 90000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35399) (undo-tree-id745 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35400) (undo-tree-id746 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35401) (undo-tree-id747 . -1) (#("a" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35402) (undo-tree-id748 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35403) (undo-tree-id749 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35404) (undo-tree-id750 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35405) (undo-tree-id751 . -1) (#("r" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35406) (undo-tree-id752 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35407) (undo-tree-id753 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35408) (undo-tree-id754 . -1) (#("t" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35409) (undo-tree-id755 . -1) 35410) nil (26047 49543 60903 547000) 0 nil])
([nil nil ((35370 . 35378)) nil (26047 49543 60893 465000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 35378) (#("e" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 35378)) nil (26047 49543 60892 474000) 0 nil])
([nil nil ((35405 . 35410)) nil (26047 49543 60890 903000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35407) (undo-tree-id742 . -1) (#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35408) (undo-tree-id743 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35409) (undo-tree-id744 . -1) 35410) nil (26047 49543 60889 762000) 0 nil])
([nil nil ((35407 . 35417)) nil (26047 49543 60886 697000) 0 nil])
([nil nil ((35417 . 35438)) nil (26047 49543 60885 824000) 0 nil])
([nil nil ((35438 . 35449)) nil (26047 49543 60885 126000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35448) (undo-tree-id741 . -1) 35449) nil (26047 49543 60884 209000) 0 nil])
([nil nil ((35448 . 35454)) nil (26047 49543 60882 403000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35450) (undo-tree-id737 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35451) (undo-tree-id738 . -1) (#("m" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35452) (undo-tree-id739 . -1) (#("e" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35453) (undo-tree-id740 . -1) 35454) nil (26047 49543 60880 933000) 0 nil])
([nil nil ((35450 . 35462)) nil (26047 49543 60876 610000) 0 nil])
([nil nil ((35462 . 35463)) nil (26047 49543 60875 533000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35462) (undo-tree-id736 . -1) 35463) nil (26047 49543 60874 432000) 0 nil])
([nil nil ((35462 . 35483)) nil (26047 49543 60872 831000) 0 nil])
([nil nil ((35483 . 35500)) nil (26047 49543 60871 957000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35496) (undo-tree-id732 . -1) (#("ç" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35497) (undo-tree-id733 . -1) (#("ã" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35498) (undo-tree-id734 . -1) (#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -35499) (undo-tree-id735 . -1) 35500) nil (26047 49543 60869 501000) 0 nil])
([nil nil ((35496 . 35500)) nil (26047 49543 60856 743000) 0 nil])
([nil nil ((35013 . 35014) (t 26047 49543 77036 790000)) nil (26047 50396 309164 796000) 0 nil])
([nil nil ((35014 . 35030)) nil (26047 50396 309163 825000) 0 nil])
([nil nil ((35030 . 35031)) nil (26047 50396 309163 79000) 0 nil])
([nil nil ((nil rear-nonsticky nil 43279 . 43280) (nil fontified nil 43079 . 43280) (nil fontified nil 43069 . 43079) (nil fontified nil 43068 . 43069) (nil fontified nil 42784 . 43068) (nil fontified nil 42783 . 42784) (nil fontified nil 42769 . 42783) (nil fontified nil 42768 . 42769) (nil fontified nil 42735 . 42768) (nil fontified nil 42721 . 42735) (nil fontified nil 42706 . 42721) (nil fontified nil 42705 . 42706) (nil fontified nil 42547 . 42705) (nil fontified nil 42533 . 42547) (nil fontified nil 42481 . 42533) (nil fontified nil 42480 . 42481) (nil fontified nil 42283 . 42480) (nil fontified nil 42282 . 42283) (nil fontified nil 42031 . 42282) (nil fontified nil 42030 . 42031) (nil fontified nil 41837 . 42030) (nil fontified nil 41823 . 41837) (nil fontified nil 41792 . 41823) (nil fontified nil 41791 . 41792) (nil fontified nil 41588 . 41791) (nil fontified nil 41587 . 41588) (nil fontified nil 41573 . 41587) (nil fontified nil 41572 . 41573) (nil fontified nil 41416 . 41572) (nil fontified nil 41402 . 41416) (nil fontified nil 41379 . 41402) (nil fontified nil 41378 . 41379) (nil fontified nil 41216 . 41378) (nil fontified nil 41215 . 41216) (nil fontified nil 41196 . 41215) (nil fontified nil 41195 . 41196) (nil fontified nil 41171 . 41195) (nil fontified nil 41170 . 41171) (nil fontified nil 41150 . 41170) (nil fontified nil 41149 . 41150) (nil fontified nil 41124 . 41149) (nil fontified nil 41123 . 41124) (nil fontified nil 40993 . 41123) (nil fontified nil 40979 . 40993) (nil fontified nil 40954 . 40979) (nil fontified nil 40953 . 40954) (nil fontified nil 40737 . 40953) (nil fontified nil 40552 . 40737) (nil fontified nil 40498 . 40552) (nil fontified nil 40497 . 40498) (nil fontified nil 40231 . 40497) (nil fontified nil 40230 . 40231) (nil fontified nil 40165 . 40230) (nil fontified nil 40164 . 40165) (nil fontified nil 40142 . 40164) (nil fontified nil 40128 . 40142) (nil fontified nil 40084 . 40128) (nil fontified nil 40083 . 40084) (nil fontified nil 39879 . 40083) (nil fontified nil 39878 . 39879) (nil fontified nil 39824 . 39878) (nil fontified nil 39823 . 39824) (nil fontified nil 39755 . 39823) (nil fontified nil 39741 . 39755) (nil fontified nil 39710 . 39741) (nil fontified nil 39709 . 39710) (nil fontified nil 39393 . 39709) (nil fontified nil 39392 . 39393) (nil fontified nil 39042 . 39392) (nil fontified nil 39041 . 39042) (nil fontified nil 38786 . 39041) (nil fontified nil 38772 . 38786) (nil fontified nil 38759 . 38772) (nil fontified nil 38758 . 38759) (nil fontified nil 38551 . 38758) (nil fontified nil 38550 . 38551) (nil fontified nil 38214 . 38550) (nil fontified nil 38213 . 38214) (nil fontified nil 37951 . 38213) (nil fontified nil 37832 . 37951) (nil fontified nil 37778 . 37832) (nil fontified nil 37777 . 37778) (nil fontified nil 37756 . 37777) (nil fontified nil 37742 . 37756) (nil fontified nil 37732 . 37742) (nil fontified nil 37731 . 37732) (nil fontified nil 37355 . 37731) (nil fontified nil 37354 . 37355) (nil fontified nil 37084 . 37354) (nil fontified nil 37070 . 37084) (nil fontified nil 37029 . 37070) (nil fontified nil 37028 . 37029) (nil fontified nil 36864 . 37028) (nil fontified nil 36863 . 36864) (nil fontified nil 36672 . 36863) (nil fontified nil 36658 . 36672) (nil fontified nil 36621 . 36658) (nil fontified nil 36620 . 36621) (nil fontified nil 36467 . 36620) (nil fontified nil 36466 . 36467) (nil fontified nil 36235 . 36466) (nil fontified nil 36234 . 36235) (nil fontified nil 35787 . 36234) (nil fontified nil 35786 . 35787) (nil fontified nil 35452 . 35786) (nil fontified nil 35451 . 35452) (nil fontified nil 35247 . 35451) (nil fontified nil 35246 . 35247) (nil fontified nil 35031 . 35246) (35031 . 43280)) nil (26047 50396 309157 571000) 0 nil])
([nil nil ((#("Agora, teremos um exemplo mais visual para observar todo o fluxo e interagir efetivamente com nosso container, percebendo uma saída real mais bem apresentada para entendermos como devemos interagir com o container.
" 0 215 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -35031) (undo-tree-id934 . -215) (undo-tree-id935 . -215) 35246) nil (26047 50396 309134 945000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35031)) nil (26047 50396 309132 566000) 0 nil])
([nil nil ((#("Observem que, ao contrário de nossa imagem do Ubuntu, essa imagem do docker samples não é oficial." 0 98 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -35471) (undo-tree-id932 . -98) (undo-tree-id933 . -98) 35569) nil (26047 50396 309131 364000) 0 nil])
([nil nil ((#("
Reconhecemos que ela não possui a distinção de ser oficial, evidenciada pela ausência do símbolo de verificação. Assim como no caso do Ubuntu, imagens não criadas por usuários reconhecidos pela comunidade não exibem esse símbolo de oficial, seguindo esse padrão. O nome do usuário ou organização precede o nome da imagem, sendo esse o indicativo desse padrão. Podemos identificar que esta imagem em questão não é oficial devido a essa formatação." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 447 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35472) (undo-tree-id930 . -447) (undo-tree-id931 . -447)) nil (26047 50396 309128 571000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35472)) nil (26047 50396 309126 392000) 0 nil])
([nil nil ((#("
Embora seja uma boa prática manter a utilização de imagens oficiais em seu projeto sempre que possível, neste caso específico, optamos por utilizar essa imagem para ilustrar e visualizar o Docker em funcionamento com um container.
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 52 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 52 232 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35472) (undo-tree-id928 . -232) (undo-tree-id929 . -232)) nil (26047 50396 309125 239000) 0 nil])
([nil nil ((#("Como funcionará?" 0 16 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35473) (undo-tree-id926 . -16) (undo-tree-id927 . -16)) nil (26047 50396 309122 803000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 35473)) nil (26047 50396 309120 707000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35647) (undo-tree-id924 . -13) (undo-tree-id925 . -13)) nil (26047 50396 309119 786000) 0 nil])
([nil nil ((35610 . 35611)) nil (26047 50396 309117 561000) 0 nil])
([nil nil ((36005 . 36006)) nil (26047 50396 309116 765000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 36006)) nil (26047 50396 309115 665000) 0 nil])
([nil nil ((17072 . 17074)) nil (26047 50396 309114 742000) 0 nil])
([nil nil ((17074 . 17079)) nil (26047 50396 309113 597000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17073) (undo-tree-id918 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -17074) (undo-tree-id919 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -17075) (undo-tree-id920 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -17076) (undo-tree-id921 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -17077) (undo-tree-id922 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -17078) (undo-tree-id923 . -1) 17079) nil (26047 50396 309111 588000) 0 nil])
([nil nil ((18825 . 18826)) nil (26047 50396 309105 782000) 0 nil])
([nil nil ((18826 . 18833)) nil (26047 50396 309104 908000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t)) . -18831) (undo-tree-id916 . -1) (#(" " 0 1 (fontified t line-prefix #("*****" 0 5 (face org-indent)) wrap-prefix #("*********** " 0 5 (face org-indent) 5 12 (face org-indent)) face org-level-6)) . -18832) (undo-tree-id917 . -1) 18833) nil (26047 50396 309103 643000) 0 nil])
([nil nil ((18831 . 18834)) nil (26047 50396 309101 94000) 0 nil])
([nil nil ((18834 . 18835)) nil (26047 50396 309100 183000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19271 . 19272) (nil fontified nil 19231 . 19272) (nil fontified nil 19230 . 19231) (nil fontified nil 19168 . 19230) (nil fontified nil 19066 . 19168) (nil fontified nil 19065 . 19066) (nil fontified nil 18874 . 19065) (nil fontified nil 18873 . 18874) (nil fontified nil 18836 . 18873) (nil fontified nil 18835 . 18836) (18835 . 19272)) nil (26047 50396 309098 785000) 0 nil])
([nil nil ((#("No entanto, ao executarmos o Ubuntu anteriormente, observamos que, ao realizar um simples docker run e manter nosso container em execução, como fizemos com o sleep, ele trava nosso terminal.

Para executarmos esse comando e mantermos o container em segundo plano no terminal sem travamentos, podemos adicionar a flag -d, indicando \"detached\" (desanexado).
" 0 191 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 191 192 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 192 294 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 294 356 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36097) (undo-tree-id914 . -356) (undo-tree-id915 . -356) 36453) nil (26047 50396 309095 844000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 36097)) nil (26047 50396 309092 41000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 36096) (undo-tree-id913 . -1)) nil (26047 50396 309090 789000) 0 nil])
([nil nil ((36096 . 36097)) nil (26047 50396 309089 430000) 0 nil])
([nil nil ((36095 . 36096)) nil (26047 50396 309088 625000) 0 nil])
([nil nil ((36096 . 36099)) nil (26047 50396 309087 952000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36098) (undo-tree-id912 . -1) 36099) nil (26047 50396 309086 845000) 0 nil])
([nil nil ((36098 . 36116)) nil (26047 50396 309085 398000) 0 nil])
([nil nil ((#("b" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36112) (undo-tree-id908 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36113) (undo-tree-id909 . -1) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36114) (undo-tree-id910 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36115) (undo-tree-id911 . -1) 36116) nil (26047 50396 309083 904000) 0 nil])
([nil nil ((36112 . 36119)) nil (26047 50396 309080 75000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36118) (undo-tree-id907 . -1) 36119) nil (26047 50396 309079 56000) 0 nil])
([nil nil ((36118 . 36124)) nil (26047 50396 309077 386000) 0 nil])
([nil nil ((36124 . 36128)) nil (26047 50396 309076 537000) 0 nil])
([nil nil ((36096 . 36097)) nil (26047 50396 309075 790000) 0 nil])
([nil nil ((36129 . 36130)) nil (26047 50396 309075 60000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36173) (undo-tree-id905 . -13) (undo-tree-id906 . -13) 36186) nil (26047 50396 309074 6000) 0 nil])
([nil nil ((#("
Isso fará com que o container baseado nesta imagem seja executado sem impactar nosso terminal" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 94 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36173) (undo-tree-id903 . -94) (undo-tree-id904 . -94) 36267) nil (26047 50396 309071 270000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 36173) (#("." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 36173)) nil (26047 50396 309068 735000) 0 nil])
([nil nil ((36173 . 36174)) nil (26047 50396 309067 410000) 0 nil])
([nil nil ((#("
Esse fluxo que já observamos está validando todas as camadas necessárias no docker hub para a execução do container. O container é o que encontramos, e a verificação ocorre após o download e extração das camadas em nossa máquina. Concluída a extração e o download, o terminal não trava devido à flag -d. No entanto, ao executar um docker ps, podemos verificar o estado atual.
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 174 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 174 377 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36349) (undo-tree-id901 . -377) (undo-tree-id902 . -377) 36726) nil (26047 50396 309066 324000) 0 nil])
([nil nil ((36350 . 36351)) nil (26047 50396 309063 805000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36361) (undo-tree-id899 . -13) (undo-tree-id900 . -13) 36374) nil (26047 50396 309062 364000) 0 nil])
([nil nil ((36351 . 36352)) nil (26047 50396 309055 944000) 0 nil])
([nil nil ((36404 . 36405)) nil (26047 50396 309055 238000) 0 nil])
([nil nil ((36405 . 36406)) nil (26047 50396 309054 378000) 0 nil])
([nil nil ((36406 . 36407)) nil (26047 50396 309053 615000) 0 nil])
([nil nil ((36407 . 36408)) nil (26047 50396 309052 783000) 0 nil])
([nil nil ((36408 . 36409)) nil (26047 50396 309051 570000) 0 nil])
([nil nil ((36416 . 36417)) nil (26047 50396 309050 884000) 0 nil])
([nil nil ((36417 . 36418)) nil (26047 50396 309050 145000) 0 nil])
([nil nil ((36418 . 36419)) nil (26047 50396 309049 238000) 0 nil])
([nil nil ((36428 . 36429)) nil (26047 50396 309048 398000) 0 nil])
([nil nil ((36429 . 36430)) nil (26047 50396 309047 503000) 0 nil])
([nil nil ((36437 . 36438)) nil (26047 50396 309046 644000) 0 nil])
([nil nil ((36438 . 36439)) nil (26047 50396 309320 537000) 0 nil])
([nil nil ((36445 . 36446)) nil (26047 50456 494255 632000) 0 nil] [nil nil ((36446 . 36447)) ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 36446) (undo-tree-id936 . -1)) (26047 50396 309040 692000) 0 nil])
([nil nil ((36446 . 36447)) nil (26047 50456 494254 914000) 0 nil])
nil
([nil nil ((36571 . 36572)) nil (26047 50456 494254 232000) 0 nil])
([nil nil ((#("Diferentemente do Ubuntu e do Hello World, a imagem usada para criar este container especificou um comando que não trava o terminal.
" 0 133 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36702) (undo-tree-id944 . -133) (undo-tree-id945 . -133) 36835) nil (26047 50456 494253 168000) 0 nil])
([nil nil ((36702 . 36704)) nil (26047 50456 494250 459000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 36704)) nil (26047 50456 494249 465000) 0 nil])
([nil nil ((#(" O docker ps é utilizado várias vezes, indicando que a aplicação está em execução graças ao comando padrão executado durante " 0 125 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36885) (undo-tree-id940 . -125) (undo-tree-id941 . -125) (undo-tree-id942 . -125) (undo-tree-id943 . -125) 37010) nil (26047 50456 494247 873000) 0 nil])
([nil nil ((#("a inicialização do container." 0 29 (fontified t)) . 36885) (undo-tree-id937 . -29) (undo-tree-id938 . -29) (undo-tree-id939 . -29) 36914) nil (26047 50456 494240 718000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 37108) (undo-tree-id1018 . -13) (undo-tree-id1019 . -13) (t 26047 50456 508558 915000)) nil (26047 50822 20900 178000) 0 nil])
([nil nil ((#("localhost:80" 0 12 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -37095) (undo-tree-id1016 . -12) (undo-tree-id1017 . -12) 37107) nil (26047 50822 20897 673000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 37095) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 37095)) nil (26047 50822 20895 426000) 0 nil])
([nil nil ((37095 . 37096)) nil (26047 50822 20894 589000) 0 nil])
([nil nil ((37350 . 37351)) nil (26047 50822 20893 695000) 0 nil])
([nil nil ((35461 . 35464)) nil (26047 50822 20893 69000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . -35461) (undo-tree-id1013 . -1) (#("-" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -35462) (undo-tree-id1014 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -35463) (undo-tree-id1015 . -1) 35464) nil (26047 50822 20891 778000) 0 nil])
([nil nil ((35461 . 35474)) nil (26047 50822 20888 718000) 0 nil])
([nil nil ((35474 . 35475)) nil (26047 50822 20888 74000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35904 . 35905) (nil fontified nil 35837 . 35905) (nil fontified nil 35823 . 35837) (nil fontified nil 35792 . 35823) (nil fontified nil 35791 . 35792) (nil fontified nil 35475 . 35791) (35475 . 35905)) nil (26047 50822 20887 42000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 35823) (undo-tree-id1011 . -13) (undo-tree-id1012 . -13) 35836) nil (26047 50822 20884 941000) 0 nil])
([nil nil ((#("Podemos adotar uma abordagem mais direta, em vez de executar docker stop seguido de docker rm. Ao copiarmos o ID (1b6d75073457) e utilizarmos docker rm diretamente com o ID, acrescentando --force ao final, o container será interrompido e removido simultaneamente.
" 0 264 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38187) (undo-tree-id1009 . -264) (undo-tree-id1010 . -264) 38451) nil (26047 50822 20882 285000) 0 nil])
([nil nil ((38187 . 38188)) nil (26047 50822 20880 350000) 0 nil])
([nil nil ((38189 . 38190)) nil (26047 50822 20879 643000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 38221) (undo-tree-id1007 . -13) (undo-tree-id1008 . -13)) nil (26047 50822 20878 756000) 0 nil])
([nil nil ((#("Dessa forma, docker ps não exibe mais nenhum container em execução." 0 67 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38222) (undo-tree-id1005 . -67) (undo-tree-id1006 . -67) 38289) nil (26047 50822 20876 626000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38222) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38222)) nil (26047 50822 20874 269000) 0 nil])
([nil nil ((#("CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES" 0 53 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38222) (undo-tree-id1003 . -53) (undo-tree-id1004 . -53) 38275) nil (26047 50822 20873 253000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38222) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38222)) nil (26047 50822 20870 569000) 0 nil])
([nil nil ((38427 . 38428)) nil (26047 50822 20869 683000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38472) (undo-tree-id1000 . -13) (undo-tree-id1001 . -13) (undo-tree-id1002 . -13)) nil (26047 50822 20868 762000) 0 nil])
([nil nil ((38848 . 38849)) nil (26047 50822 20866 68000) 0 nil])
([nil nil ((38849 . 38850)) nil (26047 50822 20865 184000) 0 nil])
([nil nil ((38850 . 38851)) nil (26047 50822 20864 309000) 0 nil])
([nil nil ((38851 . 38852)) nil (26047 50822 20863 588000) 0 nil])
([nil nil ((38852 . 38853)) nil (26047 50822 20862 686000) 0 nil])
([nil nil ((38853 . 38854)) nil (26047 50822 20861 836000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -38853) (undo-tree-id999 . -1) 38854) nil (26047 50822 20860 824000) 0 nil])
([nil nil ((38861 . 38862)) nil (26047 50822 20858 819000) 0 nil])
([nil nil ((38862 . 38863)) nil (26047 50822 20857 869000) 0 nil])
([nil nil ((38863 . 38864)) nil (26047 50822 20857 186000) 0 nil])
([nil nil ((38864 . 38865)) nil (26047 50822 20856 355000) 0 nil])
([nil nil ((38873 . 38874)) nil (26047 50822 20855 568000) 0 nil])
([nil nil ((38874 . 38875)) nil (26047 50822 20854 754000) 0 nil])
([nil nil ((38882 . 38883)) nil (26047 50822 20853 966000) 0 nil])
([nil nil ((38883 . 38884)) nil (26047 50822 20853 115000) 0 nil])
([nil nil ((#("PORTS	NAMES" 0 11 (fontified t)) . 38884) (undo-tree-id996 . -11) (undo-tree-id997 . -11) (undo-tree-id998 . -11) 38895) nil (26047 50822 20851 940000) 0 nil])
([nil nil ((39069 . 39071)) nil (26047 50822 20848 829000) 0 nil])
([nil nil ((39071 . 39074)) nil (26047 50822 20848 127000) 0 nil])
([nil nil ((39074 . 39075)) nil (26047 50822 20847 390000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39085 . 39086) (nil fontified nil 39075 . 39086) (39075 . 39086)) nil (26047 50822 20846 485000) 0 nil])
([nil nil ((#("0.0.0.0:49154->80/tcp," 0 22 (fontified t)) . 38976) (undo-tree-id993 . -22) (undo-tree-id994 . -22) (undo-tree-id995 . -22) 38998) nil (26047 50822 20844 938000) 0 nil])
([nil nil ((39064 . 39065)) nil (26047 50822 20842 328000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39086 . 39087) (nil fontified nil 39065 . 39087) (39065 . 39087)) nil (26047 50822 20841 362000) 0 nil])
([nil nil ((#("0.0.0.0:49153->443/tcp, :::49153->443/tcp	happy_jang" 0 52 (fontified t)) . 38995) (undo-tree-id990 . -52) (undo-tree-id991 . -52) (undo-tree-id992 . -52)) nil (26047 50822 20839 985000) 0 nil])
([nil nil ((39035 . 39036)) nil (26047 50822 20837 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39087 . 39088) (nil fontified nil 39036 . 39088) (39036 . 39088)) nil (26047 50822 20836 417000) 0 nil])
([nil nil ((39006 . 39007)) nil (26047 50822 20835 135000) 0 nil])
([nil nil ((39007 . 39008)) nil (26047 50822 20834 346000) 0 nil])
([nil nil ((39008 . 39009)) nil (26047 50822 20833 535000) 0 nil])
([nil nil ((39009 . 39010)) nil (26047 50822 20832 679000) 0 nil])
([nil nil ((39010 . 39011)) nil (26047 50822 20831 875000) 0 nil])
([nil nil ((39011 . 39012)) nil (26047 50822 20831 175000) 0 nil])
([nil nil ((39012 . 39013)) nil (26047 50822 20830 192000) 0 nil])
([nil nil ((39013 . 39014)) nil (26047 50822 20829 465000) 0 nil])
([nil nil ((39014 . 39015)) nil (26047 50822 20828 560000) 0 nil])
([nil nil ((39015 . 39016)) nil (26047 50822 20827 666000) 0 nil])
([nil nil ((39016 . 39017)) nil (26047 50822 20826 697000) 0 nil])
([nil nil ((39017 . 39018)) nil (26047 50822 20825 862000) 0 nil])
([nil nil ((39018 . 39019)) nil (26047 50822 20824 905000) 0 nil])
([nil nil ((39019 . 39020)) nil (26047 50822 20823 957000) 0 nil])
([nil nil ((39020 . 39021)) nil (26047 50822 20823 188000) 0 nil])
([nil nil ((#("..." 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38997) (undo-tree-id987 . -3) (undo-tree-id988 . -3) (undo-tree-id989 . -3)) nil (26047 50822 20822 124000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 38997) (undo-tree-id986 . -1)) nil (26047 50822 20819 230000) 0 nil])
([nil nil ((39099 . 39100)) nil (26047 50822 20817 220000) 0 nil])
([nil nil ((#(":::49154->80/tcp," 0 17 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38977) (undo-tree-id984 . -17) (undo-tree-id985 . -17) 38994) nil (26047 50822 20816 220000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38974) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (#("	" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38975) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -38976) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) 38977) nil (26047 50822 20812 988000) 0 nil])
([nil nil ((38974 . 38975)) nil (26047 50822 20802 508000) 0 nil])
([nil nil ((39299 . 39300)) nil (26047 50822 20801 492000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 39325) (undo-tree-id967 . -13) (undo-tree-id968 . -13) (undo-tree-id969 . -13)) nil (26047 50822 20800 339000) 0 nil])
([nil nil ((39482 . 39483)) nil (26047 50822 20797 732000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -39481) (undo-tree-id965 . -1) (#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)))) . -39482) (undo-tree-id966 . -1) 39483) nil (26047 50822 20796 651000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 39502)) nil (26047 50822 20794 410000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 39526)) nil (26047 50822 20793 591000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 39732) (undo-tree-id962 . -13) (undo-tree-id963 . -13) (undo-tree-id964 . -13) 39745) nil (26047 50822 20792 494000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 40140) (undo-tree-id959 . -13) (undo-tree-id960 . -13) (undo-tree-id961 . -13)) nil (26047 50822 20789 793000) 0 nil])
([nil nil ((40109 . 40110)) nil (26047 50822 20787 512000) 0 nil])
([nil nil ((#("Como já encerramos o container, ao atualizarmos a página no navegador (F5), ele não estará mais presente, nem o conteúdo. Será exibida uma mensagem \"Unable to connect\" (\"Incapaz de conectar\")." 0 192 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 40142) (undo-tree-id956 . -192) (undo-tree-id957 . -192) (undo-tree-id958 . -192)) nil (26047 50822 20786 569000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 40142) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 40142)) nil (26047 50822 20782 821000) 0 nil])
([nil nil ((#("Contudo, a" 0 10 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -40142) (undo-tree-id954 . -10) (undo-tree-id955 . -10) 40152) nil (26047 50822 20781 708000) 0 nil])
([nil nil ((40142 . 40143)) nil (26047 50822 20779 491000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 40635) (undo-tree-id951 . -13) (undo-tree-id952 . -13) (undo-tree-id953 . -13)) nil (26047 50822 20778 549000) 0 nil])
([nil nil ((40583 . 40584)) nil (26047 50822 20775 968000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 40811) (undo-tree-id948 . -13) (undo-tree-id949 . -13) (undo-tree-id950 . -13)) nil (26047 50822 20774 989000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 40811)) nil (26047 50822 20771 933000) 0 nil])
([nil nil ((40811 . 40812)) nil (26047 50822 20770 986000) 0 nil])
([nil nil ((#("Conclusão
Nesta aula, abordamos o processo de retomada da execução, explorando alguns atalhos, como a flag -d, para manter o terminal desbloqueado, e realizamos o mapeamento de portas entre o host e o container." 0 10 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 10 210 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 210 211 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -41146) (undo-tree-id946 . -211) (undo-tree-id947 . -211) 41357) nil (26047 50822 20769 109000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 41146)) nil (26047 50822 20758 27000) 0 nil])
([nil nil ((14742 . 14747) (t 26047 50822 38513 780000)) nil (26047 51019 648491 763000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14745) (undo-tree-id1059 . -1) (#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14746) (undo-tree-id1060 . -1) 14747) nil (26047 51019 648490 93000) 0 nil])
([nil nil ((14745 . 14759)) nil (26047 51019 648487 648000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14757) (undo-tree-id1057 . -1) (#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14758) (undo-tree-id1058 . -1) 14759) nil (26047 51019 648486 470000) 0 nil])
([nil nil ((14757 . 14760)) nil (26047 51019 648483 812000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14759) (undo-tree-id1056 . -1) 14760) nil (26047 51019 648482 457000) 0 nil])
([nil nil ((14759 . 14771)) nil (26047 51019 648480 523000) 0 nil])
([nil nil ((41174 . 41175)) nil (26047 51019 648479 536000) 0 nil])
([nil nil ((41175 . 41178)) nil (26047 51019 648478 564000) 0 nil])
([nil nil ((nil rear-nonsticky nil 41190 . 41191) (nil fontified nil 41178 . 41191) (41178 . 41191)) nil (26047 51019 648477 461000) 0 nil])
([nil nil ((41191 . 41192)) nil (26047 51019 648476 116000) 0 nil])
([nil nil ((#("O" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41179) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (#("P" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41180) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (#("I" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41181) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (#("A" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41182) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("R" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41183) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41184) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (#("C" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41185) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (#("Ó" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41186) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (#("D" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41187) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (#("I" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41188) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#("G" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41189) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (#("O" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t rear-nonsticky t face org-level-2)) . -41190) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (#("
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . -41191) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) 41192) nil (26047 51019 648472 494000) 0 nil])
([nil nil ((41179 . 41188)) nil (26047 51019 648451 760000) 0 nil])
([nil nil ((41188 . 41205)) nil (26047 51019 648450 842000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41202) (undo-tree-id1027 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41203) (undo-tree-id1028 . -1) (#("g" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41204) (undo-tree-id1029 . -1) 41205) nil (26047 51019 648449 732000) 0 nil])
([nil nil ((41202 . 41203)) nil (26047 51019 648446 941000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41202) (undo-tree-id1026 . -1) 41203) nil (26047 51019 648445 978000) 0 nil])
([nil nil ((41202 . 41205)) nil (26047 51019 648443 991000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41203) (undo-tree-id1024 . -1) (#("g" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41204) (undo-tree-id1025 . -1) 41205) nil (26047 51019 648442 774000) 0 nil])
([nil nil ((41203 . 41208)) nil (26047 51019 648440 288000) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41204) (undo-tree-id1020 . -1) (#("e" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41205) (undo-tree-id1021 . -1) (#("n" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41206) (undo-tree-id1022 . -1) (#("s" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -41207) (undo-tree-id1023 . -1) 41208) nil (26047 51019 648438 207000) 0 nil])
([nil nil ((41204 . 41209)) nil (26047 51019 648426 199000) 0 nil])
([nil nil ((41209 . 41210)) nil (26047 51019 648422 588000) 0 nil])
([nil nil ((41210 . 41213) (t 26047 51019 666346 98000)) nil (26047 51058 967022 447000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14750) (undo-tree-id1068 . -1) (#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14751) (undo-tree-id1069 . -1) (#("s" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14752) (undo-tree-id1070 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14753) (undo-tree-id1071 . -1) (#("b" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14754) (undo-tree-id1072 . -1) (#("á" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14755) (undo-tree-id1073 . -1) (#("s" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14756) (undo-tree-id1074 . -1) (#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14757) (undo-tree-id1075 . -1) (#("c" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14758) (undo-tree-id1076 . -1) (#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14759) (undo-tree-id1077 . -1) (#("s" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14760) (undo-tree-id1078 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14761) (undo-tree-id1079 . -1) (#("d" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14762) (undo-tree-id1080 . -1) (#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14763) (undo-tree-id1081 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14764) (undo-tree-id1082 . -1) (#("d" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14765) (undo-tree-id1083 . -1) (#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14766) (undo-tree-id1084 . -1) (#("c" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14767) (undo-tree-id1085 . -1) (#("k" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14768) (undo-tree-id1086 . -1) (#("e" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14769) (undo-tree-id1087 . -1) (#("r" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14770) (undo-tree-id1088 . -1) 14771) nil (26047 51058 967017 763000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14743) (undo-tree-id1061 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14744) (undo-tree-id1062 . -1) (#("C" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14745) (undo-tree-id1063 . -1) (#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14746) (undo-tree-id1064 . -1) (#("m" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14747) (undo-tree-id1065 . -1) (#("a" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14748) (undo-tree-id1066 . -1) (#("n" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -14749) (undo-tree-id1067 . -1) 14750) nil (26047 51058 967343 35000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide)) . 14744)) nil (26047 51140 676974 483000) 0 nil] [nil nil ((#("*" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide)) . 14744)) ((14744 . 14745)) (26047 51058 966980 423000) 0 nil])
([nil nil ((#("*** Conhecendo o Docker Hub " 0 2 (fontified t face org-hide) 2 4 (fontified t face org-level-3) 4 28 (fontified t face org-level-3)) . 14715) (undo-tree-id1095 . -28) (undo-tree-id1096 . -28) (undo-tree-id1097 . -28)) nil (26047 51140 676973 217000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 14715)) nil (26047 51140 676970 84000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-hide)) . 17045)) nil (26047 51140 676969 50000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-hide)) . 18796)) nil (26047 51140 676968 161000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide)) . 19242)) nil (26047 51140 676967 80000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -20121) (undo-tree-id1094 . -1) 20122) nil (26047 51140 676966 109000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide)) . -25712) (undo-tree-id1093 . -1) 25713) nil (26047 51140 676964 160000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide)) . -28388) (undo-tree-id1092 . -1) 28389) nil (26047 51140 676961 716000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide)) . 31935)) nil (26047 51140 676959 818000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . 33557)) nil (26047 51140 676958 841000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-hide)) . 35426)) nil (26047 51140 676957 690000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-hide)) . 35857)) nil (26047 51140 676956 863000) 0 nil])
([nil nil ((41145 . 41146)) nil (26047 51140 676955 371000) 0 nil])
([nil nil ((41146 . 41150)) nil (26047 51140 676954 364000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -41148) (undo-tree-id1090 . -1) (#("n" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -41149) (undo-tree-id1091 . -1) 41150) nil (26047 51140 676952 968000) 0 nil])
([nil nil ((41148 . 41162)) nil (26047 51140 676950 46000) 0 nil])
([nil nil ((#("n" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -41161) (undo-tree-id1089 . -1) 41162) nil (26047 51140 676948 650000) 0 nil])
([nil nil ((41161 . 41164)) nil (26047 51140 676942 563000) 0 nil])
([nil nil ((41164 . 41165)) nil (26047 51140 676938 240000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48961 . 48962) (nil fontified nil 48725 . 48962) (nil fontified nil 48724 . 48725) (nil fontified nil 48511 . 48724) (nil fontified nil 48495 . 48511) (nil fontified nil 48494 . 48495) (nil fontified nil 48365 . 48494) (nil fontified nil 48364 . 48365) (nil fontified nil 48144 . 48364) (nil fontified nil 48143 . 48144) (nil fontified nil 48033 . 48143) (nil fontified nil 48032 . 48033) (nil fontified nil 47766 . 48032) (nil fontified nil 47765 . 47766) (nil fontified nil 47448 . 47765) (nil fontified nil 47447 . 47448) (nil fontified nil 47281 . 47447) (nil fontified nil 47280 . 47281) (nil fontified nil 47182 . 47280) (nil fontified nil 47145 . 47182) (nil fontified nil 47144 . 47145) (nil fontified nil 46858 . 47144) (nil fontified nil 46857 . 46858) (nil fontified nil 46655 . 46857) (nil fontified nil 46654 . 46655) (nil fontified nil 46446 . 46654) (nil fontified nil 46445 . 46446) (nil fontified nil 46160 . 46445) (nil fontified nil 46159 . 46160) (nil fontified nil 46068 . 46159) (nil fontified nil 46054 . 46068) (nil fontified nil 46027 . 46054) (nil fontified nil 46026 . 46027) (nil fontified nil 45809 . 46026) (nil fontified nil 45808 . 45809) (nil fontified nil 45654 . 45808) (nil fontified nil 45653 . 45654) (nil fontified nil 45413 . 45653) (nil fontified nil 45412 . 45413) (nil fontified nil 45150 . 45412) (nil fontified nil 45149 . 45150) (nil fontified nil 44897 . 45149) (nil fontified nil 44896 . 44897) (nil fontified nil 44669 . 44896) (nil fontified nil 44638 . 44669) (nil fontified nil 44637 . 44638) (nil fontified nil 44520 . 44637) (nil fontified nil 44519 . 44520) (nil fontified nil 44288 . 44519) (nil fontified nil 44287 . 44288) (nil fontified nil 43981 . 44287) (nil fontified nil 43971 . 43981) (nil fontified nil 43894 . 43971) (nil fontified nil 43821 . 43894) (nil fontified nil 43745 . 43821) (nil fontified nil 43707 . 43745) (nil fontified nil 43693 . 43707) (nil fontified nil 43665 . 43693) (nil fontified nil 43664 . 43665) (nil fontified nil 43522 . 43664) (nil fontified nil 43521 . 43522) (nil fontified nil 43224 . 43521) (nil fontified nil 43223 . 43224) (nil fontified nil 43097 . 43223) (nil fontified nil 43083 . 43097) (nil fontified nil 43081 . 43083) (nil fontified nil 43075 . 43081) (nil fontified nil 43025 . 43075) (nil fontified nil 43002 . 43025) (nil fontified nil 42980 . 43002) (nil fontified nil 42969 . 42980) (nil fontified nil 42857 . 42969) (nil fontified nil 42832 . 42857) (nil fontified nil 42821 . 42832) (nil fontified nil 42774 . 42821) (nil fontified nil 42752 . 42774) (nil fontified nil 42738 . 42752) (nil fontified nil 42654 . 42738) (nil fontified nil 42648 . 42654) (nil fontified nil 42646 . 42648) (nil fontified nil 42645 . 42646) (nil fontified nil 42612 . 42645) (nil fontified nil 42611 . 42612) (nil fontified nil 42566 . 42611) (nil fontified nil 42552 . 42566) (nil fontified nil 42524 . 42552) (nil fontified nil 42523 . 42524) (nil fontified nil 42387 . 42523) (nil fontified nil 42386 . 42387) (nil fontified nil 42184 . 42386) (nil fontified nil 42120 . 42184) (nil fontified nil 42083 . 42120) (nil fontified nil 42069 . 42083) (nil fontified nil 42055 . 42069) (nil fontified nil 42054 . 42055) (nil fontified nil 41855 . 42054) (nil fontified nil 41854 . 41855) (nil fontified nil 41770 . 41854) (nil fontified nil 41769 . 41770) (nil fontified nil 41597 . 41769) (nil fontified nil 41596 . 41597) (nil fontified nil 41476 . 41596) (nil fontified nil 41457 . 41476) (nil fontified nil 41456 . 41457) (nil fontified nil 41165 . 41456) (41165 . 48962) (t 26047 51140 696644 844000)) nil (26047 51934 491604 127000) 0 nil])
([nil nil ((#("Chegou o grande momento de explicar o que são imagens. Vamos entender efetivamente agora o que são as imagens, como elas funcionam, como se transformam em containers e como vamos criar as nossas próprias imagens, pois não podemos depender apenas do trabalho alheio para desenvolver o nosso.

" 0 291 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 291 292 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41165) (undo-tree-id1115 . -292) (undo-tree-id1116 . -292) 41457) nil (26047 51934 491546 850000) 0 nil])
([nil nil ((41560 . 41562)) nil (26047 51934 491544 579000) 0 nil])
([nil nil ((#("A" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41561) (undo-tree-id1114 . -1) 41562) nil (26047 51934 491543 304000) 0 nil])
([nil nil ((41561 . 41564)) nil (26047 51934 491541 554000) 0 nil])
([nil nil ((#("O" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41563) (undo-tree-id1113 . -1) 41564) nil (26047 51934 491540 696000) 0 nil])
([nil nil ((41563 . 41566)) nil (26047 51934 491539 125000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41564) (undo-tree-id1111 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41565) (undo-tree-id1112 . -1) 41566) nil (26047 51934 491538 44000) 0 nil])
([nil nil ((41564 . 41565)) nil (26047 51934 491535 246000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41564) (undo-tree-id1110 . -1) 41565) nil (26047 51934 491534 197000) 0 nil])
([nil nil ((41564 . 41571)) nil (26047 51934 491532 528000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41569) (undo-tree-id1108 . -1) (#("m" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41570) (undo-tree-id1109 . -1) 41571) nil (26047 51934 491531 386000) 0 nil])
([nil nil ((41569 . 41578)) nil (26047 51934 491528 386000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41577) (undo-tree-id1107 . -1) 41578) nil (26047 51934 491511 313000) 0 nil])
([nil nil ((41577 . 41588)) nil (26047 51934 491509 670000) 0 nil])
([nil nil ((41588 . 41594)) nil (26047 51934 491508 713000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -41587) (undo-tree-id1106 . -1) 41588) nil (26047 51934 491507 750000) 0 nil])
([nil nil ((41587 . 41588)) nil (26047 51934 491506 12000) 0 nil])
([nil nil ((41594 . 41598)) nil (26047 51934 491505 138000) 0 nil])
([nil nil ((41766 . 41767)) nil (26047 51934 491504 302000) 0 nil])
([nil nil ((41767 . 41768)) nil (26047 51934 491484 788000) 0 nil])
([nil nil ((41782 . 41783)) nil (26047 51934 491484 4000) 0 nil])
([nil nil ((41786 . 41787)) nil (26047 51934 491483 160000) 0 nil])
([nil nil ((41787 . 41788)) nil (26047 51934 491482 294000) 0 nil])
([nil nil ((41808 . 41809)) nil (26047 51934 491481 478000) 0 nil])
([nil nil ((#("do	cker images" 0 2 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 2 3 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent))) 3 14 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 41806) (undo-tree-id1103 . -14) (undo-tree-id1104 . -14) (undo-tree-id1105 . -14)) nil (26047 51934 491480 105000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 41806)) nil (26047 51934 491476 178000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 41806) (undo-tree-id1100 . -13) (undo-tree-id1101 . -13) (undo-tree-id1102 . -13) 41819) nil (26047 51934 491475 33000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 41806)) nil (26047 51934 491455 722000) 0 nil])
([nil nil ((41907 . 41908)) nil (26047 51934 491454 804000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("          " 0 5 (face org-indent) 5 10 (face org-indent)) fontified t)) . -41803) (undo-tree-id1099 . -1) 41804) nil (26047 51934 491453 783000) 0 nil])
([nil nil ((41816 . 41817)) nil (26047 51934 491451 786000) 0 nil])
([nil nil ((41817 . 41818)) nil (26047 51934 491450 904000) 0 nil])
([nil nil ((41818 . 41819)) nil (26047 51934 491449 765000) 0 nil])
([nil nil ((41823 . 41824)) nil (26047 51934 491448 919000) 0 nil])
([nil nil ((41824 . 41825)) nil (26047 51934 491447 934000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -41824) (undo-tree-id1098 . -1) 41825) nil (26047 51934 563460 572000) 0 nil])
([nil nil ((41833 . 41834)) nil (26047 52300 786598 589000) 0 nil] [nil nil ((41834 . 41835)) ((#("	" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 41834)) (26047 51934 491772 245000) 0 nil])
([nil nil ((41841 . 41842)) nil (26047 52300 786597 846000) 0 nil])
([nil nil ((41834 . 41835)) ((#("	" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 41834) (undo-tree-id1117 . -1)) (26047 51934 491435 967000) 0 nil])
([nil nil ((42253 . 42254)) nil (26047 52300 786597 36000) 0 nil])
nil
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 42282) (undo-tree-id1144 . -13) (undo-tree-id1145 . -13)) nil (26047 52300 786596 40000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -42800) (undo-tree-id1142 . -13) (undo-tree-id1143 . -13) 42813) nil (26047 52300 786593 769000) 0 nil])
([nil nil ((43369 . 43370)) nil (26047 52300 786591 558000) 0 nil])
([nil nil ((43397 . 43398)) nil (26047 52300 786590 604000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -43399) (undo-tree-id1140 . -13) (undo-tree-id1141 . -13) 43412) nil (26047 52300 786589 516000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 43399)) nil (26047 52300 786586 683000) 0 nil])
([nil nil ((43405 . 43406)) nil (26047 52300 786585 776000) 0 nil])
([nil nil ((43406 . 43407)) nil (26047 52300 786584 954000) 0 nil])
([nil nil ((43598 . 43599)) nil (26047 52300 786584 137000) 0 nil])
([nil nil ((43525 . 43526)) nil (26047 52300 786583 258000) 0 nil])
([nil nil ((43415 . 43416)) nil (26047 52300 786582 327000) 0 nil])
([nil nil ((43427 . 43428)) nil (26047 52300 786581 462000) 0 nil])
([nil nil ((43428 . 43429)) nil (26047 52300 786580 714000) 0 nil])
([nil nil ((43429 . 43430)) nil (26047 52300 786579 839000) 0 nil])
([nil nil ((43430 . 43431)) nil (26047 52300 786578 841000) 0 nil])
([nil nil ((43431 . 43432)) nil (26047 52300 786577 967000) 0 nil])
([nil nil ((43432 . 43433)) nil (26047 52300 786577 105000) 0 nil])
([nil nil ((43433 . 43434)) nil (26047 52300 786576 317000) 0 nil])
([nil nil ((43434 . 43435)) nil (26047 52300 786575 521000) 0 nil])
([nil nil ((43435 . 43436)) nil (26047 52300 786574 673000) 0 nil])
([nil nil ((43522 . 43523)) nil (26047 52300 786573 814000) 0 nil])
([nil nil ((43597 . 43598)) nil (26047 52300 786572 849000) 0 nil])
([nil nil ((#("U" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 43645)) nil (26047 52300 786571 975000) 0 nil])
([nil nil ((43645 . 43646)) nil (26047 52300 786571 247000) 0 nil])
([nil nil ((41165 . 41170)) nil (26047 52300 786570 423000) 0 nil])
([nil nil ((44351 . 44356)) nil (26047 52300 786569 586000) 0 nil])
([nil nil ((44868 . 44869)) nil (26047 52300 786568 727000) 0 nil])
([nil nil ((45130 . 45131)) nil (26047 52300 786567 894000) 0 nil])
([nil nil ((45372 . 45373)) nil (26047 52300 786567 145000) 0 nil])
([nil nil ((45133 . 45134)) nil (26047 52300 786566 357000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO
Como o instrutor já apagado a imagem, ela será baixada, extraída e o terminal será aberto." 0 14 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 14 104 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 45776) (undo-tree-id1138 . -104) (undo-tree-id1139 . -104)) nil (26047 52300 786564 900000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 45776)) nil (26047 52300 786562 586000) 0 nil])
([nil nil ((46061 . 46063)) nil (26047 52300 786561 731000) 0 nil])
([nil nil ((#("/" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46061) (undo-tree-id1136 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46062) (undo-tree-id1137 . -1) 46063) nil (26047 52300 786560 576000) 0 nil])
([nil nil ((46061 . 46062)) nil (26047 52300 786558 4000) 0 nil])
([nil nil ((45777 . 45778)) nil (26047 52300 786556 835000) 0 nil])
([nil nil ((46065 . 46066)) nil (26047 52300 786555 977000) 0 nil])
([nil nil ((46273 . 46293)) nil (26047 52300 786555 94000) 0 nil])
([nil nil ((#("?" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46292) (undo-tree-id1135 . -1) 46293) nil (26047 52300 786553 776000) 0 nil])
([nil nil ((46292 . 46293)) nil (26047 52300 786552 98000) 0 nil])
([nil nil ((46293 . 46298)) nil (26047 52300 786551 138000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46297) (undo-tree-id1134 . -1) 46298) nil (26047 52300 786550 83000) 0 nil])
([nil nil ((46297 . 46300)) nil (26047 52300 786548 456000) 0 nil])
([nil nil ((nil rear-nonsticky nil 46312 . 46313) (nil fontified nil 46300 . 46313) (46300 . 46313)) nil (26047 52300 786547 450000) 0 nil])
([nil nil ((#("C" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46300) (undo-tree-id1121 . -1) (#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46301) (undo-tree-id1122 . -1) (#("P" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46302) (undo-tree-id1123 . -1) (#("I" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46303) (undo-tree-id1124 . -1) (#("A" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46304) (undo-tree-id1125 . -1) (#("R" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46305) (undo-tree-id1126 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46306) (undo-tree-id1127 . -1) (#("C" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46307) (undo-tree-id1128 . -1) (#("Ó" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46308) (undo-tree-id1129 . -1) (#("D" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46309) (undo-tree-id1130 . -1) (#("I" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46310) (undo-tree-id1131 . -1) (#("G" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -46311) (undo-tree-id1132 . -1) (#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -46312) (undo-tree-id1133 . -1) 46313) nil (26047 52300 786543 842000) 0 nil])
([nil nil ((nil rear-nonsticky nil 46336 . 46337) (nil fontified nil 46300 . 46337) (46300 . 46337)) nil (26047 52300 786530 569000) 0 nil])
([nil nil ((46337 . 46338)) nil (26047 52300 786528 982000) 0 nil])
([nil nil ((46338 . 46343)) nil (26047 52300 786528 48000) 0 nil])
([nil nil ((47454 . 47455)) nil (26047 52300 786526 977000) 0 nil])
([nil nil ((nil rear-nonsticky nil 47523 . 47524) (nil fontified nil 47518 . 47524) (nil fontified nil 47517 . 47518) (nil fontified nil 47481 . 47517) (nil fontified nil 47455 . 47481) (47455 . 47524)) nil (26047 52300 786525 496000) 0 nil])
([nil nil ((#("03_Camadas_Container=CamadasImagem+RW.png" 0 36 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 36 37 (rear-nonsticky t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 37 41 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 47481) (undo-tree-id1118 . -41) (undo-tree-id1119 . -41) (undo-tree-id1120 . -41)) nil (26047 52300 786522 530000) 0 nil])
([nil nil ((nil rear-nonsticky nil 47528 . 47529) (nil fontified nil 47481 . 47529) (47481 . 47529)) nil (26047 52300 786509 823000) 0 nil])
([nil nil ((47798 . 47799) (t 26047 52300 801869 116000)) nil (26047 52390 579647 114000) 0 nil])
([nil nil ((47533 . 47534)) nil (26047 52390 579645 176000) 0 nil])
([nil nil ((48263 . 48264)) nil (26047 52390 579643 577000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 48264) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1)) nil (26047 52390 579639 370000) 0 nil])
([nil nil ((48731 . 48732) (t 26047 52390 603486 366000)) nil (26047 52716 293973 939000) 0 nil])
([nil nil ((48732 . 48753)) nil (26047 52716 293972 873000) 0 nil])
([nil nil ((48753 . 48757)) nil (26047 52716 293971 956000) 0 nil])
([nil nil ((48737 . 48738)) nil (26047 52716 293970 995000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -48737) (undo-tree-id1154 . -1) 48738) nil (26047 52716 293951 320000) 0 nil])
([nil nil ((48737 . 48741)) nil (26047 52716 293949 739000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 48741)) nil (26047 52716 293948 844000) 0 nil])
([nil nil ((48741 . 48742)) nil (26047 52716 293947 980000) 0 nil])
([nil nil ((48761 . 48762)) nil (26047 52716 293947 34000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48774 . 48775) (nil fontified nil 48762 . 48775) (48762 . 48775)) nil (26047 52716 293946 172000) 0 nil])
([nil nil ((48775 . 48776)) nil (26047 52716 293944 915000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -48775) (undo-tree-id1153 . -1) 48776) nil (26047 52716 293943 921000) 0 nil])
([nil nil ((48775 . 48777)) nil (26047 52716 293942 4000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48791 . 48792) (nil fontified nil 48777 . 48792) (48777 . 48792)) nil (26047 52716 293941 7000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -48791) (undo-tree-id1152 . -1) 48792) nil (26047 52716 293939 417000) 0 nil])
([nil nil ((48791 . 48792)) nil (26047 52716 293937 678000) 0 nil])
([nil nil ((nil rear-nonsticky nil 48806 . 48807) (nil fontified nil 48792 . 48807) (48792 . 48807)) nil (26047 52716 293936 578000) 0 nil])
([nil nil ((48792 . 48793)) nil (26047 52716 293935 359000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -48807) (undo-tree-id1151 . -1) 48808) nil (26047 52716 293934 353000) 0 nil])
([nil nil ((48807 . 48809)) nil (26047 52716 293932 508000) 0 nil])
([nil nil ((48731 . 48732)) nil (26047 52716 293931 576000) 0 nil])
([nil nil ((48732 . 48744)) nil (26047 52716 293930 723000) 0 nil])
([nil nil ((#("**** Criando" 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide) 3 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 5 12 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 48732) (undo-tree-id1149 . -12) (undo-tree-id1150 . -12)) nil (26047 52716 293929 772000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide)) . 48732) (#("
" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 48732)) nil (26047 52716 293926 812000) 0 nil])
([nil nil ((46835 . 46840)) nil (26047 52716 293925 611000) 0 nil])
([nil nil ((48736 . 48737)) nil (26047 52716 293924 691000) 0 nil])
([nil nil ((48737 . 48758)) nil (26047 52716 293923 398000) 0 nil])
([nil nil ((48758 . 48759)) nil (26047 52716 293922 471000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -48758) (undo-tree-id1148 . -1) 48759) nil (26047 52716 293920 601000) 0 nil])
([nil nil ((48758 . 48766)) nil (26047 52716 293912 193000) 0 nil])
([nil nil ((48766 . 48767) (t 26047 52716 314803 935000)) nil (26047 54265 124599 494000) 0 nil])
([nil nil ((48767 . 48768)) nil (26047 54265 124598 494000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)))) . -48767) (undo-tree-id1191 . -1) 48768) nil (26047 54265 124597 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60013 . 60014) (nil fontified nil 59935 . 60014) (nil fontified nil 59934 . 59935) (nil fontified nil 59776 . 59934) (nil fontified nil 59775 . 59776) (nil fontified nil 59582 . 59775) (nil fontified nil 59566 . 59582) (nil fontified nil 59565 . 59566) (nil fontified nil 59415 . 59565) (nil fontified nil 59401 . 59415) (nil fontified nil 59386 . 59401) (nil fontified nil 59385 . 59386) (nil fontified nil 59304 . 59385) (nil fontified nil 59290 . 59304) (nil fontified nil 59237 . 59290) (nil fontified nil 59236 . 59237) (nil fontified nil 59108 . 59236) (nil fontified nil 59107 . 59108) (nil fontified nil 58829 . 59107) (nil fontified nil 58828 . 58829) (nil fontified nil 58733 . 58828) (nil fontified nil 58719 . 58733) (nil fontified nil 58716 . 58719) (nil fontified nil 58664 . 58716) (nil fontified nil 58639 . 58664) (nil fontified nil 58638 . 58639) (nil fontified nil 58628 . 58638) (nil fontified nil 58627 . 58628) (nil fontified nil 58500 . 58627) (nil fontified nil 58499 . 58500) (nil fontified nil 58244 . 58499) (nil fontified nil 58243 . 58244) (nil fontified nil 58176 . 58243) (nil fontified nil 58137 . 58176) (nil fontified nil 58077 . 58137) (nil fontified nil 58040 . 58077) (nil fontified nil 58026 . 58040) (nil fontified nil 58012 . 58026) (nil fontified nil 58011 . 58012) (nil fontified nil 57919 . 58011) (nil fontified nil 57896 . 57919) (nil fontified nil 57895 . 57896) (nil fontified nil 57744 . 57895) (nil fontified nil 57743 . 57744) (nil fontified nil 57700 . 57743) (nil fontified nil 57699 . 57700) (nil fontified nil 57564 . 57699) (nil fontified nil 57563 . 57564) (nil fontified nil 57309 . 57563) (nil fontified nil 57308 . 57309) (nil fontified nil 57127 . 57308) (nil fontified nil 57126 . 57127) (nil fontified nil 56982 . 57126) (nil fontified nil 56981 . 56982) (nil fontified nil 56747 . 56981) (nil fontified nil 56746 . 56747) (nil fontified nil 56553 . 56746) (nil fontified nil 56552 . 56553) (nil fontified nil 56316 . 56552) (nil fontified nil 56302 . 56316) (nil fontified nil 56260 . 56302) (nil fontified nil 56259 . 56260) (nil fontified nil 56118 . 56259) (nil fontified nil 56117 . 56118) (nil fontified nil 55797 . 56117) (nil fontified nil 55783 . 55797) (nil fontified nil 55758 . 55783) (nil fontified nil 55757 . 55758) (nil fontified nil 55651 . 55757) (nil fontified nil 55634 . 55651) (nil fontified nil 55633 . 55634) (nil fontified nil 55373 . 55633) (nil fontified nil 55372 . 55373) (nil fontified nil 55156 . 55372) (nil fontified nil 55155 . 55156) (nil fontified nil 54958 . 55155) (nil fontified nil 54944 . 54958) (nil fontified nil 54923 . 54944) (nil fontified nil 54907 . 54923) (nil fontified nil 54898 . 54907) (nil fontified nil 54880 . 54898) (nil fontified nil 54867 . 54880) (nil fontified nil 54866 . 54867) (nil fontified nil 54771 . 54866) (nil fontified nil 54770 . 54771) (nil fontified nil 54554 . 54770) (nil fontified nil 54553 . 54554) (nil fontified nil 54452 . 54553) (nil fontified nil 54451 . 54452) (nil fontified nil 54210 . 54451) (nil fontified nil 54209 . 54210) (nil fontified nil 54014 . 54209) (nil fontified nil 54000 . 54014) (nil fontified nil 53979 . 54000) (nil fontified nil 53978 . 53979) (nil fontified nil 53771 . 53978) (nil fontified nil 53770 . 53771) (nil fontified nil 53526 . 53770) (nil fontified nil 53512 . 53526) (nil fontified nil 53496 . 53512) (nil fontified nil 53495 . 53496) (nil fontified nil 53292 . 53495) (nil fontified nil 53291 . 53292) (nil fontified nil 53150 . 53291) (nil fontified nil 53136 . 53150) (nil fontified nil 53119 . 53136) (nil fontified nil 53118 . 53119) (nil fontified nil 52958 . 53118) (nil fontified nil 52957 . 52958) (nil fontified nil 52701 . 52957) (nil fontified nil 52700 . 52701) (nil fontified nil 52508 . 52700) (nil fontified nil 52507 . 52508) (nil fontified nil 52368 . 52507) (nil fontified nil 52354 . 52368) (nil fontified nil 52341 . 52354) (nil fontified nil 52340 . 52341) (nil fontified nil 52191 . 52340) (nil fontified nil 52190 . 52191) (nil fontified nil 52052 . 52190) (nil fontified nil 52051 . 52052) (nil fontified nil 51716 . 52051) (nil fontified nil 51715 . 51716) (nil fontified nil 51477 . 51715) (nil fontified nil 51476 . 51477) (nil fontified nil 51255 . 51476) (nil fontified nil 51254 . 51255) (nil fontified nil 50972 . 51254) (nil fontified nil 50971 . 50972) (nil fontified nil 50763 . 50971) (nil fontified nil 50762 . 50763) (nil fontified nil 50584 . 50762) (nil fontified nil 50583 . 50584) (nil fontified nil 50380 . 50583) (nil fontified nil 50379 . 50380) (nil fontified nil 50256 . 50379) (nil fontified nil 50255 . 50256) (nil fontified nil 49967 . 50255) (nil fontified nil 49966 . 49967) (nil fontified nil 49823 . 49966) (nil fontified nil 49822 . 49823) (nil fontified nil 49599 . 49822) (nil fontified nil 49598 . 49599) (nil fontified nil 49314 . 49598) (nil fontified nil 49285 . 49314) (nil fontified nil 49284 . 49285) (nil fontified nil 49064 . 49284) (nil fontified nil 49063 . 49064) (nil fontified nil 48936 . 49063) (nil fontified nil 48935 . 48936) (nil fontified nil 48767 . 48935) (48767 . 60014)) nil (26047 54265 124589 547000) 0 nil])
([nil nil ((49285 . 49290)) nil (26047 54265 124560 656000) 0 nil])
([nil nil ((55648 . 55649)) nil (26047 54265 124559 738000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -55648) (undo-tree-id1190 . -1) 55649) nil (26047 54265 124558 675000) 0 nil])
([nil nil ((55639 . 55644)) nil (26047 54265 124557 143000) 0 nil])
([nil nil ((57906 . 57911)) nil (26047 54265 124556 270000) 0 nil])
([nil nil ((#("Nesse vídeo, vamos criar a nossa primeira imagem. Já entendemos o que é uma imagem, como ela se transforma em um container e qual a diferença entre imagem e container.

" 0 168 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 168 169 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -48767) (undo-tree-id1188 . -169) (undo-tree-id1189 . -169) 48936) nil (26047 54265 124555 131000) 0 nil])
([nil nil ((#("Mas não queremos simplesmente clicar duas vezes no arquivo index.html para abri-lo, queremos um servidor que nos disponibilize essa aplicação.
" 0 143 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49659) (undo-tree-id1186 . -143) (undo-tree-id1187 . -143) 49802) nil (26047 54265 124552 377000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49659)) nil (26047 54265 124550 23000) 0 nil])
([nil nil ((49735 . 49740)) nil (26047 54265 124549 272000) 0 nil])
([nil nil ((49740 . 49743)) nil (26047 54265 124548 560000) 0 nil])
([nil nil ((49737 . 49741)) nil (26047 54265 124547 637000) 0 nil])
([nil nil ((49747 . 49767)) nil (26047 54265 124546 790000) 0 nil])
([nil nil ((#("
Neste caso, vamos utilizar o Visual Studio Code para fazer a edição de texto, mas você pode usar o IDE de sua preferência." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 67 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 67 123 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49979) (undo-tree-id1184 . -123) (undo-tree-id1185 . -123)) nil (26047 54265 124545 690000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49979)) nil (26047 54265 124543 666000) 0 nil])
([nil nil ((50182 . 50183)) nil (26047 54265 124542 840000) 0 nil])
([nil nil ((#("De ínicio, vamos criar um novo arquivo clicando em \"File > New File\" (ou \"Ctrl + N\") e apertar \"Ctrl+S\" para salvá-lo dentro da nossa pasta de \"exemplo-node\", que também estará disponível para download. 
" 0 204 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49980) (undo-tree-id1182 . -204) (undo-tree-id1183 . -204) 50184) nil (26047 54265 124541 772000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49980)) nil (26047 54265 124539 515000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49988) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49988) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49988) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49988)) nil (26047 54265 124538 90000) 0 nil])
([nil nil ((49988 . 49991)) nil (26047 54265 124536 774000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49987) (undo-tree-id1178 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49988) (undo-tree-id1179 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49989) (undo-tree-id1180 . -1) (#("u" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49990) (undo-tree-id1181 . -1) 49991) nil (26047 54265 124535 245000) 0 nil])
([nil nil ((49987 . 49992)) nil (26047 54265 124530 524000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49990) (undo-tree-id1176 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -49991) (undo-tree-id1177 . -1) 49992) nil (26047 54265 124529 237000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 49990)) nil (26047 54265 124526 798000) 0 nil])
([nil nil ((49995 . 50002)) nil (26047 54265 124525 894000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -50000) (undo-tree-id1174 . -1) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -50001) (undo-tree-id1175 . -1) 50002) nil (26047 54265 124524 722000) 0 nil])
([nil nil ((50000 . 50011)) nil (26047 54265 124522 312000) 0 nil])
([nil nil ((#(", que é basicamente o arquivo que vamos criar" 0 45 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -50054) (undo-tree-id1172 . -45) (undo-tree-id1173 . -45) 50099) nil (26047 54265 124521 149000) 0 nil])
([nil nil ((50054 . 50055)) nil (26047 54265 124518 874000) 0 nil])
([nil nil ((#(". Repare que o VS Code consegue reconhecer que é um arquivo Dockerfile." 0 71 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -50055) (undo-tree-id1170 . -71) (undo-tree-id1171 . -71) 50126) nil (26047 54265 124517 776000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -50054) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) 50055) nil (26047 54265 124515 400000) 0 nil])
([nil nil ((50054 . 50055)) nil (26047 54265 124513 205000) 0 nil])
([nil nil ((51021 . 51025)) nil (26047 54265 124512 297000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51022) (undo-tree-id1165 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51023) (undo-tree-id1166 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51024) (undo-tree-id1167 . -1) 51025) nil (26047 54265 124511 164000) 0 nil])
([nil nil ((51022 . 51026)) nil (26047 54265 124507 697000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51021) (undo-tree-id1160 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51022) (undo-tree-id1161 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51023) (undo-tree-id1162 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51024) (undo-tree-id1163 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51025) (undo-tree-id1164 . -1) 51026) nil (26047 54265 124506 196000) 0 nil])
([nil nil ((51021 . 51036)) nil (26047 54265 124499 202000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 51663) (undo-tree-id1157 . -13) (undo-tree-id1158 . -13) (undo-tree-id1159 . -13)) nil (26047 54265 124498 53000) 0 nil])
([nil nil ((51744 . 51751)) nil (26047 54265 124494 764000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51750) (undo-tree-id1156 . -1) 51751) nil (26047 54265 124493 653000) 0 nil])
([nil nil ((51750 . 51757)) nil (26047 54265 124491 239000) 0 nil])
([nil nil ((#("J" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -51756) (undo-tree-id1155 . -1) 51757) nil (26047 54265 124489 798000) 0 nil])
([nil nil ((51756 . 51760)) nil (26047 54265 614225 450000) 0 nil])
([nil nil ((52447 . 52457)) nil (26047 55892 913268 279000) 0 nil] [nil nil ((52141 . 52142)) ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52141)) (26047 54265 316146 126000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52447) (undo-tree-id1332 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52448) (undo-tree-id1333 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52449) (undo-tree-id1334 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52450) (undo-tree-id1335 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52451) (undo-tree-id1336 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52452) (undo-tree-id1337 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52453) (undo-tree-id1338 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52454) (undo-tree-id1339 . -1) (#("/" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52455) (undo-tree-id1340 . -1) (#("/" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (italic) font-lock-multiline t org-emphasis t)) . -52456) (undo-tree-id1341 . -1) 52457) nil (26047 55892 913265 897000) 0 nil])
([nil nil ((52137 . 52138)) ((#("\"" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52137)) (26047 54265 124744 28000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 52448) (undo-tree-id1330 . -13) (undo-tree-id1331 . -13)) nil (26047 55892 913256 734000) 0 nil])
([nil nil ((52144 . 52145)) ((#("\"" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52144) (undo-tree-id1192 . -1)) (26047 54265 124474 953000) 0 nil])
([nil nil ((52448 . 52452)) nil (26047 55892 913254 604000) 0 nil])
nil
([nil nil ((#(":" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52451) (undo-tree-id1329 . -1) 52452) nil (26047 55892 913253 364000) 0 nil])
([nil nil ((52451 . 52452)) nil (26047 55892 913251 553000) 0 nil])
([nil nil ((#("A" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52449) (undo-tree-id1326 . -1) (#("P" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52450) (undo-tree-id1327 . -1) (#("/" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52451) (undo-tree-id1328 . -1) 52452) nil (26047 55892 913250 179000) 0 nil])
([nil nil ((52449 . 52452)) nil (26047 55892 913246 228000) 0 nil])
([nil nil ((52452 . 52461)) nil (26047 55892 913245 470000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52459) (undo-tree-id1324 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52460) (undo-tree-id1325 . -1) 52461) nil (26047 55892 913244 250000) 0 nil])
([nil nil ((52459 . 52462)) nil (26047 55892 913241 656000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52460) (undo-tree-id1322 . -1) (#("\"" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52461) (undo-tree-id1323 . -1) 52462) nil (26047 55892 913240 476000) 0 nil])
([nil nil ((52460 . 52464)) nil (26047 55892 913237 585000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52463) (undo-tree-id1321 . -1) 52464) nil (26047 55892 913236 452000) 0 nil])
([nil nil ((52463 . 52484)) nil (26047 55892 913234 676000) 0 nil])
([nil nil ((52484 . 52487)) nil (26047 55892 913233 860000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52485) (undo-tree-id1319 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52486) (undo-tree-id1320 . -1) 52487) nil (26047 55892 913232 672000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52483) (undo-tree-id1317 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52484) (undo-tree-id1318 . -1) 52485) nil (26047 55892 913229 497000) 0 nil])
([nil nil ((52483 . 52504)) nil (26047 55892 913226 944000) 0 nil])
([nil nil ((52504 . 52513)) nil (26047 55892 913225 911000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52487) (undo-tree-id1312 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52488) (undo-tree-id1313 . -1) (#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52489) (undo-tree-id1314 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52490) (undo-tree-id1315 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52491) (undo-tree-id1316 . -1) 52492) nil (26047 55892 913224 281000) 0 nil])
([nil nil ((52487 . 52488)) nil (26047 55892 913219 256000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52505) (undo-tree-id1308 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52506) (undo-tree-id1309 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52507) (undo-tree-id1310 . -1) (#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52508) (undo-tree-id1311 . -1) 52509) nil (26047 55892 913217 886000) 0 nil])
([nil nil ((52505 . 52509)) nil (26047 55892 913213 326000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52507) (undo-tree-id1306 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52508) (undo-tree-id1307 . -1) 52509) nil (26047 55892 913212 158000) 0 nil])
([nil nil ((52507 . 52528)) nil (26047 55892 913209 308000) 0 nil])
([nil nil ((52528 . 52532)) nil (26047 55892 913208 437000) 0 nil])
([nil nil ((52532 . 52542)) nil (26047 55892 913207 590000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52539) (undo-tree-id1303 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52540) (undo-tree-id1304 . -1) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52541) (undo-tree-id1305 . -1) 52542) nil (26047 55892 913205 956000) 0 nil])
([nil nil ((52539 . 52560)) nil (26047 55892 913202 635000) 0 nil])
([nil nil ((52560 . 52562)) nil (26047 55892 913201 674000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52558) (undo-tree-id1299 . -1) (#("N" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52559) (undo-tree-id1300 . -1) (#("E" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52560) (undo-tree-id1301 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52561) (undo-tree-id1302 . -1) 52562) nil (26047 55892 913200 288000) 0 nil])
([nil nil ((52558 . 52570)) nil (26047 55892 913196 143000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52569) (undo-tree-id1298 . -1) 52570) nil (26047 55892 913195 217000) 0 nil])
([nil nil ((52569 . 52574)) nil (26047 55892 913193 526000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52570) (undo-tree-id1294 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52571) (undo-tree-id1295 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52572) (undo-tree-id1296 . -1) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52573) (undo-tree-id1297 . -1) 52574) nil (26047 55892 913192 129000) 0 nil])
([nil nil ((52570 . 52591)) nil (26047 55892 913188 168000) 0 nil])
([nil nil ((52591 . 52604)) nil (26047 55892 913187 234000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52603) (undo-tree-id1293 . -1) 52604) nil (26047 55892 913186 310000) 0 nil])
([nil nil ((52603 . 52613)) nil (26047 55892 913184 742000) 0 nil])
([nil nil ((52613 . 52622)) nil (26047 55892 913183 647000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52608) (undo-tree-id1279 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52609) (undo-tree-id1280 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52610) (undo-tree-id1281 . -1) (#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52611) (undo-tree-id1282 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52612) (undo-tree-id1283 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52613) (undo-tree-id1284 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52614) (undo-tree-id1285 . -1) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52615) (undo-tree-id1286 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52616) (undo-tree-id1287 . -1) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52617) (undo-tree-id1288 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52618) (undo-tree-id1289 . -1) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52619) (undo-tree-id1290 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52620) (undo-tree-id1291 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52621) (undo-tree-id1292 . -1) 52622) nil (26047 55892 913180 741000) 0 nil])
([nil nil ((52608 . 52619)) nil (26047 55892 913167 806000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52618) (undo-tree-id1278 . -1) 52619) nil (26047 55892 913166 801000) 0 nil])
([nil nil ((52618 . 52633)) nil (26047 55892 913165 237000) 0 nil])
([nil nil ((52633 . 52641)) nil (26047 55892 913164 419000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52639) (undo-tree-id1274 . -1) (undo-tree-id1275 . 1) (undo-tree-id1276 . -1) (#("." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52640) (undo-tree-id1277 . -1) 52641) nil (26047 55892 913163 51000) 0 nil])
([nil nil ((52639 . 52642)) nil (26047 55892 913159 170000) 0 nil])
([nil nil ((#("f" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52640) (undo-tree-id1272 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52641) (undo-tree-id1273 . -1) 52642) nil (26047 55892 913157 974000) 0 nil])
([nil nil ((52640 . 52651)) nil (26047 55892 913155 500000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52634) (#("h" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52634) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52634) (#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52634) (#("z" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52634)) nil (26047 55892 913154 227000) 0 nil])
([nil nil ((52646 . 52648)) nil (26047 55892 913152 431000) 0 nil])
([nil nil ((52648 . 52657)) nil (26047 55892 913151 498000) 0 nil])
([nil nil ((52658 . 52659)) nil (26047 55892 913150 666000) 0 nil])
([nil nil ((52487 . 52489)) nil (26047 55892 913149 798000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52488) (undo-tree-id1271 . -1) 52489) nil (26047 55892 913148 795000) 0 nil])
([nil nil ((52488 . 52497)) nil (26047 55892 913147 220000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52495) (undo-tree-id1269 . -1) (#("n" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52496) (undo-tree-id1270 . -1) 52497) nil (26047 55892 913146 10000) 0 nil])
([nil nil ((52495 . 52499)) nil (26047 55892 913143 650000) 0 nil])
([nil nil ((#("l" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52498) (undo-tree-id1268 . -1) 52499) nil (26047 55892 913142 661000) 0 nil])
([nil nil ((52498 . 52499)) nil (26047 55892 913141 76000) 0 nil])
([nil nil ((#("H" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52498) (undo-tree-id1267 . -1) 52499) nil (26047 55892 913140 31000) 0 nil])
([nil nil ((52498 . 52501)) nil (26047 55892 913138 331000) 0 nil])
([nil nil ((#("h" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52498) (undo-tree-id1264 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52499) (undo-tree-id1265 . -1) (#("t" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52500) (undo-tree-id1266 . -1) 52501) nil (26047 55892 913136 889000) 0 nil])
([nil nil ((52498 . 52503)) nil (26047 55892 913133 91000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52502) (undo-tree-id1263 . -1) 52503) nil (26047 55892 913132 97000) 0 nil])
([nil nil ((52502 . 52507)) nil (26047 55892 913130 378000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52505) (undo-tree-id1261 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52506) (undo-tree-id1262 . -1) 52507) nil (26047 55892 913129 233000) 0 nil])
([nil nil ((52505 . 52522)) nil (26047 55892 913126 771000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52519) (undo-tree-id1258 . -1) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52520) (undo-tree-id1259 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52521) (undo-tree-id1260 . -1) 52522) nil (26047 55892 913125 470000) 0 nil])
([nil nil ((52519 . 52526)) nil (26047 55892 913122 253000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52577) (#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52577)) nil (26047 55892 913121 433000) 0 nil])
([nil nil ((52577 . 52593)) nil (26047 55892 913120 127000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52592) (undo-tree-id1257 . -1) 52593) nil (26047 55892 913119 270000) 0 nil])
([nil nil ((#("A partir deste momento, estamos copiando esse conteúdo do diretório do nosso host para o diretório dentro da nossa imagem chamado /app-node.
" 0 51 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 51 141 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52711) (undo-tree-id1255 . -141) (undo-tree-id1256 . -141)) nil (26047 55892 913117 375000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52711)) nil (26047 55892 913115 190000) 0 nil])
([nil nil ((52930 . 52931)) nil (26047 55892 913114 222000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52932) (undo-tree-id1253 . -13) (undo-tree-id1254 . -13) 52945) nil (26047 55892 913112 822000) 0 nil])
([nil nil ((52915 . 52916)) nil (26047 55892 913110 536000) 0 nil])
([nil nil ((52431 . 52432)) nil (26047 55892 913109 551000) 0 nil])
([nil nil ((52448 . 52449)) nil (26047 55892 913108 691000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52934) (undo-tree-id1252 . -1)) nil (26047 55892 913107 713000) 0 nil])
([nil nil ((52710 . 52724)) nil (26047 55892 913106 153000) 0 nil])
([nil nil ((52724 . 52725)) nil (26047 55892 913105 174000) 0 nil])
([nil nil ((52714 . 52715)) nil (26047 55892 913104 332000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52673) (undo-tree-id1249 . -1) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52674) (undo-tree-id1250 . -1) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52675) (undo-tree-id1251 . -1) 52676) nil (26047 55892 913102 991000) 0 nil])
([nil nil ((52673 . 52678)) nil (26047 55892 913099 829000) 0 nil])
([nil nil ((52728 . 52738)) nil (26047 55892 913099 63000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52737) (undo-tree-id1248 . -1) 52738) nil (26047 55892 913097 745000) 0 nil])
([nil nil ((52737 . 52758)) nil (26047 55892 913096 190000) 0 nil])
([nil nil ((52758 . 52762)) nil (26047 55892 913095 303000) 0 nil])
([nil nil ((52763 . 52764)) nil (26047 55892 913094 445000) 0 nil])
([nil nil ((#(";" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52763) (undo-tree-id1247 . -1) 52764) nil (26047 55892 913093 525000) 0 nil])
([nil nil ((52763 . 52764)) nil (26047 55892 913092 25000) 0 nil])
([nil nil ((52987 . 52995)) nil (26047 55892 913091 190000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -52994) (undo-tree-id1244 . -1) (undo-tree-id1245 . 1) (undo-tree-id1246 . -1) 52995) nil (26047 55892 913089 829000) 0 nil])
([nil nil ((52994 . 52996)) nil (26047 55892 913086 607000) 0 nil])
([nil nil ((#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52452) (#("R" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 52452)) nil (26047 55892 913085 709000) 0 nil])
([nil nil ((52452 . 52454)) nil (26047 55892 913084 771000) 0 nil])
([nil nil ((52995 . 53002)) nil (26047 55892 913083 988000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53001) (undo-tree-id1243 . -1) 53002) nil (26047 55892 913083 145000) 0 nil])
([nil nil ((53001 . 53022)) nil (26047 55892 913081 632000) 0 nil])
([nil nil ((53022 . 53030)) nil (26047 55892 913080 817000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53028) (undo-tree-id1241 . -1) (#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53029) (undo-tree-id1242 . -1) 53030) nil (26047 55892 913079 675000) 0 nil])
([nil nil ((53028 . 53031)) nil (26047 55892 913077 249000) 0 nil])
([nil nil ((#("v" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53030) (undo-tree-id1240 . -1) 53031) nil (26047 55892 913076 209000) 0 nil])
([nil nil ((53030 . 53032)) nil (26047 55892 913074 170000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53031) (undo-tree-id1239 . -1) 53032) nil (26047 55892 913073 105000) 0 nil])
([nil nil ((53031 . 53033)) nil (26047 55892 913071 455000) 0 nil])
([nil nil ((53033 . 53054)) nil (26047 55892 913070 615000) 0 nil])
([nil nil ((53054 . 53059)) nil (26047 55892 913069 795000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53056) (undo-tree-id1236 . -1) (#("a" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53057) (undo-tree-id1237 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53058) (undo-tree-id1238 . -1) 53059) nil (26047 55892 913068 507000) 0 nil])
([nil nil ((53056 . 53057)) nil (26047 55892 913065 72000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53056) (undo-tree-id1235 . -1) 53057) nil (26047 55892 913064 26000) 0 nil])
([nil nil ((53056 . 53063)) nil (26047 55892 913062 389000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53062) (undo-tree-id1234 . -1) 53063) nil (26047 55892 913061 360000) 0 nil])
([nil nil ((53062 . 53064)) nil (26047 55892 913059 699000) 0 nil])
([nil nil ((#("executado" 0 9 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 53014) (undo-tree-id1232 . -9) (undo-tree-id1233 . -9)) nil (26047 55892 913058 835000) 0 nil])
([nil nil ((53014 . 53024)) nil (26047 55892 913056 756000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53035) (undo-tree-id1230 . -1) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53036) (undo-tree-id1231 . -1) 53037) nil (26047 55892 913055 707000) 0 nil])
([nil nil ((53035 . 53037)) nil (26047 55892 913053 245000) 0 nil])
([nil nil ((53065 . 53069)) nil (26047 55892 913052 431000) 0 nil])
([nil nil ((53069 . 53090)) nil (26047 55892 913051 676000) 0 nil])
([nil nil ((53090 . 53092)) nil (26047 55892 913050 641000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53091) (undo-tree-id1229 . -1) 53092) nil (26047 55892 913049 456000) 0 nil])
([nil nil ((53091 . 53096)) nil (26047 55892 913047 575000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -53095) (undo-tree-id1228 . -1) 53096) nil (26047 55892 913046 405000) 0 nil])
([nil nil ((53095 . 53116)) nil (26047 55892 913044 736000) 0 nil])
([nil nil ((53116 . 53119)) nil (26047 55892 913043 971000) 0 nil])
([nil nil ((53119 . 53137)) nil (26047 55892 913042 682000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 53613) (undo-tree-id1226 . -13) (undo-tree-id1227 . -13)) nil (26047 55892 913041 696000) 0 nil])
([nil nil ((53481 . 53482)) nil (26047 55892 913039 596000) 0 nil])
([nil nil ((53561 . 53562)) nil (26047 55892 913038 715000) 0 nil])
([nil nil ((54154 . 54155)) nil (26047 55892 913037 669000) 0 nil])
([nil nil ((54054 . 54055)) nil (26047 55892 913036 707000) 0 nil])
([nil nil ((54157 . 54158)) nil (26047 55892 913035 805000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 54158)) nil (26047 55892 913034 953000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 54548) (undo-tree-id1224 . -13) (undo-tree-id1225 . -13)) nil (26047 55892 913033 941000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -55379) (undo-tree-id1222 . -13) (undo-tree-id1223 . -13) 55392) nil (26047 55892 913031 743000) 0 nil])
([nil nil ((55619 . 55622)) nil (26047 55892 913028 999000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -55620) (undo-tree-id1220 . -1) (#("." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -55621) (undo-tree-id1221 . -1) 55622) nil (26047 55892 913027 847000) 0 nil])
([nil nil ((55620 . 55622)) nil (26047 55892 913024 946000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -55885) (undo-tree-id1219 . -1) 55886) nil (26047 55892 913023 740000) 0 nil])
([nil nil ((55886 . 55887)) nil (26047 55892 913022 47000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 55888) (undo-tree-id1217 . -13) (undo-tree-id1218 . -13)) nil (26047 55892 913021 97000) 0 nil])
([nil nil ((55846 . 55847)) nil (26047 55892 913018 763000) 0 nil])
([nil nil ((#("
Voltando para o terminal, ele está terminando de extrair nesse momento as últimas camadas dos downloads que ele fez da imagem do Node.

Status: Downloaded newer image for node:14

Feito isso, passamos para a etapa de WORKDIR, depois de cópia de arquivos e execução do npm install. E por fim, ele definiu o npm start no ENTRYPOINT.
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 136 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 136 137 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 137 180 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 180 181 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 181 332 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 57137) (undo-tree-id1215 . -332) (undo-tree-id1216 . -332)) nil (26047 55892 913017 597000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 57137)) nil (26047 55892 913015 280000) 0 nil])
([nil nil ((57137 . 57138)) nil (26047 55892 913014 483000) 0 nil])
([nil nil ((57272 . 57273)) nil (26047 55892 913013 603000) 0 nil])
([nil nil ((57259 . 57260)) nil (26047 55892 913012 813000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 57275) (undo-tree-id1213 . -13) (undo-tree-id1214 . -13)) nil (26047 55892 913011 468000) 0 nil])
([nil nil ((57287 . 57288)) nil (26047 55892 913009 422000) 0 nil])
([nil nil ((57288 . 57289)) nil (26047 55892 913008 722000) 0 nil])
([nil nil ((57289 . 57290)) nil (26047 55892 913007 873000) 0 nil])
([nil nil ((57303 . 57304)) nil (26047 55892 913007 27000) 0 nil])
([nil nil ((57299 . 57300)) nil (26047 55892 913006 220000) 0 nil])
([nil nil ((57300 . 57301)) nil (26047 55892 913005 399000) 0 nil])
([nil nil ((57301 . 57302)) nil (26047 55892 913004 618000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 57302)) nil (26047 55892 913003 302000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 57299) (#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 57299) (#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 57299)) nil (26047 55892 913002 207000) 0 nil])
([nil nil ((57299 . 57300)) nil (26047 55892 913001 96000) 0 nil])
([nil nil ((57312 . 57313)) nil (26047 55892 913000 262000) 0 nil])
([nil nil ((57313 . 57314)) nil (26047 55892 912999 320000) 0 nil])
([nil nil ((57383 . 57384)) nil (26047 55892 912998 513000) 0 nil])
([nil nil ((57384 . 57385)) nil (26047 55892 912997 621000) 0 nil])
([nil nil ((57385 . 57386)) nil (26047 55892 912996 482000) 0 nil])
([nil nil ((57386 . 57387)) nil (26047 55892 912995 344000) 0 nil])
([nil nil ((57416 . 57417)) nil (26047 55892 912994 489000) 0 nil])
([nil nil ((57423 . 57424)) nil (26047 55892 912993 662000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 57886)) nil (26047 55892 912992 795000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -57966) (undo-tree-id1211 . -13) (undo-tree-id1212 . -13) 57979) nil (26047 55892 912991 768000) 0 nil])
([nil nil ((#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -57978) (57973 . 57978) (#("        " 0 8 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                         " 0 7 (face org-indent) 7 25 (face org-indent)) fontified nil)) . -57925) (57916 . 57925) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -57891) (57886 . 57891) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -57975) (57971 . 57975) (#("       " 0 7 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                       " 0 7 (face org-indent) 7 23 (face org-indent)) fontified nil)) . -57923) (57915 . 57923) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -57890) (57886 . 57890) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -57972) (57969 . 57972) (#("      " 0 6 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                     " 0 7 (face org-indent) 7 21 (face org-indent)) fontified nil)) . -57921) (57914 . 57921) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -57889) (57886 . 57889) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -57969) (57967 . 57969) (#("     " 0 5 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                   " 0 7 (face org-indent) 7 19 (face org-indent)) fontified nil)) . -57919) (57913 . 57919) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -57888) (57886 . 57888) (57965 . 57966) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -57917) (57912 . 57917) (57886 . 57887)) nil (26047 55892 912987 316000) 0 nil])
([nil nil ((#("Há um pequeno problema que precisaremos resolver, mas primeiro vamos colocar isso no terminal.
" 0 95 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 57982) (undo-tree-id1209 . -95) (undo-tree-id1210 . -95)) nil (26047 55892 912980 986000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 57982)) nil (26047 55892 912890 389000) 0 nil])
([nil nil ((#("Como a porta 8080 já está em uso por causa dos nossos exemplos anteriores, " 0 75 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -58021) (undo-tree-id1207 . -75) (undo-tree-id1208 . -75) 58096) nil (26047 55892 912889 75000) 0 nil])
([nil nil ((58021 . 58022)) nil (26047 55892 912886 873000) 0 nil])
([nil nil ((#("v" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 58022)) nil (26047 55892 912885 905000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 58368) (undo-tree-id1204 . -13) (undo-tree-id1205 . -13) (undo-tree-id1206 . -13)) nil (26047 55892 912884 918000) 0 nil])
([nil nil ((58315 . 58316)) nil (26047 55892 912882 431000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -58467) (undo-tree-id1202 . -13) (undo-tree-id1203 . -13) 58480) nil (26047 55892 912881 120000) 0 nil])
([nil nil ((58452 . 58453)) nil (26047 55892 912877 871000) 0 nil])
([nil nil ((#("
Existem ainda algumas questões que precisamos deixar menos obscuras para o nosso Dockerfile, para que possamos deixar tudo muito mais fácil de ser entendido.

Ainda, vamos entender mais alguns detalhes sobre a criação de imagem. Até mais!" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 159 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 159 160 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 160 238 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 238 239 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -58829) (undo-tree-id1200 . -239) (undo-tree-id1201 . -239) 59068) nil (26047 55892 912876 796000) 0 nil])
([nil nil ((58906 . 58907)) nil (26047 55892 912874 616000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -58904) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -58905) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -58906) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) 58907) nil (26047 55892 912872 940000) 0 nil])
([nil nil ((58904 . 58905)) nil (26047 55892 912866 898000) 0 nil])
([nil nil ((58905 . 58908)) nil (26047 55892 912865 922000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -58907) (undo-tree-id1193 . -1) 58908) nil (26047 55892 912863 851000) 0 nil])
([nil nil ((58907 . 58917)) nil (26047 55892 912853 177000) 0 nil])
([nil nil ((55888 . 55890) (t 26047 55892 935760 899000)) nil (26047 56059 651829 601000) 0 nil])
([nil nil ((58831 . 58832) (t 26047 56059 672450 620000)) nil (26047 56088 976816 650000) 0 nil])
([nil nil ((58832 . 58853)) nil (26047 56088 976814 798000) 0 nil])
([nil nil ((58853 . 58858)) nil (26047 56790 235835 580000) 0 nil])
([nil nil ((58858 . 58859) (t 26047 56088 999913 18000)) nil (26047 56984 635293 269000) 0 nil] [nil nil ((48629 . 48630) (t 26047 56088 999913 18000)) ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 48629) (undo-tree-id1343 . -1)) (26047 56789 878017 422000) 0 nil])
([nil nil ((58858 . 58861)) nil (26047 56984 635292 196000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -48629) (undo-tree-id1342 . -1) 48630) ((48629 . 48630)) (26047 56789 877865 252000) 0 nil])
([nil nil ((58861 . 58867)) nil (26047 56984 635291 342000) 0 nil])
nil
([nil nil ((#("A" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58865) (undo-tree-id1384 . -1) (#("N" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58866) (undo-tree-id1385 . -1) 58867) nil (26047 56984 635290 245000) 0 nil])
([nil nil ((58865 . 58880)) nil (26047 56984 635287 678000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58868) (undo-tree-id1372 . -1) (#("-" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58869) (undo-tree-id1373 . -1) (#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58870) (undo-tree-id1374 . -1) (#("A" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58871) (undo-tree-id1375 . -1) (#("P" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58872) (undo-tree-id1376 . -1) (#(":" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58873) (undo-tree-id1377 . -1) (#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58874) (undo-tree-id1378 . -1) (#("E" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58875) (undo-tree-id1379 . -1) (#("n" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58876) (undo-tree-id1380 . -1) (#("t" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58877) (undo-tree-id1381 . -1) (#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58878) (undo-tree-id1382 . -1) (#("r" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58879) (undo-tree-id1383 . -1) 58880) nil (26047 56984 635285 114000) 0 nil])
([nil nil ((58860 . 58864)) nil (26047 56984 635275 40000) 0 nil])
([nil nil ((58872 . 58873)) nil (26047 56984 635274 305000) 0 nil])
([nil nil ((58873 . 58884)) nil (26047 56984 635273 477000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58882) (undo-tree-id1370 . -1) (#("d" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58883) (undo-tree-id1371 . -1) 58884) nil (26047 56984 635272 212000) 0 nil])
([nil nil ((58882 . 58895)) nil (26047 56984 635268 995000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58893) (undo-tree-id1368 . -1) (#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -58894) (undo-tree-id1369 . -1) 58895) nil (26047 56984 635267 630000) 0 nil])
([nil nil ((58893 . 58914)) nil (26047 56984 635265 93000) 0 nil])
([nil nil ((58914 . 58915)) nil (26047 56984 635264 220000) 0 nil])
([nil nil ((nil rear-nonsticky nil 68054 . 68055) (nil fontified nil 67862 . 68055) (nil fontified nil 67861 . 67862) (nil fontified nil 67690 . 67861) (nil fontified nil 67689 . 67690) (nil fontified nil 67456 . 67689) (nil fontified nil 67455 . 67456) (nil fontified nil 67249 . 67455) (nil fontified nil 67248 . 67249) (nil fontified nil 67075 . 67248) (nil fontified nil 67059 . 67075) (nil fontified nil 67058 . 67059) (nil fontified nil 67007 . 67058) (nil fontified nil 66993 . 67007) (nil fontified nil 66978 . 66993) (nil fontified nil 66977 . 66978) (nil fontified nil 66874 . 66977) (nil fontified nil 66860 . 66874) (nil fontified nil 66807 . 66860) (nil fontified nil 66806 . 66807) (nil fontified nil 66623 . 66806) (nil fontified nil 66622 . 66623) (nil fontified nil 66483 . 66622) (nil fontified nil 66469 . 66483) (nil fontified nil 66355 . 66469) (nil fontified nil 66301 . 66355) (nil fontified nil 66300 . 66301) (nil fontified nil 66267 . 66300) (nil fontified nil 66253 . 66267) (nil fontified nil 66213 . 66253) (nil fontified nil 66212 . 66213) (nil fontified nil 66041 . 66212) (nil fontified nil 66027 . 66041) (nil fontified nil 65983 . 66027) (nil fontified nil 65982 . 65983) (nil fontified nil 65888 . 65982) (nil fontified nil 65874 . 65888) (nil fontified nil 65853 . 65874) (nil fontified nil 65837 . 65853) (nil fontified nil 65828 . 65837) (nil fontified nil 65809 . 65828) (nil fontified nil 65788 . 65809) (nil fontified nil 65768 . 65788) (nil fontified nil 65750 . 65768) (nil fontified nil 65737 . 65750) (nil fontified nil 65736 . 65737) (nil fontified nil 65650 . 65736) (nil fontified nil 65649 . 65650) (nil fontified nil 65501 . 65649) (nil fontified nil 65500 . 65501) (nil fontified nil 65351 . 65500) (nil fontified nil 65350 . 65351) (nil fontified nil 65055 . 65350) (nil fontified nil 65054 . 65055) (nil fontified nil 64955 . 65054) (nil fontified nil 64941 . 64955) (nil fontified nil 64920 . 64941) (nil fontified nil 64904 . 64920) (nil fontified nil 64895 . 64904) (nil fontified nil 64882 . 64895) (nil fontified nil 64868 . 64882) (nil fontified nil 64850 . 64868) (nil fontified nil 64837 . 64850) (nil fontified nil 64836 . 64837) (nil fontified nil 64660 . 64836) (nil fontified nil 64659 . 64660) (nil fontified nil 64563 . 64659) (nil fontified nil 64562 . 64563) (nil fontified nil 64210 . 64562) (nil fontified nil 64209 . 64210) (nil fontified nil 64122 . 64209) (nil fontified nil 64108 . 64122) (nil fontified nil 64105 . 64108) (nil fontified nil 64053 . 64105) (nil fontified nil 64018 . 64053) (nil fontified nil 64017 . 64018) (nil fontified nil 64007 . 64017) (nil fontified nil 64006 . 64007) (nil fontified nil 63807 . 64006) (nil fontified nil 63806 . 63807) (nil fontified nil 63527 . 63806) (nil fontified nil 63526 . 63527) (nil fontified nil 63353 . 63526) (nil fontified nil 63322 . 63353) (nil fontified nil 63321 . 63322) (nil fontified nil 63083 . 63321) (nil fontified nil 63069 . 63083) (nil fontified nil 62958 . 63069) (nil fontified nil 62904 . 62958) (nil fontified nil 62903 . 62904) (nil fontified nil 62800 . 62903) (nil fontified nil 62786 . 62800) (nil fontified nil 62746 . 62786) (nil fontified nil 62745 . 62746) (nil fontified nil 62554 . 62745) (nil fontified nil 62540 . 62554) (nil fontified nil 62496 . 62540) (nil fontified nil 62495 . 62496) (nil fontified nil 62369 . 62495) (nil fontified nil 62368 . 62369) (nil fontified nil 62186 . 62368) (nil fontified nil 62172 . 62186) (nil fontified nil 62151 . 62172) (nil fontified nil 62135 . 62151) (nil fontified nil 62126 . 62135) (nil fontified nil 62114 . 62126) (nil fontified nil 62096 . 62114) (nil fontified nil 62083 . 62096) (nil fontified nil 62082 . 62083) (nil fontified nil 61870 . 62082) (nil fontified nil 61869 . 61870) (nil fontified nil 61678 . 61869) (nil fontified nil 61677 . 61678) (nil fontified nil 61565 . 61677) (nil fontified nil 61412 . 61565) (nil fontified nil 61305 . 61412) (nil fontified nil 61251 . 61305) (nil fontified nil 61250 . 61251) (nil fontified nil 61216 . 61250) (nil fontified nil 61202 . 61216) (nil fontified nil 61152 . 61202) (nil fontified nil 61151 . 61152) (nil fontified nil 61068 . 61151) (nil fontified nil 61067 . 61068) (nil fontified nil 60979 . 61067) (nil fontified nil 60828 . 60979) (nil fontified nil 60774 . 60828) (nil fontified nil 60773 . 60774) (nil fontified nil 60724 . 60773) (nil fontified nil 60710 . 60724) (nil fontified nil 60657 . 60710) (nil fontified nil 60656 . 60657) (nil fontified nil 60388 . 60656) (nil fontified nil 60387 . 60388) (nil fontified nil 60246 . 60387) (nil fontified nil 60245 . 60246) (nil fontified nil 60080 . 60245) (nil fontified nil 60066 . 60080) (nil fontified nil 60028 . 60066) (nil fontified nil 60027 . 60028) (nil fontified nil 59867 . 60027) (nil fontified nil 59866 . 59867) (nil fontified nil 59686 . 59866) (nil fontified nil 59685 . 59686) (nil fontified nil 59453 . 59685) (nil fontified nil 59439 . 59453) (nil fontified nil 59361 . 59439) (nil fontified nil 59288 . 59361) (nil fontified nil 59234 . 59288) (nil fontified nil 59220 . 59234) (nil fontified nil 59210 . 59220) (nil fontified nil 59209 . 59210) (nil fontified nil 59119 . 59209) (nil fontified nil 59118 . 59119) (nil fontified nil 58936 . 59118) (nil fontified nil 58915 . 58936) (58915 . 68055)) nil (26047 56984 635257 159000) 0 nil])
([nil nil ((58915 . 58920)) nil (26047 56984 635228 460000) 0 nil])
([nil nil ((63327 . 63332)) nil (26047 56984 635227 684000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -59225) (undo-tree-id1366 . -13) (undo-tree-id1367 . -13) 59238) nil (26047 56984 635226 602000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 59225)) nil (26047 56984 635224 451000) 0 nil])
([nil nil ((#("Primeiramente, vamos retornar ao nosso terminal. Antes de mais nada, vamos entender um novo comando que, na verdade, nem é tão novo, é uma junção de dois comandos que já conhecemos.

Antes, vamos executar um docker ps para conferir que temos vários containers em execução.

docker ps
CONTAINER ID	IMAGE	COMMAND	CREATED	STATUS	PORTS	NAMES
4f437608038f	ubuntu	\"sleep 1d\"	4 minutes ago	Up 4 minutes	-	clever_gates
092466f3459c	ubuntu	\"sleep 1d\"	4 minutes ago	Up 4 minutes	-	unruffled_haslett
…	…	…	…	…	…	…
Como poder parar todos de uma vez? Podemos usar o comando docker stop. Agora, podemos simplesmente dizer que queremos parar todos os nossos containers, passando os IDs deles. Para isso, basta executar o comando docker container ls.

No entanto, precisamos dizer que queremos executar este comando e usá-lo como entrada para o nosso stop. Então, vamos colocar esse segundo comando entre cifrão e parênteses ($()).

Além disso, precisamos dizer que queremos pegar apenas o ID. Entre os parênteses, colocamos a flag -q, de quiet (silencioso), assim, ele vai pegar apenas o ID.

docker stop $(docker container ls -q)
COPIAR CÓDIGO
Ao dar \"Enter\", ele dará aqueles 10 segundos para parar os containers de maneira segura, por assim dizer. Ele vai parar todos os containeres a partir desse momento.

" 0 182 (fontified t) 182 183 (fontified t) 183 273 (fontified t) 273 274 (fontified t) 274 284 (fontified t) 284 338 (fontified t) 338 411 (fontified t) 411 465 (fontified t) 465 489 (fontified t) 489 503 (fontified t) 503 735 (fontified t) 735 736 (fontified t) 736 916 (fontified t) 916 917 (fontified t) 917 989 (fontified t) 989 1077 (fontified t) 1077 1078 (fontified t) 1078 1116 (fontified t) 1116 1130 (fontified t) 1130 1295 (fontified t) 1295 1296 (fontified t)) . 58941) (undo-tree-id1363 . -1296) (undo-tree-id1364 . -411) (undo-tree-id1365 . -1296) 60237) nil (26047 56984 635223 262000) 0 nil])
([nil nil ((58914 . 58915)) nil (26047 56984 635220 322000) 0 nil])
([nil nil ((58915 . 58923)) nil (26047 56984 635219 525000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58921) (undo-tree-id1361 . -1) (#("a" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58922) (undo-tree-id1362 . -1) 58923) nil (26047 56984 635218 336000) 0 nil])
([nil nil ((58921 . 58927)) nil (26047 56984 635215 989000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58925) (undo-tree-id1359 . -1) (#("o" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58926) (undo-tree-id1360 . -1) 58927) nil (26047 56984 635214 904000) 0 nil])
([nil nil ((58925 . 58929)) nil (26047 56984 635212 633000) 0 nil])
([nil nil ((#("t" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58928) (undo-tree-id1358 . -1) 58929) nil (26047 56984 635211 716000) 0 nil])
([nil nil ((58928 . 58931)) nil (26047 56984 635210 91000) 0 nil])
([nil nil ((58931 . 58952)) nil (26047 56984 635209 144000) 0 nil])
([nil nil ((58952 . 58971)) nil (26047 56984 635208 289000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58963) (undo-tree-id1350 . -1) (#("e" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58964) (undo-tree-id1351 . -1) (#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58965) (undo-tree-id1352 . -1) (#("u" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58966) (undo-tree-id1353 . -1) (#("m" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58967) (undo-tree-id1354 . -1) (#("a" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58968) (undo-tree-id1355 . -1) (#(" " 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58969) (undo-tree-id1356 . -1) (#("v" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -58970) (undo-tree-id1357 . -1) 58971) nil (26047 56984 635206 36000) 0 nil])
([nil nil ((58963 . 58983)) nil (26047 56984 635198 19000) 0 nil])
([nil nil ((58983 . 58984)) nil (26047 56984 635197 192000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60279 . 60280) (nil fontified nil 60279 . 60280) (nil fontified nil 60114 . 60279) (nil fontified nil 60100 . 60114) (nil fontified nil 60062 . 60100) (nil fontified nil 60061 . 60062) (nil fontified nil 59973 . 60061) (nil fontified nil 59901 . 59973) (nil fontified nil 59900 . 59901) (nil fontified nil 59720 . 59900) (nil fontified nil 59719 . 59720) (nil fontified nil 59487 . 59719) (nil fontified nil 59473 . 59487) (nil fontified nil 59449 . 59473) (nil fontified nil 59395 . 59449) (nil fontified nil 59322 . 59395) (nil fontified nil 59268 . 59322) (nil fontified nil 59258 . 59268) (nil fontified nil 59257 . 59258) (nil fontified nil 59167 . 59257) (nil fontified nil 59166 . 59167) (nil fontified nil 58984 . 59166) (58984 . 60280)) nil (26047 56984 635195 313000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 60280) (undo-tree-id1349 . -1)) nil (26047 56984 635190 354000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -60100) (undo-tree-id1347 . -13) (undo-tree-id1348 . -13) 60113) nil (26047 56984 635186 834000) 0 nil])
([nil nil ((60062 . 60063)) nil (26047 56984 635184 378000) 0 nil])
([nil nil ((60545 . 60546)) nil (26047 56984 635183 494000) 0 nil])
([nil nil ((60706 . 60707)) nil (26047 56984 635182 550000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 60760) (undo-tree-id1344 . -13) (undo-tree-id1345 . -13) (undo-tree-id1346 . -13)) nil (26047 56984 635427 453000) 0 nil])
([nil nil ((60830 . 60831)) nil (26047 57001 56334 967000) 0 nil] [nil nil ((60831 . 60832)) ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 60831) (undo-tree-id1386 . -1)) (26047 56984 635168 880000) 0 nil])
([nil nil ((60831 . 60832)) nil (26047 57001 56334 206000) 0 nil])
nil
([nil nil ((60832 . 60833)) nil (26047 57001 56333 214000) 0 nil])
([nil nil ((60833 . 60834)) nil (26047 57001 56332 293000) 0 nil])
([nil nil ((60834 . 60835)) nil (26047 57001 56331 433000) 0 nil])
([nil nil ((60843 . 60844)) nil (26047 57001 56330 575000) 0 nil])
([nil nil ((60844 . 60845)) nil (26047 57001 56329 820000) 0 nil])
([nil nil ((60845 . 60846)) nil (26047 57001 56329 14000) 0 nil])
([nil nil ((60846 . 60847)) nil (26047 57001 56327 819000) 0 nil])
([nil nil ((60855 . 60856)) nil (26047 57001 56326 771000) 0 nil])
([nil nil ((60856 . 60857)) nil (26047 57001 56325 949000) 0 nil])
([nil nil ((60864 . 60865)) nil (26047 57001 56324 850000) 0 nil])
([nil nil ((60865 . 60866)) nil (26047 57001 56477 169000) 0 nil])
([nil nil ((#("0.0.0.0:8000->3000/tcp, :::8080->3000/tcp	infallible_torvalds" 0 23 (fontified t) 23 61 (fontified t)) . 60967) (undo-tree-id1400 . -61) (undo-tree-id1401 . -61) (undo-tree-id1402 . -61) 61028) nil (26047 57078 678510 198000) 0 nil] [nil nil ((#("0.0.0.0:8000->3000/tcp," 0 23 (fontified t)) . 60967) (undo-tree-id1387 . -23) (undo-tree-id1388 . -23) (undo-tree-id1389 . -23) 60990) ((60967 . 60990)) (26047 57001 56319 608000) 0 nil])
([nil nil ((60967 . 60969)) nil (26047 57078 678507 337000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 61029 . 61030) (nil fontified nil 60992 . 61030) (nil fontified nil 60969 . 60992) (60969 . 61030)) nil (26047 57078 678506 375000) 0 nil])
([nil nil ((#("			PORTS	NAMES" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 14 (fontified t)) . 60863) (undo-tree-id1397 . -14) (undo-tree-id1398 . -14) (undo-tree-id1399 . -14)) nil (26047 57078 678504 701000) 0 nil])
([nil nil ((60954 . 60955)) nil (26047 57078 678501 694000) 0 nil])
([nil nil ((nil rear-nonsticky nil 60968 . 60969) (nil fontified nil 60958 . 60969) (nil fontified nil 60957 . 60958) (nil fontified nil 60956 . 60957) (nil fontified nil 60955 . 60956) (60955 . 60969)) nil (26047 57078 678500 645000) 0 nil])
([nil nil ((#("	" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)) fontified t)) . 60955) (#("	" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                " 0 7 (face org-indent) 7 16 (face org-indent)) fontified t)) . 60955) (#("	" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                    " 0 7 (face org-indent) 7 20 (face org-indent)) fontified t)) . 60955)) nil (26047 57078 678498 637000) 0 nil])
([nil nil ((60959 . 60960)) nil (26047 57078 678497 377000) 0 nil])
([nil nil ((60960 . 60961)) nil (26047 57078 678496 611000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -60959) (undo-tree-id1395 . -1) (#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -60960) (undo-tree-id1396 . -1) 60961) nil (26047 57078 678495 390000) 0 nil])
([nil nil ((60960 . 60961)) nil (26047 57078 678493 4000) 0 nil])
([nil nil ((60961 . 60962)) nil (26047 57078 678491 990000) 0 nil])
([nil nil ((60962 . 60963)) nil (26047 57078 678491 176000) 0 nil])
([nil nil ((60963 . 60964)) nil (26047 57078 678490 453000) 0 nil])
([nil nil ((60964 . 60965)) nil (26047 57078 678489 661000) 0 nil])
([nil nil ((60965 . 60966)) nil (26047 57078 678488 892000) 0 nil])
([nil nil ((60966 . 60967)) nil (26047 57078 678487 985000) 0 nil])
([nil nil ((60967 . 60968)) nil (26047 57078 678487 55000) 0 nil])
([nil nil ((60968 . 60969)) nil (26047 57078 678486 280000) 0 nil])
([nil nil ((61037 . 61038)) nil (26047 57078 678485 588000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -61262) (undo-tree-id1393 . -13) (undo-tree-id1394 . -13) 61275) nil (26047 57078 678484 448000) 0 nil])
([nil nil ((61212 . 61213)) nil (26047 57078 678481 944000) 0 nil])
([nil nil ((61318 . 61319)) nil (26047 57078 678481 58000) 0 nil])
([nil nil ((61319 . 61320)) nil (26047 57078 678480 163000) 0 nil])
([nil nil ((61320 . 61321)) nil (26047 57078 678479 313000) 0 nil])
([nil nil ((61321 . 61322)) nil (26047 57078 678478 435000) 0 nil])
([nil nil ((61322 . 61323)) nil (26047 57078 678477 598000) 0 nil])
([nil nil ((61331 . 61332)) nil (26047 57078 678476 722000) 0 nil])
([nil nil ((61332 . 61333)) nil (26047 57078 678475 851000) 0 nil])
([nil nil ((61333 . 61334)) nil (26047 57078 678474 920000) 0 nil])
([nil nil ((61334 . 61335)) nil (26047 57078 678474 102000) 0 nil])
([nil nil ((61343 . 61344)) nil (26047 57078 678473 289000) 0 nil])
([nil nil ((61344 . 61345)) nil (26047 57078 678472 372000) 0 nil])
([nil nil ((61352 . 61353)) nil (26047 57078 678471 404000) 0 nil])
([nil nil ((61353 . 61354)) nil (26047 57079 600551 592000) 0 nil])
([nil nil ((#("0.0.0.0:8000->3000/tcp, :::8080->3000/tcp	infallible_torvalds" 0 61 (fontified t)) . 61564) (undo-tree-id1417 . -61) (undo-tree-id1418 . -61) (undo-tree-id1419 . -61) 61625) nil (26047 57138 888231 80000) 0 nil] [nil nil ((#("0.0.0.0:8000->3000/tcp, :::8080->3000/tcp	infallible_torvalds" 0 61 (fontified t)) . 61564) (undo-tree-id1390 . -61) (undo-tree-id1391 . -61) (undo-tree-id1392 . -61) 61625) ((61564 . 61625)) (26047 57078 866102 960000) 0 nil])
([nil nil ((61564 . 61567)) nil (26047 57138 888228 115000) 0 nil])
([nil nil ((61564 . 61566)) ((#("

" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 61564) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2)) (26047 57078 678700 525000) 0 nil])
([nil nil ((61567 . 61572)) nil (26047 57138 888227 155000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61626 . 61627) (nil fontified nil 61566 . 61627) (61566 . 61627)) ((#("0.0.0.0:8000->3000/tcp, :::8080->3000/tcp	infallible_torvalds" 0 60 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 60 61 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil rear-nonsticky nil)) . 61566) (nil rear-nonsticky t 61626 . 61627)) (26047 57078 678453 88000) 0 nil])
([nil nil ((61572 . 61575)) nil (26047 57138 888226 281000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 61634 . 61635) (nil fontified nil 61574 . 61635) (61574 . 61635)) nil (26047 57138 888225 341000) 0 nil])
([nil nil ((#("PORTS	NAMES" 0 11 (fontified t)) . 61354) (undo-tree-id1414 . -11) (undo-tree-id1415 . -11) (undo-tree-id1416 . -11) 61365) nil (26047 57138 888223 745000) 0 nil])
([nil nil ((#("P" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -61556) (undo-tree-id1409 . -1) (#("O" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -61557) (undo-tree-id1410 . -1) (#("R" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -61558) (undo-tree-id1411 . -1) (#("T" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -61559) (undo-tree-id1412 . -1) (#("S" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -61560) (undo-tree-id1413 . -1) 61561) nil (26047 57138 888219 753000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61566 . 61567) (nil fontified nil 61556 . 61567) (61556 . 61567)) nil (26047 57138 888212 717000) 0 nil])
([nil nil ((#("	-	peaceful_mendel" 0 18 (fontified t)) . 61443) (undo-tree-id1406 . -18) (undo-tree-id1407 . -18) (undo-tree-id1408 . -18)) nil (26047 57138 888211 28000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61567 . 61568) (nil fontified nil 61550 . 61568) (61550 . 61568)) nil (26047 57138 888202 170000) 0 nil])
([nil nil ((#("	" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("              " 0 7 (face org-indent) 7 14 (face org-indent)) fontified t)) . 61550)) nil (26047 57138 888200 622000) 0 nil])
([nil nil ((61550 . 61551)) nil (26047 57138 888199 808000) 0 nil])
([nil nil ((61552 . 61554)) nil (26047 57138 888198 946000) 0 nil])
([nil nil ((61544 . 61545)) nil (26047 57138 888198 61000) 0 nil])
([nil nil ((61545 . 61546)) nil (26047 57138 888197 235000) 0 nil])
([nil nil ((61546 . 61547)) nil (26047 57138 888196 339000) 0 nil])
([nil nil ((61547 . 61548)) nil (26047 57138 888195 464000) 0 nil])
([nil nil ((61548 . 61549)) nil (26047 57138 888194 536000) 0 nil])
([nil nil ((61549 . 61550)) nil (26047 57138 888193 712000) 0 nil])
([nil nil ((61550 . 61551)) nil (26047 57138 888192 936000) 0 nil])
([nil nil ((61551 . 61552)) nil (26047 57138 888191 776000) 0 nil])
([nil nil ((61552 . 61553)) nil (26047 57138 888190 920000) 0 nil])
([nil nil ((61564 . 61565)) nil (26047 57138 888190 184000) 0 nil])
([nil nil ((61565 . 61566)) nil (26047 57138 888189 417000) 0 nil])
([nil nil ((61566 . 61567)) nil (26047 57138 888188 504000) 0 nil])
([nil nil ((61567 . 61568)) nil (26047 57138 888187 534000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)))) . 61564) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified t)) . 61564)) nil (26047 57138 888186 464000) 0 nil])
([nil nil ((#("-" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified t)) . 61560)) nil (26047 57138 888185 191000) 0 nil])
([nil nil ((61560 . 61561)) nil (26047 57138 888184 216000) 0 nil])
([nil nil ((61561 . 61562)) nil (26047 57138 888183 285000) 0 nil])
([nil nil ((61562 . 61563)) nil (26047 57138 888182 525000) 0 nil])
([nil nil ((61563 . 61564)) nil (26047 57138 888181 684000) 0 nil])
([nil nil ((61564 . 61565)) nil (26047 57138 888180 923000) 0 nil])
([nil nil ((61565 . 61566)) nil (26047 57138 888180 61000) 0 nil])
([nil nil ((61566 . 61567)) nil (26047 57138 888179 117000) 0 nil])
([nil nil ((61567 . 61568)) nil (26047 57138 888178 234000) 0 nil])
([nil nil ((61572 . 61574)) nil (26047 57138 888177 386000) 0 nil])
([nil nil ((61574 . 61575)) nil (26047 57138 888176 311000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                                                    " 0 7 (face org-indent) 7 52 (face org-indent)))) . 61575)) nil (26047 57138 888175 27000) 0 nil])
([nil nil ((61559 . 61561)) nil (26047 57138 888173 579000) 0 nil])
([nil nil ((61577 . 61578)) nil (26047 57138 888169 575000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 62264) (undo-tree-id1426 . -13) (undo-tree-id1427 . -13) (undo-tree-id1428 . -13) (t 26047 57138 909972 285000)) nil (26047 57225 164348 884000) 0 nil])
([nil nil ((#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -62267) (62263 . 62267) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -62247) (62243 . 62247) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -62234) (62230 . 62234) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -62218) (62214 . 62218) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -62196) (62192 . 62196) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -62179) (62175 . 62179) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -62261) (62258 . 62261) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -62242) (62239 . 62242) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -62230) (62227 . 62230) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -62215) (62212 . 62215) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -62194) (62191 . 62194) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -62178) (62175 . 62178) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -62255) (62253 . 62255) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -62237) (62235 . 62237) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -62226) (62224 . 62226) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -62212) (62210 . 62212) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -62192) (62190 . 62192) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -62177) (62175 . 62177) (62248 . 62249) (62231 . 62232) (62221 . 62222) (62208 . 62209) (62189 . 62190) (62175 . 62176)) nil (26047 57225 164324 242000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 62643) (undo-tree-id1423 . -13) (undo-tree-id1424 . -13) (undo-tree-id1425 . -13)) nil (26047 57225 164315 609000) 0 nil])
([nil nil ((62599 . 62600)) nil (26047 57225 164312 407000) 0 nil])
([nil nil ((62837 . 62838)) nil (26047 57225 164311 712000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 62878) (undo-tree-id1420 . -13) (undo-tree-id1421 . -13) (undo-tree-id1422 . -13)) nil (26047 57225 164310 398000) 0 nil])
([nil nil ((63002 . 63003)) nil (26047 57225 164302 371000) 0 nil])
([nil nil ((63003 . 63004)) nil (26047 57225 164301 482000) 0 nil])
([nil nil ((63004 . 63005)) nil (26047 57225 164300 641000) 0 nil])
([nil nil ((63005 . 63006)) nil (26047 57225 164299 801000) 0 nil])
([nil nil ((63006 . 63007)) nil (26047 57225 164298 998000) 0 nil])
([nil nil ((63015 . 63016)) nil (26047 57225 164298 287000) 0 nil])
([nil nil ((63016 . 63017)) nil (26047 57225 164297 531000) 0 nil])
([nil nil ((63017 . 63018)) nil (26047 57225 164296 655000) 0 nil])
([nil nil ((63018 . 63019)) nil (26047 57225 164295 650000) 0 nil])
([nil nil ((63026 . 63027)) nil (26047 57225 164294 616000) 0 nil])
([nil nil ((63027 . 63028)) nil (26047 57225 164608 611000) 0 nil])
([nil nil ((63036 . 63037)) nil (26047 57542 414346 323000) 0 nil] [nil nil ((63037 . 63038)) ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 63037) (undo-tree-id1429 . -1)) (26047 57225 164288 976000) 0 nil])
([nil nil ((63037 . 63038)) nil (26047 57542 414345 320000) 0 nil])
nil
([nil nil ((63043 . 63044)) nil (26047 57542 414344 481000) 0 nil])
([nil nil ((#("…	…	…	…	…	…	…" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 63162) (undo-tree-id1452 . -13) (undo-tree-id1453 . -13)) nil (26047 57542 414343 382000) 0 nil])
([nil nil ((#("…	…	…	…	…	…	…" 0 11 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 11 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -59473) (undo-tree-id1450 . -13) (undo-tree-id1451 . -13) 59486) nil (26047 57542 414341 187000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -64180) (undo-tree-id1448 . -13) (undo-tree-id1449 . -13) 64193) nil (26047 57542 414322 884000) 0 nil])
([nil nil ((#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -64197) (64192 . 64197) (#("        " 0 8 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                         " 0 7 (face org-indent) 7 25 (face org-indent)) fontified nil)) . -64144) (64135 . 64144) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -64100) (64095 . 64100) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -64084) (64079 . 64084) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -64193) (64189 . 64193) (#("       " 0 7 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                       " 0 7 (face org-indent) 7 23 (face org-indent)) fontified nil)) . -64141) (64133 . 64141) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -64098) (64094 . 64098) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -64083) (64079 . 64083) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -64189) (64186 . 64189) (#("      " 0 6 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                     " 0 7 (face org-indent) 7 21 (face org-indent)) fontified nil)) . -64138) (64131 . 64138) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -64096) (64093 . 64096) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -64082) (64079 . 64082) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -64185) (64183 . 64185) (#("     " 0 5 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                   " 0 7 (face org-indent) 7 19 (face org-indent)) fontified nil)) . -64135) (64129 . 64135) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -64094) (64092 . 64094) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -64081) (64079 . 64081) (64180 . 64181) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -64132) (64127 . 64132) (64091 . 64092) (64079 . 64080)) nil (26047 57542 414317 96000) 0 nil])
([nil nil ((65134 . 65135)) nil (26047 57542 414289 55000) 0 nil])
([nil nil ((65429 . 65430)) nil (26047 57542 414288 23000) 0 nil])
([nil nil ((65432 . 65433)) nil (26047 57542 414287 220000) 0 nil])
([nil nil ((65581 . 65582)) nil (26047 57542 414286 409000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 65957) (undo-tree-id1446 . -13) (undo-tree-id1447 . -13)) nil (26047 57542 414285 358000) 0 nil])
([nil nil ((65957 . 65958)) nil (26047 57542 414283 34000) 0 nil])
([nil nil ((#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65976) (65971 . 65976) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65955) (65950 . 65955) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65941) (65936 . 65941) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65917) (65912 . 65917) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65891) (65886 . 65891) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65866) (65861 . 65866) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65843) (65838 . 65843) (#("    " 0 4 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("                 " 0 7 (face org-indent) 7 17 (face org-indent)) fontified nil)) . -65825) (65820 . 65825) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65968) (65964 . 65968) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65948) (65944 . 65948) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65935) (65931 . 65935) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65912) (65908 . 65912) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65887) (65883 . 65887) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65863) (65859 . 65863) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65841) (65837 . 65841) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -65824) (65820 . 65824) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65960) (65957 . 65960) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65941) (65938 . 65941) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65929) (65926 . 65929) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65907) (65904 . 65907) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65883) (65880 . 65883) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65860) (65857 . 65860) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65839) (65836 . 65839) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -65823) (65820 . 65823) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65952) (65950 . 65952) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65934) (65932 . 65934) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65923) (65921 . 65923) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65902) (65900 . 65902) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65879) (65877 . 65879) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65857) (65855 . 65857) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65837) (65835 . 65837) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -65822) (65820 . 65822) (65943 . 65944) (65926 . 65927) (65916 . 65917) (65896 . 65897) (65874 . 65875) (65853 . 65854) (65834 . 65835) (65820 . 65821)) nil (26047 57542 414276 786000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 66138) (undo-tree-id1444 . -13) (undo-tree-id1445 . -13)) nil (26047 57542 414261 956000) 0 nil])
([nil nil ((66094 . 66095)) nil (26047 57542 414243 951000) 0 nil])
([nil nil ((66312 . 66313)) nil (26047 57542 414243 145000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 66353) (undo-tree-id1442 . -13) (undo-tree-id1443 . -13)) nil (26047 57542 414242 132000) 0 nil])
([nil nil ((#("…	…	…	…	…	…	…" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 66556) (undo-tree-id1439 . -13) (undo-tree-id1440 . -13) (undo-tree-id1441 . -13)) nil (26047 57542 414239 591000) 0 nil])
([nil nil ((66407 . 66408)) nil (26047 57542 414236 211000) 0 nil])
([nil nil ((66408 . 66409)) nil (26047 57542 414235 246000) 0 nil])
([nil nil ((66409 . 66410)) nil (26047 57542 414234 273000) 0 nil])
([nil nil ((66410 . 66411)) nil (26047 57542 414233 174000) 0 nil])
([nil nil ((66411 . 66412)) nil (26047 57542 414231 999000) 0 nil])
([nil nil ((66420 . 66421)) nil (26047 57542 414231 36000) 0 nil])
([nil nil ((66421 . 66422)) nil (26047 57542 414229 937000) 0 nil])
([nil nil ((66422 . 66423)) nil (26047 57542 414228 401000) 0 nil])
([nil nil ((66423 . 66424)) nil (26047 57542 414225 388000) 0 nil])
([nil nil ((66432 . 66433)) nil (26047 57542 414222 341000) 0 nil])
([nil nil ((66433 . 66434)) nil (26047 57542 414219 566000) 0 nil])
([nil nil ((66434 . 66435)) nil (26047 57542 414218 88000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 66434)) nil (26047 57542 414217 69000) 0 nil])
([nil nil ((66441 . 66442)) nil (26047 57542 414216 161000) 0 nil])
([nil nil ((66442 . 66443)) nil (26047 57542 414215 356000) 0 nil])
([nil nil ((66449 . 66450)) nil (26047 57542 414214 403000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 66948) (undo-tree-id1436 . -13) (undo-tree-id1437 . -13) (undo-tree-id1438 . -13)) nil (26047 57542 414213 133000) 0 nil])
([nil nil ((66895 . 66896)) nil (26047 57542 414210 52000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 67069) (undo-tree-id1433 . -13) (undo-tree-id1434 . -13) (undo-tree-id1435 . -13)) nil (26047 57542 414208 87000) 0 nil])
([nil nil ((#("
Nesse vídeo, deixamos a nossa imagem agora um pouco mais robusta, a partir de agora vamos entender como fazemos o deploy dessa imagem. Isto é, como a colocamos no Dock Hub. Até o próximo vídeo!
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 193 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 193 194 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t) 194 195 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 67924) (undo-tree-id1430 . -195) (undo-tree-id1431 . -195) (undo-tree-id1432 . -195)) nil (26047 57542 414197 894000) 0 nil])
([nil nil ((67924 . 67925) (t 26047 57542 441790 344000)) nil (26047 58338 871827 858000) 0 nil])
([nil nil ((67925 . 67941)) nil (26047 58338 871826 648000) 0 nil])
([nil nil ((67941 . 67962)) nil (26047 58338 871825 739000) 0 nil])
([nil nil ((67962 . 67977)) nil (26047 58338 871824 873000) 0 nil])
([nil nil ((67977 . 67978)) nil (26047 58338 871823 954000) 0 nil])
([nil nil ((nil rear-nonsticky nil 72980 . 72981) (nil fontified nil 72980 . 72981) (nil fontified nil 72884 . 72980) (nil fontified nil 72883 . 72884) (nil fontified nil 72693 . 72883) (nil fontified nil 72683 . 72693) (nil fontified nil 72637 . 72683) (nil fontified nil 72601 . 72637) (nil fontified nil 72580 . 72601) (nil fontified nil 72579 . 72580) (nil fontified nil 72475 . 72579) (nil fontified nil 72474 . 72475) (nil fontified nil 72319 . 72474) (nil fontified nil 72318 . 72319) (nil fontified nil 72204 . 72318) (nil fontified nil 72190 . 72204) (nil fontified nil 72153 . 72190) (nil fontified nil 72091 . 72153) (nil fontified nil 72090 . 72091) (nil fontified nil 71919 . 72090) (nil fontified nil 71918 . 71919) (nil fontified nil 71764 . 71918) (nil fontified nil 71742 . 71764) (nil fontified nil 71741 . 71742) (nil fontified nil 71486 . 71741) (nil fontified nil 71472 . 71486) (nil fontified nil 71435 . 71472) (nil fontified nil 71434 . 71435) (nil fontified nil 71286 . 71434) (nil fontified nil 71285 . 71286) (nil fontified nil 71145 . 71285) (nil fontified nil 71135 . 71145) (nil fontified nil 71077 . 71135) (nil fontified nil 71020 . 71077) (nil fontified nil 70983 . 71020) (nil fontified nil 70982 . 70983) (nil fontified nil 70774 . 70982) (nil fontified nil 70760 . 70774) (nil fontified nil 70698 . 70760) (nil fontified nil 70697 . 70698) (nil fontified nil 70521 . 70697) (nil fontified nil 70520 . 70521) (nil fontified nil 70369 . 70520) (nil fontified nil 70368 . 70369) (nil fontified nil 70108 . 70368) (nil fontified nil 70107 . 70108) (nil fontified nil 70020 . 70107) (nil fontified nil 70019 . 70020) (nil fontified nil 69968 . 70019) (nil fontified nil 69967 . 69968) (nil fontified nil 69865 . 69967) (nil fontified nil 69851 . 69865) (nil fontified nil 69813 . 69851) (nil fontified nil 69812 . 69813) (nil fontified nil 69622 . 69812) (nil fontified nil 69621 . 69622) (nil fontified nil 69512 . 69621) (nil fontified nil 69479 . 69512) (nil fontified nil 69478 . 69479) (nil fontified nil 69298 . 69478) (nil fontified nil 69297 . 69298) (nil fontified nil 69281 . 69297) (nil fontified nil 69280 . 69281) (nil fontified nil 69087 . 69280) (nil fontified nil 69073 . 69087) (nil fontified nil 69045 . 69073) (nil fontified nil 69044 . 69045) (nil fontified nil 68939 . 69044) (nil fontified nil 68938 . 68939) (nil fontified nil 68635 . 68938) (nil fontified nil 68600 . 68635) (nil fontified nil 68599 . 68600) (nil fontified nil 68484 . 68599) (nil fontified nil 68483 . 68484) (nil fontified nil 68341 . 68483) (nil fontified nil 68340 . 68341) (nil fontified nil 68104 . 68340) (nil fontified nil 68074 . 68104) (nil fontified nil 68073 . 68074) (nil fontified nil 67978 . 68073) (67978 . 72981)) nil (26047 58338 871819 916000) 0 nil])
([nil nil ((68074 . 68080)) nil (26047 58338 871803 356000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -68078) (undo-tree-id1474 . -1) (#(" " 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . -68079) (undo-tree-id1475 . -1) 68080) nil (26047 58338 871802 106000) 0 nil])
([nil nil ((68078 . 68079)) nil (26047 58338 871798 556000) 0 nil])
([nil nil ((68078 . 68079)) nil (26047 58338 871797 824000) 0 nil])
([nil nil ((nil rear-nonsticky nil 68610 . 68611) (nil fontified nil 68610 . 68611) (nil fontified nil 68609 . 68610) (nil fontified nil 68606 . 68609) (68606 . 68611)) nil (26047 58338 871796 600000) 0 nil])
([nil nil ((68611 . 68612)) nil (26047 58338 871794 627000) 0 nil])
([nil nil ((nil rear-nonsticky nil 69495 . 69496) (nil fontified nil 69495 . 69496) (nil fontified nil 69494 . 69495) (nil fontified nil 69491 . 69494) (69491 . 69496)) nil (26047 58338 871793 602000) 0 nil])
([nil nil ((69496 . 69497)) nil (26047 58338 871791 969000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 10 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 10 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -71490) (undo-tree-id1472 . -13) (undo-tree-id1473 . -13) 71503) nil (26047 58338 871790 937000) 0 nil])
([nil nil ((nil rear-nonsticky nil 71751 . 71752) (nil fontified nil 71751 . 71752) (nil fontified nil 71750 . 71751) (nil fontified nil 71747 . 71750) (71747 . 71752)) nil (26047 58338 871788 419000) 0 nil])
([nil nil ((71752 . 71753)) nil (26047 58338 871786 291000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -69085) (undo-tree-id1470 . -13) (undo-tree-id1471 . -13) 69098) nil (26047 58338 871785 135000) 0 nil])
([nil nil ((69057 . 69058)) nil (26047 58338 871782 591000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 69857) (undo-tree-id1468 . -13) (undo-tree-id1469 . -13)) nil (26047 58338 871781 478000) 0 nil])
([nil nil ((69819 . 69820)) nil (26047 58338 871779 407000) 0 nil])
([nil nil ((70692 . 70693)) nil (26047 58338 871778 556000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 70755) (undo-tree-id1466 . -13) (undo-tree-id1467 . -13)) nil (26047 58338 871777 405000) 0 nil])
([nil nil ((71126 . 71127)) nil (26047 58338 871775 216000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 70692) (#("	" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("              " 0 9 (face org-indent) 9 14 (face org-indent)))) . 70692)) nil (26047 58338 871774 259000) 0 nil])
([nil nil ((70692 . 70693)) nil (26047 58338 871773 247000) 0 nil])
([nil nil ((70693 . 70694)) nil (26047 58338 871772 441000) 0 nil])
([nil nil ((71418 . 71419)) nil (26047 58338 871771 575000) 0 nil])
([nil nil ((#("Agora, vamos limpar o terminal com \"Ctrl + L\" e executar docker image novamente." 0 80 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -71741) (undo-tree-id1464 . -80) (undo-tree-id1465 . -80) 71821) nil (26047 58338 871770 90000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("           " 0 9 (face org-indent) 9 11 (face org-indent)) fontified t)) . 71741)) nil (26047 58338 871767 461000) 0 nil])
([nil nil ((71741 . 71747)) nil (26047 58338 871766 555000) 0 nil])
([nil nil ((#("N" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 71747)) nil (26047 58338 871765 729000) 0 nil])
([nil nil ((71747 . 71748)) nil (26047 58338 871764 777000) 0 nil])
([nil nil ((#("m" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 71760)) nil (26047 58338 871763 937000) 0 nil])
([nil nil ((71760 . 71761)) nil (26047 58338 871763 7000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 71762)) nil (26047 58338 871762 93000) 0 nil])
([nil nil ((#("Tendo nos certificado que temos a danielartini/app-node também na versão 1.2." 0 7 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 7 77 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 71741) (undo-tree-id1462 . -77) (undo-tree-id1463 . -77)) nil (26047 58338 871760 936000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 71741) (#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 71741)) nil (26047 58338 871758 158000) 0 nil])
([nil nil ((71913 . 71914)) nil (26047 58338 871757 131000) 0 nil])
([nil nil ((71976 . 71977)) nil (26047 58338 871756 201000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 72014) (undo-tree-id1459 . -13) (undo-tree-id1460 . -13) (undo-tree-id1461 . -13)) nil (26047 58338 871754 860000) 0 nil])
([nil nil ((72398 . 72399)) nil (26047 58338 871752 154000) 0 nil])
([nil nil ((72406 . 72407)) nil (26047 58338 871751 352000) 0 nil])
([nil nil ((72407 . 72408)) nil (26047 58338 871750 396000) 0 nil])
([nil nil ((72438 . 72439)) nil (26047 58338 871749 302000) 0 nil])
([nil nil ((72407 . 72408)) nil (26047 58338 871748 326000) 0 nil])
([nil nil ((72499 . 72500)) nil (26047 58338 871747 285000) 0 nil])
([nil nil ((#("Conclusão
Aprendemos a fazer o push das nossas imagens, gerando novas tags localmente e descobrimos que o Docker Hub é capaz de reutilizar as camadas já existentes também em nosso repositório remoto.

Na próxima parte, vamos deixar de lado a criação de imagens e iniciar um novo tópico. Até mais!
" 0 10 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 10 200 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 200 201 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 201 297 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -72500) (undo-tree-id1457 . -297) (undo-tree-id1458 . -297) 72797) nil (26047 58338 871746 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 72500) (#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t rear-nonsticky t)) . 72500)) nil (26047 58338 871743 349000) 0 nil])
([nil nil ((#("Push da nossa imagem para o servidor Docker Hub" 0 47 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t face org-level-4)) . -67930) (undo-tree-id1454 . -47) (undo-tree-id1455 . -11) (undo-tree-id1456 . -47) 67977) nil (26047 58338 871741 655000) 0 nil])
([nil nil ((nil rear-nonsticky nil 67963 . 67964) (nil fontified nil 67930 . 67964) (67930 . 67964)) nil (26047 58338 871731 565000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 68060)) nil (26047 58338 871726 797000) 0 nil])
([nil nil ((72573 . 72574) (t 26047 58338 893211 327000)) nil (26047 58395 137494 678000) 0 nil])
([nil nil ((72574 . 72585)) nil (26047 58395 137493 562000) 0 nil])
([nil nil ((#("ú" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72582) (undo-tree-id1482 . -1) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72583) (undo-tree-id1483 . -1) (#("h" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72584) (undo-tree-id1484 . -1) 72585) nil (26047 58395 137492 97000) 0 nil])
([nil nil ((72582 . 72589)) nil (26047 58395 137488 377000) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72584) (undo-tree-id1477 . -1) (#("," 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72585) (undo-tree-id1478 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72586) (undo-tree-id1479 . -1) (#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72587) (undo-tree-id1480 . -1) (#("p" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72588) (undo-tree-id1481 . -1) 72589) nil (26047 58395 137486 611000) 0 nil])
([nil nil ((72584 . 72597)) nil (26047 58395 137480 744000) 0 nil])
([nil nil ((#("h" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72596) (undo-tree-id1476 . -1) 72597) nil (26047 58395 137478 958000) 0 nil])
([nil nil ((72596 . 72597)) nil (26047 58395 137468 404000) 0 nil])
([nil nil ((72597 . 72598) (t 26047 58395 164598 247000)) nil (26047 58968 432088 219000) 0 nil])
([nil nil ((72598 . 72618)) nil (26047 58968 432087 367000) 0 nil])
([nil nil ((72618 . 72619)) nil (26047 58968 432086 668000) 0 nil])
([nil nil ((72619 . 72631)) nil (26047 58968 432085 920000) 0 nil])
([nil nil ((#("b" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72629) (undo-tree-id1497 . -1) (#("l" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72630) (undo-tree-id1498 . -1) 72631) nil (26047 58968 432084 912000) 0 nil])
([nil nil ((72629 . 72633)) nil (26047 58968 432082 723000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72631) (undo-tree-id1495 . -1) (#("m" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72632) (undo-tree-id1496 . -1) 72633) nil (26047 58968 432081 722000) 0 nil])
([nil nil ((72631 . 72638)) nil (26047 58968 432078 297000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72637) (undo-tree-id1494 . -1) 72638) nil (26047 58968 432077 401000) 0 nil])
([nil nil ((72637 . 72647)) nil (26047 58968 432075 845000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72644) (undo-tree-id1491 . -1) (#("i" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72645) (undo-tree-id1492 . -1) (#("r" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72646) (undo-tree-id1493 . -1) 72647) nil (26047 58968 432074 683000) 0 nil])
([nil nil ((72644 . 72645)) nil (26047 58968 432071 837000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72644) (undo-tree-id1490 . -1) 72645) nil (26047 58968 432070 974000) 0 nil])
([nil nil ((72644 . 72651)) nil (26047 58968 432069 517000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -72650) (undo-tree-id1489 . -1) 72651) nil (26047 58968 432068 671000) 0 nil])
([nil nil ((72650 . 72652)) nil (26047 58968 432067 117000) 0 nil])
([nil nil ((72652 . 72653)) nil (26047 58968 432066 313000) 0 nil])
([nil nil ((nil rear-nonsticky nil 79691 . 79692) (nil fontified nil 79673 . 79692) (nil fontified nil 79672 . 79673) (nil fontified nil 79496 . 79672) (nil fontified nil 79495 . 79496) (nil fontified nil 79396 . 79495) (nil fontified nil 79395 . 79396) (nil fontified nil 79285 . 79395) (nil fontified nil 79284 . 79285) (nil fontified nil 79023 . 79284) (nil fontified nil 79022 . 79023) (nil fontified nil 78981 . 79022) (nil fontified nil 78936 . 78981) (nil fontified nil 78935 . 78936) (nil fontified nil 78756 . 78935) (nil fontified nil 78755 . 78756) (nil fontified nil 78555 . 78755) (nil fontified nil 78445 . 78555) (nil fontified nil 78351 . 78445) (nil fontified nil 78292 . 78351) (nil fontified nil 78291 . 78292) (nil fontified nil 78111 . 78291) (nil fontified nil 78110 . 78111) (nil fontified nil 77875 . 78110) (nil fontified nil 77861 . 77875) (nil fontified nil 77834 . 77861) (nil fontified nil 77833 . 77834) (nil fontified nil 77694 . 77833) (nil fontified nil 77672 . 77694) (nil fontified nil 77671 . 77672) (nil fontified nil 77516 . 77671) (nil fontified nil 77515 . 77516) (nil fontified nil 77223 . 77515) (nil fontified nil 77222 . 77223) (nil fontified nil 76930 . 77222) (nil fontified nil 76929 . 76930) (nil fontified nil 76733 . 76929) (nil fontified nil 76732 . 76733) (nil fontified nil 76545 . 76732) (nil fontified nil 76544 . 76545) (nil fontified nil 76317 . 76544) (nil fontified nil 76316 . 76317) (nil fontified nil 76173 . 76316) (nil fontified nil 76172 . 76173) (nil fontified nil 75929 . 76172) (nil fontified nil 75928 . 75929) (nil fontified nil 75697 . 75928) (nil fontified nil 75696 . 75697) (nil fontified nil 75598 . 75696) (nil fontified nil 75584 . 75598) (nil fontified nil 75562 . 75584) (nil fontified nil 75561 . 75562) (nil fontified nil 75282 . 75561) (nil fontified nil 75281 . 75282) (nil fontified nil 75259 . 75281) (nil fontified nil 75165 . 75259) (nil fontified nil 75106 . 75165) (nil fontified nil 75105 . 75106) (nil fontified nil 75097 . 75105) (nil fontified nil 75096 . 75097) (nil fontified nil 74780 . 75096) (nil fontified nil 74779 . 74780) (nil fontified nil 74531 . 74779) (nil fontified nil 74530 . 74531) (nil fontified nil 74446 . 74530) (nil fontified nil 74432 . 74446) (nil fontified nil 74405 . 74432) (nil fontified nil 74404 . 74405) (nil fontified nil 74150 . 74404) (nil fontified nil 74129 . 74150) (nil fontified nil 74128 . 74129) (nil fontified nil 74052 . 74128) (nil fontified nil 74051 . 74052) (nil fontified nil 73926 . 74051) (nil fontified nil 73912 . 73926) (nil fontified nil 73870 . 73912) (nil fontified nil 73869 . 73870) (nil fontified nil 73610 . 73869) (nil fontified nil 73596 . 73610) (nil fontified nil 73562 . 73596) (nil fontified nil 73561 . 73562) (nil fontified nil 73358 . 73561) (nil fontified nil 73357 . 73358) (nil fontified nil 73127 . 73357) (nil fontified nil 73113 . 73127) (nil fontified nil 73066 . 73113) (nil fontified nil 73065 . 73066) (nil fontified nil 72931 . 73065) (nil fontified nil 72930 . 72931) (nil fontified nil 72764 . 72930) (nil fontified nil 72756 . 72764) (nil fontified nil 72755 . 72756) (nil fontified nil 72653 . 72755) (72653 . 79692)) nil (26047 58968 432061 794000) 0 nil])
([nil nil ((#("Antes de prosseguir em nosso fluxo original, vamos revisar os comandos importantes que já aprendemos.

Revisão
Quando digitamos docker ps, notamos que não temos nenhum container em execução. Ao usarmos docker ps -a, temos vários containers " 0 102 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 102 103 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 103 111 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 111 240 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72653) (undo-tree-id1487 . -240) (undo-tree-id1488 . -240) 72893) nil (26047 58968 432046 388000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)) fontified t)) . 72653) (#("." 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("d" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("p" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)) fontified t)) . 72653) (#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("ã" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)) fontified t)) . 72653) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("u" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653) (#("q" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 72653)) nil (26047 58968 432041 726000) 0 nil])
([nil nil ((#("Vamos removê-los.

Para isso, limpamos o terminal e digitamos docker container rm, usando como entrada a saída do nosso comando docker container ls -aq.

docker container rm $(docker container ls -aq)
" 0 18 (fontified t) 18 19 (fontified t) 19 153 (fontified t) 153 154 (fontified t) 154 201 (fontified t)) . 72653) (undo-tree-id1485 . -201) (undo-tree-id1486 . -201) 72854) nil (26047 58968 432412 633000) 0 nil])
([nil nil ((#("C" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 34104)) nil (26047 59092 399661 148000) 0 nil] [nil nil ((nil rear-nonsticky nil 33884 . 33885) (nil fontified nil 33838 . 33885) (nil fontified nil 33837 . 33838) (nil fontified nil 33703 . 33837) (nil fontified nil 33702 . 33703) (nil fontified nil 33684 . 33702) (33684 . 33885)) ((#("Vamos removê-los.

Para isso, limpamos o terminal e digitamos docker container rm, usando como entrada a saída do nosso comando docker container ls -aq.

docker container rm $(docker container ls -aq)
" 0 18 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 18 19 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 19 153 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 153 154 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 154 200 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 200 201 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil rear-nonsticky nil)) . 33684) (undo-tree-id1499 . -201) (nil fontified t 33684 . 33702) (nil fontified t 33702 . 33703) (nil fontified t 33703 . 33837) (nil fontified t 33837 . 33838) (nil rear-nonsticky t 33884 . 33885)) (26047 58968 432025 56000) 0 nil])
([nil nil ((#("OPIAR CÓDIGO" 0 12 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -34104) (undo-tree-id1513 . -12) (undo-tree-id1514 . -12) 34116) nil (26047 59092 399660 259000) 0 nil])
nil
([nil nil ((34131 . 34132)) nil (26047 59092 399658 144000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 34166) (undo-tree-id1511 . -13) (undo-tree-id1512 . -13)) nil (26047 59092 399657 283000) 0 nil])
([nil nil ((#("   " 0 3 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("             " 0 5 (face org-indent) 5 13 (face org-indent)) fontified nil)) . -34102) (34098 . 34102) (#("   " 0 3 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("             " 0 5 (face org-indent) 5 13 (face org-indent)) fontified nil)) . -34082) (34078 . 34082) (#("  " 0 2 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("           " 0 5 (face org-indent) 5 11 (face org-indent)) fontified nil)) . -34100) (34097 . 34100) (#("  " 0 2 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("           " 0 5 (face org-indent) 5 11 (face org-indent)) fontified nil)) . -34081) (34078 . 34081) (#("   " 0 3 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("           " 0 5 (face org-indent) 5 11 (face org-indent)) fontified nil)) . -34098) (34096 . 34098) (#("   " 0 3 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("           " 0 5 (face org-indent) 5 11 (face org-indent)) fontified nil)) . -34080) (34078 . 34080) (#("  " 0 2 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("           " 0 5 (face org-indent) 5 11 (face org-indent)) fontified nil)) . -34100) (34097 . 34100) (#("  " 0 2 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("           " 0 5 (face org-indent) 5 11 (face org-indent)) fontified nil)) . -34081) (34078 . 34081) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("         " 0 5 (face org-indent) 5 9 (face org-indent)) fontified nil)) . -34098) (34096 . 34098) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("         " 0 5 (face org-indent) 5 9 (face org-indent)) fontified nil)) . -34080) (34078 . 34080) (34095 . 34096) (34078 . 34079)) nil (26047 59092 399653 567000) 0 nil])
([nil nil ((34139 . 34140)) nil (26047 59092 399649 824000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("              " 0 5 (face org-indent) 5 14 (face org-indent)))) . 34140)) nil (26047 59092 399649 85000) 0 nil])
([nil nil ((34140 . 34142)) nil (26047 59092 399648 441000) 0 nil])
([nil nil ((35839 . 35840)) nil (26047 59092 399647 816000) 0 nil])
([nil nil ((35840 . 35857)) nil (26047 59092 399647 153000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35855) (undo-tree-id1509 . -1) (#("o" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35856) (undo-tree-id1510 . -1) 35857) nil (26047 59092 399646 90000) 0 nil])
([nil nil ((35855 . 35876)) nil (26047 59092 399643 831000) 0 nil])
([nil nil ((35876 . 35879)) nil (26047 59092 399642 722000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35878) (undo-tree-id1508 . -1) 35879) nil (26047 59092 399641 713000) 0 nil])
([nil nil ((35878 . 35882)) nil (26047 59092 399640 222000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35881) (undo-tree-id1507 . -1) 35882) nil (26047 59092 399639 373000) 0 nil])
([nil nil ((35881 . 35886)) nil (26047 59092 399637 938000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35882) (undo-tree-id1503 . -1) (#("n" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35883) (undo-tree-id1504 . -1) (#("m" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35884) (undo-tree-id1505 . -1) (#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -35885) (undo-tree-id1506 . -1) 35886) nil (26047 59092 399636 530000) 0 nil])
([nil nil ((35882 . 35888)) nil (26047 59092 399632 616000) 0 nil])
([nil nil ((35888 . 35901)) nil (26047 59092 399631 936000) 0 nil])
([nil nil ((35901 . 35902)) nil (26047 59092 399631 70000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36102 . 36103) (nil fontified nil 36056 . 36103) (nil fontified nil 36055 . 36056) (nil fontified nil 35921 . 36055) (nil fontified nil 35920 . 35921) (nil fontified nil 35902 . 35920) (35902 . 36103)) nil (26047 59092 399629 991000) 0 nil])
([nil nil ((#("Vamos removê-los.

Para isso, limpamos o terminal e " 0 18 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 18 19 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 19 52 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -35902) (undo-tree-id1501 . -52) (undo-tree-id1502 . -52) 35954) nil (26047 59092 399628 49000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 35902)) nil (26047 59092 399625 404000) 0 nil])
([nil nil ((35902 . 35903)) nil (26047 59092 399624 536000) 0 nil])
([nil nil ((#("." 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -36001) (undo-tree-id1500 . -1) 36002) nil (26047 59092 399623 193000) 0 nil])
([nil nil ((36001 . 36002)) nil (26047 59092 399615 596000) 0 nil])
([nil nil ((36004 . 36005)) nil (26047 59092 399611 712000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -72851) (undo-tree-id1531 . -13) (undo-tree-id1532 . -13) 72864 (t 26047 59092 424249 420000)) nil (26047 59269 381600 337000) 0 nil])
([nil nil ((#("
Por que o -aq? Queremos pegar apenas os IDs com o q, e o -a serve para pegar todos os nossos containers, inclusive os que estão parados. Se pressionarmos \"Enter\", os containers serão removidos, sendo exibidos seus IDs no retorno.
" 0 1 (fontified t) 1 27 (fontified t) 27 231 (fontified t)) . 72851) (undo-tree-id1529 . -231) (undo-tree-id1530 . -231) 73082) nil (26047 59269 381597 758000) 0 nil])
([nil nil ((36052 . 36053)) nil (26047 59269 381595 696000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36283 . 36284) (nil fontified nil 36080 . 36284) (nil fontified nil 36054 . 36080) (nil fontified nil 36053 . 36054) (36053 . 36284)) nil (26047 59269 381594 749000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 36053)) nil (26047 59269 381593 385000) 0 nil])
([nil nil ((73083 . 73084)) nil (26047 59269 381592 740000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)) fontified t)) . -73083) (undo-tree-id1528 . -1) 73084) nil (26047 59269 381591 893000) 0 nil])
([nil nil ((#("Caso tenhamos imagens ainda, vamos removê-las também. Para verificar, executamos o comando docker images. Temos algumas imagens, então vamos fazer algo parecido: usar docker rmi com docker images ls -aq

docker rmi $(docker image ls -aq)
COPIAR CÓDIGO
E ele remove todas as imagens. Repare que ele apresentou alguns conflitos no retorno, porque a imagem em questão está sendo referenciada por múltiplos repositórios, então precisamos forçar essa remoção. Para isso, vamos digitar docker rmi passando o --force:

docker rmi $(docker image ls -aq) --force
COPIAR CÓDIGO
Agora, ele vai conseguir remover essas imagens também. Lembre-se disso: caso não consiga remover, a flag --force vai ajudar.

Se executarmos docker images agora, o que teremos? Nada, tudo foi removido!
" 0 203 (fontified t) 203 204 (fontified t) 204 238 (fontified t) 238 252 (fontified t) 252 499 (fontified t) 499 511 (fontified t) 511 512 (fontified t) 512 554 (fontified t) 554 568 (fontified t) 568 693 (fontified t) 693 694 (fontified t) 694 770 (fontified t)) . 73083) (undo-tree-id1525 . -770) (undo-tree-id1526 . -129) (undo-tree-id1527 . -770) 73853) nil (26047 59269 381590 66000) 0 nil])
([nil nil ((36283 . 36284)) nil (26047 59269 381587 334000) 0 nil])
([nil nil ((36284 . 36305)) nil (26047 59269 381586 652000) 0 nil])
([nil nil ((36305 . 36326)) nil (26047 59269 381585 839000) 0 nil])
([nil nil ((36326 . 36338)) nil (26047 59269 381585 162000) 0 nil])
([nil nil ((36338 . 36345)) nil (26047 59269 381584 512000) 0 nil])
([nil nil ((36345 . 36346)) nil (26047 59269 381583 807000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37115 . 37116) (nil fontified nil 37040 . 37116) (nil fontified nil 37039 . 37040) (nil fontified nil 36914 . 37039) (nil fontified nil 36900 . 36914) (nil fontified nil 36858 . 36900) (nil fontified nil 36857 . 36858) (nil fontified nil 36845 . 36857) (nil fontified nil 36598 . 36845) (nil fontified nil 36584 . 36598) (nil fontified nil 36550 . 36584) (nil fontified nil 36549 . 36550) (nil fontified nil 36346 . 36549) (36346 . 37116)) nil (26047 59269 381582 560000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide)) . 36284)) nil (26047 59269 381579 674000) 0 nil])
([nil nil ((#("*** removendo todas as imagens de uma vez, num único comando
Caso tenhamos imagens ainda, vamos removê-las também. Para verificar, executamos o comando docker images. Temos algumas imagens, então vamos fazer algo parecido: usar docker rmi com docker images ls -aq

docker rmi $(docker image ls -aq)
COPIAR CÓDIGO
E ele remove todas as imagens. Repare que ele apresentou alguns conflitos no retorno, porque a imagem em questão está sendo referenciada por múltiplos repositórios, então precisamos forçar essa remoção. Para isso, vamos digitar docker rmi passando o --force:

docker rmi $(docker image ls -aq) --force
COPIAR CÓDIGO
Agora, ele vai conseguir remover essas imagens também. Lembre-se disso: caso não consiga remover, a flag --force vai ajudar.

Se executarmos docker images agora, o que teremos? Nada, tudo foi removido!

" 0 2 (fontified t face org-hide) 2 4 (fontified t face org-level-3) 4 60 (fontified t face org-level-3) 60 61 (fontified t) 61 264 (fontified t) 264 265 (fontified t) 265 299 (fontified t) 299 313 (fontified t) 313 560 (fontified t) 560 561 (fontified t) 561 572 (fontified t) 572 573 (fontified t) 573 615 (fontified t) 615 629 (fontified t) 629 754 (fontified t) 754 755 (fontified t) 755 830 (fontified t) 830 831 (fontified t rear-nonsticky t) 831 832 (fontified t)) . 36284) (undo-tree-id1521 . -832) (undo-tree-id1522 . -61) (undo-tree-id1523 . -832) (undo-tree-id1524 . -832) 37116) nil (26047 59269 381578 602000) 0 nil])
([nil nil ((72914 . 72915)) nil (26047 59269 381574 975000) 0 nil])
([nil nil ((nil rear-nonsticky nil 73746 . 73747) (nil fontified nil 73746 . 73747) (nil fontified nil 73745 . 73746) (nil fontified nil 73670 . 73745) (nil fontified nil 73669 . 73670) (nil fontified nil 73544 . 73669) (nil fontified nil 73530 . 73544) (nil fontified nil 73488 . 73530) (nil fontified nil 73487 . 73488) (nil fontified nil 73476 . 73487) (nil fontified nil 73475 . 73476) (nil fontified nil 73228 . 73475) (nil fontified nil 73214 . 73228) (nil fontified nil 73180 . 73214) (nil fontified nil 73179 . 73180) (nil fontified nil 72976 . 73179) (nil fontified nil 72975 . 72976) (nil fontified nil 72919 . 72975) (nil fontified nil 72917 . 72919) (nil fontified nil 72915 . 72917) (72915 . 73747)) nil (26047 59269 381573 460000) 0 nil])
([nil nil ((72915 . 72916)) nil (26047 59269 381569 540000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -73215) (undo-tree-id1519 . -13) (undo-tree-id1520 . -13) 73228) nil (26047 59269 381568 464000) 0 nil])
([nil nil ((73181 . 73182)) nil (26047 59269 381566 131000) 0 nil])
([nil nil ((73477 . 73478)) nil (26047 59269 381565 258000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 73520) (undo-tree-id1516 . -13) (undo-tree-id1517 . -13) (undo-tree-id1518 . -13)) nil (26047 59269 381563 699000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 73723) (undo-tree-id1515 . -1) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . 73723)) nil (26047 59269 381556 295000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 73890) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 73890) (undo-tree-id1542 . -1) (t 26047 59269 406001 332000)) nil (26047 59395 122978 146000) 0 nil])
([nil nil ((73890 . 73895)) nil (26047 59395 122976 603000) 0 nil])
([nil nil ((nil rear-nonsticky nil 77442 . 77443) (nil fontified nil 77441 . 77443) (nil fontified nil 77438 . 77441) (77438 . 77443)) nil (26047 59395 122975 738000) 0 nil])
([nil nil ((77438 . 77439)) nil (26047 59395 122974 568000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . -77438) (undo-tree-id1541 . -1) 77439) nil (26047 59395 122973 480000) 0 nil])
([nil nil ((nil rear-nonsticky nil 78711 . 78712) (nil fontified nil 78710 . 78712) (nil fontified nil 78707 . 78710) (78707 . 78712)) nil (26047 59395 122971 915000) 0 nil])
([nil nil ((74171 . 74172)) nil (26047 59395 122970 658000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 74199) (undo-tree-id1538 . -13) (undo-tree-id1539 . -13) (undo-tree-id1540 . -13)) nil (26047 59395 122969 735000) 0 nil])
([nil nil ((#("Pressionamos \"Enter\" no retorno para ele baixar a imagem rapidamente, mais uma vez.
" 0 84 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -74200) (undo-tree-id1536 . -84) (undo-tree-id1537 . -84) 74284) nil (26047 59395 122965 159000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 74200)) nil (26047 59395 122962 855000) 0 nil])
([nil nil ((#("Com nosso container quase em execução, enquanto ele termina de extrair, vamos abrir outro terminal e executar docker ps. Ele mostrará as informações desse container no retorno: seu ID, a imagem, comando, momento de criação, status, portas e nomes.
" 0 248 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -74200) (undo-tree-id1534 . -248) (undo-tree-id1535 . -248) 74448) nil (26047 59395 122961 904000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 74200)) nil (26047 59395 122959 495000) 0 nil])
([nil nil ((74561 . 74562)) nil (26047 59395 122958 869000) 0 nil])
([nil nil ((74562 . 74563)) nil (26047 59395 122958 178000) 0 nil])
([nil nil ((74570 . 74571)) nil (26047 59395 122957 477000) 0 nil])
([nil nil ((74571 . 74572)) nil (26047 59395 122956 858000) 0 nil])
([nil nil ((74647 . 74648)) nil (26047 59395 122956 87000) 0 nil])
([nil nil ((74582 . 74583)) nil (26047 59395 122955 275000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -74582) (undo-tree-id1533 . -1) 74583) nil (26047 59395 122953 815000) 0 nil])
([nil nil ((74583 . 74584)) nil (26047 59395 122945 920000) 0 nil])
([nil nil ((74584 . 74585)) nil (26047 59395 122941 789000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 12 (fontified t) 12 13 (fontified t)) . 75011) (undo-tree-id1550 . -13) (undo-tree-id1551 . -13) (t 26047 59395 148950 312000)) nil (26047 59833 411774 245000) 0 nil])
([nil nil ((74989 . 74990)) nil (26047 59833 411772 135000) 0 nil])
([nil nil ((76956 . 76957)) nil (26047 59833 411771 526000) 0 nil])
([nil nil ((76968 . 76969)) nil (26047 59833 411770 895000) 0 nil])
([nil nil ((#("\"" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -76968) (undo-tree-id1549 . -1) 76969) nil (26047 59833 411770 52000) 0 nil])
([nil nil ((76969 . 76970)) nil (26047 59833 411768 656000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 77283) (undo-tree-id1546 . -13) (undo-tree-id1547 . -13) (undo-tree-id1548 . -13)) nil (26047 59833 411767 791000) 0 nil])
([nil nil ((77256 . 77257)) nil (26047 59833 411764 752000) 0 nil])
([nil nil ((77736 . 77737)) nil (26047 59833 411764 92000) 0 nil])
([nil nil ((77737 . 77738)) nil (26047 59833 411763 462000) 0 nil])
([nil nil ((77746 . 77747)) nil (26047 59833 411762 729000) 0 nil])
([nil nil ((77747 . 77748)) nil (26047 59833 411762 115000) 0 nil])
([nil nil ((77747 . 77748)) nil (26047 59833 411761 480000) 0 nil])
([nil nil ((77822 . 77823)) nil (26047 59833 411760 825000) 0 nil])
([nil nil ((77749 . 77750)) nil (26047 59833 411760 206000) 0 nil])
([nil nil ((77750 . 77751)) nil (26047 59833 411759 566000) 0 nil])
([nil nil ((77824 . 77825)) nil (26047 59833 411758 853000) 0 nil])
([nil nil ((77825 . 77826)) nil (26047 59833 411758 76000) 0 nil])
([nil nil ((77828 . 77829)) nil (26047 59833 411757 417000) 0 nil])
([nil nil ((77936 . 77937)) nil (26047 59833 411756 683000) 0 nil])
([nil nil ((77763 . 77764)) nil (26047 59833 411756 59000) 0 nil])
([nil nil ((77764 . 77765)) nil (26047 59833 411755 422000) 0 nil])
([nil nil ((78467 . 78468)) nil (26047 59833 411754 677000) 0 nil])
([nil nil ((78478 . 78479)) nil (26047 59833 411754 29000) 0 nil])
([nil nil ((78724 . 78725)) nil (26047 59833 411753 415000) 0 nil])
([nil nil ((78731 . 78732)) nil (26047 59833 411752 668000) 0 nil])
([nil nil ((78846 . 78847)) nil (26047 59833 411752 18000) 0 nil])
([nil nil ((78852 . 78853)) nil (26047 59833 411751 342000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -78852) (undo-tree-id1545 . -1) 78853) nil (26047 59833 411750 347000) 0 nil])
([nil nil ((78858 . 78859)) nil (26047 59833 411748 657000) 0 nil])
([nil nil ((#("
Agora que já entendemos o problema que precisamos enfrentar e como resolveremos com essas três possíveis soluções, vamos seguir para o próximo passo, no próximo vídeo. Até lá!

 DISCUTIR NO FÓRUM
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 177 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 177 178 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 178 196 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t) 196 197 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t rear-nonsticky t)) . -78930) (undo-tree-id1543 . -197) (undo-tree-id1544 . -197) 79127) nil (26047 59833 411747 51000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 78930)) nil (26047 59833 411735 731000) 0 nil])
([nil nil ((78929 . 78930) (t 26047 59833 438581 64000)) nil (26047 61044 935453 471000) 0 nil])
([nil nil ((78930 . 78935)) nil (26047 61044 935452 603000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -78934) (undo-tree-id1575 . -1) 78935) nil (26047 61044 935451 765000) 0 nil])
([nil nil ((nil rear-nonsticky nil 78955 . 78956) (nil fontified nil 78934 . 78956) (78934 . 78956)) nil (26047 61044 935450 161000) 0 nil])
([nil nil ((78956 . 78957)) nil (26047 61044 935449 211000) 0 nil])
([nil nil ((nil rear-nonsticky nil 84938 . 84939) (nil fontified nil 84893 . 84939) (nil fontified nil 84892 . 84893) (nil fontified nil 84745 . 84892) (nil fontified nil 84744 . 84745) (nil fontified nil 84487 . 84744) (nil fontified nil 84486 . 84487) (nil fontified nil 84372 . 84486) (nil fontified nil 84371 . 84372) (nil fontified nil 84184 . 84371) (nil fontified nil 84183 . 84184) (nil fontified nil 84015 . 84183) (nil fontified nil 84014 . 84015) (nil fontified nil 83847 . 84014) (nil fontified nil 83846 . 83847) (nil fontified nil 83626 . 83846) (nil fontified nil 83625 . 83626) (nil fontified nil 83390 . 83625) (nil fontified nil 83389 . 83390) (nil fontified nil 83122 . 83389) (nil fontified nil 83108 . 83122) (nil fontified nil 83017 . 83108) (nil fontified nil 83016 . 83017) (nil fontified nil 82882 . 83016) (nil fontified nil 82881 . 82882) (nil fontified nil 82691 . 82881) (nil fontified nil 82655 . 82691) (nil fontified nil 82654 . 82655) (nil fontified nil 82564 . 82654) (nil fontified nil 82563 . 82564) (nil fontified nil 82417 . 82563) (nil fontified nil 82416 . 82417) (nil fontified nil 82158 . 82416) (nil fontified nil 82157 . 82158) (nil fontified nil 81885 . 82157) (nil fontified nil 81871 . 81885) (nil fontified nil 81809 . 81871) (nil fontified nil 81808 . 81809) (nil fontified nil 81526 . 81808) (nil fontified nil 81525 . 81526) (nil fontified nil 81435 . 81525) (nil fontified nil 81434 . 81435) (nil fontified nil 81295 . 81434) (nil fontified nil 81294 . 81295) (nil fontified nil 81158 . 81294) (nil fontified nil 81144 . 81158) (nil fontified nil 81117 . 81144) (nil fontified nil 81116 . 81117) (nil fontified nil 80955 . 81116) (nil fontified nil 80941 . 80955) (nil fontified nil 80933 . 80941) (nil fontified nil 80932 . 80933) (nil fontified nil 80728 . 80932) (nil fontified nil 80727 . 80728) (nil fontified nil 80543 . 80727) (nil fontified nil 80529 . 80543) (nil fontified nil 80467 . 80529) (nil fontified nil 80466 . 80467) (nil fontified nil 80238 . 80466) (nil fontified nil 80224 . 80238) (nil fontified nil 80204 . 80224) (nil fontified nil 80203 . 80204) (nil fontified nil 80067 . 80203) (nil fontified nil 80066 . 80067) (nil fontified nil 79930 . 80066) (nil fontified nil 79916 . 79930) (nil fontified nil 79891 . 79916) (nil fontified nil 79890 . 79891) (nil fontified nil 79800 . 79890) (nil fontified nil 79799 . 79800) (nil fontified nil 79567 . 79799) (nil fontified nil 79566 . 79567) (nil fontified nil 79481 . 79566) (nil fontified nil 79450 . 79481) (nil fontified nil 79436 . 79450) (nil fontified nil 79391 . 79436) (nil fontified nil 79390 . 79391) (nil fontified nil 79229 . 79390) (nil fontified nil 79228 . 79229) (nil fontified nil 78957 . 79228) (78957 . 84939)) nil (26047 61044 935445 346000) 0 nil])
([nil nil ((#("Agora, vamos entender como utilizar a primeira solução que o Docker disponibiliza para persistência de dados, que são os bind mounts." 0 133 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -78957) (undo-tree-id1573 . -133) (undo-tree-id1574 . -133) 79090) nil (26047 61044 935432 259000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)) fontified t)) . 78957)) nil (26047 61044 935430 215000) 0 nil])
([nil nil ((#("
Para entender melhor, vamos executar alguns comandos. Primeiramente, vamos parar os containers com o comando docker rm e remover todos os containers existentes:

docker rm $(docker container ps -aq) --force
COPIAR CÓDIGO
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1 162 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 162 163 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 163 208 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 208 222 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -79094) (undo-tree-id1571 . -222) (undo-tree-id1572 . -222) 79316) nil (26047 61044 935429 237000) 0 nil])
([nil nil ((79094 . 79095)) nil (26047 61044 935427 250000) 0 nil])
([nil nil ((79095 . 79100)) nil (26047 61044 935426 613000) 0 nil])
([nil nil ((nil rear-nonsticky nil 82309 . 82310) (nil fontified nil 82308 . 82310) (nil fontified nil 82305 . 82308) (82305 . 82310)) nil (26047 61044 935425 805000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 79094) (undo-tree-id1570 . -1)) nil (26047 61044 935424 431000) 0 nil])
([nil nil ((79229 . 79230)) nil (26047 61044 935423 148000) 0 nil])
([nil nil ((79541 . 79542)) nil (26047 61044 935422 484000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 79567) (undo-tree-id1568 . -13) (undo-tree-id1569 . -13)) nil (26047 61044 935421 556000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -79862) (undo-tree-id1566 . -13) (undo-tree-id1567 . -13) 79875) nil (26047 61044 935419 516000) 0 nil])
([nil nil ((79842 . 79843)) nil (26047 61044 935417 501000) 0 nil])
([nil nil ((80093 . 80094)) nil (26047 61044 935416 752000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 80156) (undo-tree-id1564 . -13) (undo-tree-id1565 . -13)) nil (26047 61044 935415 863000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 80555) (undo-tree-id1562 . -13) (undo-tree-id1563 . -13)) nil (26047 61044 935413 645000) 0 nil])
([nil nil ((80547 . 80548)) nil (26047 61044 935411 731000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 80746) (undo-tree-id1559 . -13) (undo-tree-id1560 . -13) (undo-tree-id1561 . -13)) nil (26047 61044 935410 742000) 0 nil])
([nil nil ((80719 . 80720)) nil (26047 61044 935407 66000) 0 nil])
([nil nil ((80862 . 80863)) nil (26047 61044 935406 283000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . -80862) (undo-tree-id1558 . -1) 80863) nil (26047 61044 935405 247000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 81461) (undo-tree-id1555 . -13) (undo-tree-id1556 . -13) (undo-tree-id1557 . -13)) nil (26047 61044 935402 978000) 0 nil])
([nil nil ((81399 . 81400)) nil (26047 61044 935599 846000) 0 nil])
([nil nil ((82232 . 82235)) nil (26047 61195 98352 39000) 0 nil] [nil nil ((#("No entanto, há outra maneira de criar volumes que vem sendo mais recomendada pelo Docker." 0 89 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 82142) (undo-tree-id1552 . -89) (undo-tree-id1553 . -89) (undo-tree-id1554 . -89)) ((82142 . 82231)) (26047 61044 935395 648000) 0 nil])
([nil nil ((#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -82232) (undo-tree-id1582 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -82233) (undo-tree-id1583 . -1) (#("*" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . -82234) (undo-tree-id1584 . -1) 82235) nil (26047 61195 98350 361000) 0 nil])
nil
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 82691) (undo-tree-id1579 . -13) (undo-tree-id1580 . -13) (undo-tree-id1581 . -13)) nil (26047 61195 98346 605000) 0 nil])
([nil nil ((82600 . 82601)) nil (26047 61195 170605 489000) 0 nil])
([nil nil ((#("Mais adiante, teremos exemplos mais robustos para compreender essa operação. Mas, antes, vamos entender os conceitos primordiais que baseiam a utilização de volumes, bind mounts e tmpfs.

" 0 187 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 187 188 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -83755) (undo-tree-id1589 . -188) (undo-tree-id1590 . -188) 83943) nil (26047 61285 952374 579000) 0 nil] [nil nil ((#("No vídeo, o instrutor erra o caminho do diretório local por escrever o nome de usuário incorretamente. Caso o diretório que você esteja tentando utilizar não exista no seu host, a flag --mount vai informar que esse caminho não existe." 0 126 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 126 234 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 82961) (undo-tree-id1576 . -234) (undo-tree-id1577 . -234) (undo-tree-id1578 . -234)) ((82961 . 83195)) (26047 61195 98645 930000) 0 nil])
([nil nil ((#("Falaremos sobre isso no próximo vídeo. Até lá!" 0 45 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 45 46 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -84276) (undo-tree-id1587 . -46) (undo-tree-id1588 . -46) 84322) nil (26047 61285 952371 688000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 82961) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 82961)) ((82961 . 82962) (82961 . 82962)) (26047 61195 98331 361000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 84276)) nil (26047 61285 952368 449000) 0 nil])
nil
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 84275) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1)) nil (26047 61285 952364 779000) 0 nil])
([nil nil ((82180 . 82181) (t 26047 61285 982641 982000)) nil (26047 61299 891153 756000) 0 nil])
([nil nil ((82189 . 82190)) nil (26047 61299 891152 562000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 82188)) nil (26047 61299 891150 984000) 0 nil])
([nil nil ((82189 . 82190)) nil (26047 61299 891147 254000) 0 nil])
([nil nil ((84276 . 84277) (t 26047 61299 918280 727000)) nil (26047 62159 844095 964000) 0 nil])
([nil nil ((84277 . 84278)) nil (26047 62159 844095 159000) 0 nil])
([nil nil ((84278 . 84291)) nil (26047 62159 844094 535000) 0 nil])
([nil nil ((84291 . 84292)) nil (26047 62159 844093 821000) 0 nil])
([nil nil ((84292 . 84293)) nil (26047 62159 844093 165000) 0 nil])
([nil nil ((84293 . 84294)) nil (26047 62159 844092 520000) 0 nil])
([nil nil ((#("v" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -84293) (undo-tree-id1621 . -1) 84294) nil (26047 62159 844091 721000) 0 nil])
([nil nil ((84292 . 84300)) nil (26047 62159 844090 308000) 0 nil])
([nil nil ((84300 . 84301)) nil (26047 62159 844089 599000) 0 nil])
([nil nil ((nil rear-nonsticky nil 90882 . 90883) (nil fontified nil 90708 . 90883) (nil fontified nil 90707 . 90708) (nil fontified nil 90543 . 90707) (nil fontified nil 90521 . 90543) (nil fontified nil 90504 . 90521) (nil fontified nil 90485 . 90504) (nil fontified nil 90484 . 90485) (nil fontified nil 90476 . 90484) (nil fontified nil 90475 . 90476) (nil fontified nil 90350 . 90475) (nil fontified nil 90349 . 90350) (nil fontified nil 90237 . 90349) (nil fontified nil 90223 . 90237) (nil fontified nil 90153 . 90223) (nil fontified nil 90152 . 90153) (nil fontified nil 89910 . 90152) (nil fontified nil 89909 . 89910) (nil fontified nil 89807 . 89909) (nil fontified nil 89793 . 89807) (nil fontified nil 89728 . 89793) (nil fontified nil 89727 . 89728) (nil fontified nil 89601 . 89727) (nil fontified nil 89600 . 89601) (nil fontified nil 89370 . 89600) (nil fontified nil 89343 . 89370) (nil fontified nil 89342 . 89343) (nil fontified nil 89157 . 89342) (nil fontified nil 89156 . 89157) (nil fontified nil 88939 . 89156) (nil fontified nil 88886 . 88939) (nil fontified nil 88828 . 88886) (nil fontified nil 88809 . 88828) (nil fontified nil 88780 . 88809) (nil fontified nil 88753 . 88780) (nil fontified nil 88752 . 88753) (nil fontified nil 88555 . 88752) (nil fontified nil 88531 . 88555) (nil fontified nil 88530 . 88531) (nil fontified nil 88446 . 88530) (nil fontified nil 88445 . 88446) (nil fontified nil 88302 . 88445) (nil fontified nil 88301 . 88302) (nil fontified nil 88250 . 88301) (nil fontified nil 88236 . 88250) (nil fontified nil 88227 . 88236) (nil fontified nil 88226 . 88227) (nil fontified nil 88123 . 88226) (nil fontified nil 88109 . 88123) (nil fontified nil 88095 . 88109) (nil fontified nil 88094 . 88095) (nil fontified nil 87963 . 88094) (nil fontified nil 87949 . 87963) (nil fontified nil 87938 . 87949) (nil fontified nil 87937 . 87938) (nil fontified nil 87765 . 87937) (nil fontified nil 87751 . 87765) (nil fontified nil 87731 . 87751) (nil fontified nil 87730 . 87731) (nil fontified nil 87516 . 87730) (nil fontified nil 87515 . 87516) (nil fontified nil 87350 . 87515) (nil fontified nil 87302 . 87350) (nil fontified nil 87301 . 87302) (nil fontified nil 87284 . 87301) (nil fontified nil 87283 . 87284) (nil fontified nil 87038 . 87283) (nil fontified nil 87037 . 87038) (nil fontified nil 86951 . 87037) (nil fontified nil 86937 . 86951) (nil fontified nil 86891 . 86937) (nil fontified nil 86890 . 86891) (nil fontified nil 86777 . 86890) (nil fontified nil 86763 . 86777) (nil fontified nil 86737 . 86763) (nil fontified nil 86736 . 86737) (nil fontified nil 86623 . 86736) (nil fontified nil 86622 . 86623) (nil fontified nil 86287 . 86622) (nil fontified nil 86286 . 86287) (nil fontified nil 86166 . 86286) (nil fontified nil 86152 . 86166) (nil fontified nil 86106 . 86152) (nil fontified nil 86105 . 86106) (nil fontified nil 85775 . 86105) (nil fontified nil 85774 . 85775) (nil fontified nil 85681 . 85774) (nil fontified nil 85661 . 85681) (nil fontified nil 85660 . 85661) (nil fontified nil 85482 . 85660) (nil fontified nil 85465 . 85482) (nil fontified nil 85446 . 85465) (nil fontified nil 85445 . 85446) (nil fontified nil 85437 . 85445) (nil fontified nil 85436 . 85437) (nil fontified nil 85237 . 85436) (nil fontified nil 85223 . 85237) (nil fontified nil 85191 . 85223) (nil fontified nil 85190 . 85191) (nil fontified nil 85101 . 85190) (nil fontified nil 85100 . 85101) (nil fontified nil 84915 . 85100) (nil fontified nil 84914 . 84915) (nil fontified nil 84848 . 84914) (nil fontified nil 84830 . 84848) (nil fontified nil 84829 . 84830) (nil fontified nil 84772 . 84829) (nil fontified nil 84771 . 84772) (nil fontified nil 84422 . 84771) (nil fontified nil 84421 . 84422) (nil fontified nil 84301 . 84421) (84301 . 90883)) nil (26047 62159 844084 555000) 0 nil])
([nil nil ((84830 . 84835)) nil (26047 62159 844067 154000) 0 nil])
([nil nil ((85014 . 85015)) nil (26047 62159 844066 484000) 0 nil])
([nil nil ((85015 . 85016)) nil (26047 62159 844065 855000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)) fontified t)) . 85032)) nil (26047 62159 844065 135000) 0 nil])
([nil nil ((85032 . 85033)) nil (26047 62159 844064 527000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("         " 0 7 (face org-indent) 7 9 (face org-indent)) fontified t)) . 85033)) nil (26047 62159 844063 806000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -85229) (undo-tree-id1619 . -13) (undo-tree-id1620 . -13) 85242) nil (26047 62159 844062 958000) 0 nil])
([nil nil ((85197 . 85198)) nil (26047 62159 844060 900000) 0 nil])
([nil nil ((85476 . 85477)) nil (26047 62159 844060 162000) 0 nil])
([nil nil ((nil rear-nonsticky nil 85660 . 85661) (nil fontified nil 85659 . 85661) (nil fontified nil 85656 . 85659) (85656 . 85661)) nil (26047 62159 844059 370000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -86152) (undo-tree-id1617 . -13) (undo-tree-id1618 . -13) 86165) nil (26047 62159 844057 979000) 0 nil])
([nil nil ((86106 . 86107)) nil (26047 62159 844056 14000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 86751) (undo-tree-id1615 . -13) (undo-tree-id1616 . -13)) nil (26047 62159 844055 152000) 0 nil])
([nil nil ((86725 . 86726)) nil (26047 62159 844053 118000) 0 nil])
([nil nil ((86867 . 86868)) nil (26047 62159 844052 402000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 86914) (undo-tree-id1613 . -13) (undo-tree-id1614 . -13)) nil (26047 62159 844051 609000) 0 nil])
([nil nil ((nil rear-nonsticky nil 87278 . 87279) (nil fontified nil 87266 . 87279) (87266 . 87279)) nil (26047 62159 844049 700000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 12 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 12 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . 87266) (undo-tree-id1611 . -13) (undo-tree-id1612 . -13)) nil (26047 62159 844048 413000) 0 nil])
([nil nil ((87266 . 87271)) nil (26047 62159 844046 491000) 0 nil])
([nil nil ((87484 . 87485)) nil (26047 62159 844045 823000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 87485)) nil (26047 62159 844045 35000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -87720) (undo-tree-id1609 . -13) (undo-tree-id1610 . -13) 87733) nil (26047 62159 844044 139000) 0 nil])
([nil nil ((87700 . 87701)) nil (26047 62159 844042 68000) 0 nil])
([nil nil ((87895 . 87896)) nil (26047 62159 844041 355000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 87907) (undo-tree-id1607 . -13) (undo-tree-id1608 . -13)) nil (26047 62159 844040 471000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -88054) (undo-tree-id1605 . -13) (undo-tree-id1606 . -13) 88067) nil (26047 62159 844038 459000) 0 nil])
([nil nil ((88040 . 88041)) nil (26047 62159 844036 325000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 88169) (undo-tree-id1603 . -13) (undo-tree-id1604 . -13)) nil (26047 62159 844035 502000) 0 nil])
([nil nil ((88160 . 88161)) nil (26047 62159 844033 475000) 0 nil])
([nil nil ((88452 . 88456)) nil (26047 62159 844032 826000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -88455) (undo-tree-id1602 . -1) 88456) nil (26047 62159 844032 29000) 0 nil])
([nil nil ((88455 . 88457)) nil (26047 62159 844030 501000) 0 nil])
([nil nil ((88753 . 88754)) nil (26047 62159 844029 871000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 88754)) nil (26047 62159 844029 29000) 0 nil])
([nil nil ((#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -88832) (88828 . 88832) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -88770) (88766 . 88770) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -88747) (88743 . 88747) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -88714) (88710 . 88714) (#("   " 0 3 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("               " 0 7 (face org-indent) 7 15 (face org-indent)) fontified nil)) . -88683) (88679 . 88683) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -88827) (88824 . 88827) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -88766) (88763 . 88766) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -88744) (88741 . 88744) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -88712) (88709 . 88712) (#("  " 0 2 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("             " 0 7 (face org-indent) 7 13 (face org-indent)) fontified nil)) . -88682) (88679 . 88682) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -88822) (88820 . 88822) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -88762) (88760 . 88762) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -88741) (88739 . 88741) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -88710) (88708 . 88710) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("           " 0 7 (face org-indent) 7 11 (face org-indent)) fontified nil)) . -88681) (88679 . 88681) (88816 . 88817) (88757 . 88758) (88737 . 88738) (88707 . 88708) (88679 . 88680)) nil (26047 62159 844026 80000) 0 nil])
([nil nil ((88885 . 88886)) nil (26047 62159 844020 83000) 0 nil])
([nil nil ((89290 . 89295)) nil (26047 62159 844019 427000) 0 nil])
([nil nil ((89680 . 89681)) nil (26047 62159 844018 770000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (fontified t)) . 89746) (undo-tree-id1600 . -13) (undo-tree-id1601 . -13)) nil (26047 62159 844017 944000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -90163) (undo-tree-id1598 . -13) (undo-tree-id1599 . -13) 90176) nil (26047 62159 844013 822000) 0 nil])
([nil nil ((90093 . 90094)) nil (26047 62159 844011 822000) 0 nil])
([nil nil ((90470 . 90471)) nil (26047 62159 844011 76000) 0 nil])
([nil nil ((#("
Retorno
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 9 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 90403) (undo-tree-id1595 . -9) (undo-tree-id1596 . -9) (undo-tree-id1597 . -9)) nil (26047 62159 844010 0) 0 nil])
([nil nil ((#("Conhecemos as duas principais formas de criar maneiras de persistir dados: bind mounts e os volumes em si, gerenciados pelo " 0 124 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -90628) (undo-tree-id1593 . -124) (undo-tree-id1594 . -124) 90752) nil (26047 62159 844362 656000) 0 nil])
([nil nil ((#("Docker. Mas ainda falta um terceiro tipo: os tmpfs." 0 50 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 50 51 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . 90628) (undo-tree-id1649 . -51) (undo-tree-id1650 . -51)) nil (26047 62864 407045 67000) 0 nil] [nil nil ((#("Docker. Mas ainda falta um terceiro tipo: os tmpfs.

* dicas de como usar o docker na minha máquina
** para ter permissão de executar comandos no bash quando crio containers como usuário simples (como na máquina da Nexti, por exemplo)
basta definir a senha na primeira execução de um bash do container, mas que não tenha sido finalizado o processo do docker run
	docker run -it ubuntu bash
executar o
	passwd
e assim definir uma senha qualquer para o root. Quando rodar o container posteriormente não dá mais erro de permissão de execução.
* Dúvidas que tive
** quando a partir de uma image mysqlX eu subo um container: ao fazer um INSERT na base desse container, ele aparecerá em todos outros novos containers dessa imagem do mysqlX?
Isolamento de Contextos
Como cada contêiner possui seu próprio sistema de arquivos, processo, espaço de rede e recursos, garantindo que a aplicação dentro do contêiner não interfira em outras aplicações ou no *sistema hospedeiro*, isso proporciorna um alto grau de independência e isolamento. Como coloquei em negrito: é em relação ao sistema hospedeiro. Mas volta a pergunta: e em relação à imagem do docker?
" 0 50 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 50 51 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t) 51 52 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 52 53 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 53 55 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 55 99 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 99 100 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t) 100 101 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-hide) 101 103 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 103 234 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 234 235 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t) 235 362 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 362 363 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent))) 363 388 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t) 388 389 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t rear-nonsticky t) 389 390 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent))) 390 401 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 401 409 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("        " 0 3 (face org-indent) 3 8 (face org-indent))) 409 417 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 417 539 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 539 540 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 540 542 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 542 543 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 543 558 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 558 559 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t) 559 560 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-hide) 560 562 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 562 734 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2) 734 735 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t) 735 759 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 759 944 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 944 964 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t) 964 1026 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 1026 1027 (rear-nonsticky t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 1027 1144 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 1144 1145 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t rear-nonsticky t)) . -90628) (undo-tree-id1591 . -1145) (undo-tree-id1592 . -1145) 91773) ((90628 . 91773)) (26047 62159 844001 43000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 90628) (#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 90628)) nil (26047 62864 407043 124000) 0 nil])
nil
([nil nil ((90627 . 90631)) nil (26047 62864 407042 289000) 0 nil])
([nil nil ((90631 . 90637)) nil (26047 62864 407041 581000) 0 nil])
([nil nil ((#("u" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -90631) (undo-tree-id1643 . -1) (#("T" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -90632) (undo-tree-id1644 . -1) (#("I" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -90633) (undo-tree-id1645 . -1) (#("L" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -90634) (undo-tree-id1646 . -1) (#("I" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -90635) (undo-tree-id1647 . -1) (#("Z" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -90636) (undo-tree-id1648 . -1) 90637) nil (26047 62864 407039 911000) 0 nil])
([nil nil ((90631 . 90647)) nil (26047 62864 407034 361000) 0 nil])
([nil nil ((90647 . 90648)) nil (26047 62864 407033 737000) 0 nil])
([nil nil ((nil rear-nonsticky nil 94453 . 94454) (nil fontified nil 94453 . 94454) (nil fontified nil 94234 . 94453) (nil fontified nil 94233 . 94234) (nil fontified nil 93887 . 94233) (nil fontified nil 93877 . 93887) (nil fontified nil 93876 . 93877) (nil fontified nil 93710 . 93876) (nil fontified nil 93709 . 93710) (nil fontified nil 93575 . 93709) (nil fontified nil 93574 . 93575) (nil fontified nil 93522 . 93574) (nil fontified nil 93508 . 93522) (nil fontified nil 93478 . 93508) (nil fontified nil 93477 . 93478) (nil fontified nil 93410 . 93477) (nil fontified nil 93409 . 93410) (nil fontified nil 93279 . 93409) (nil fontified nil 93265 . 93279) (nil fontified nil 93202 . 93265) (nil fontified nil 93201 . 93202) (nil fontified nil 92965 . 93201) (nil fontified nil 92940 . 92965) (nil fontified nil 92939 . 92940) (nil fontified nil 92908 . 92939) (nil fontified nil 92907 . 92908) (nil fontified nil 92587 . 92907) (nil fontified nil 92586 . 92587) (nil fontified nil 92417 . 92586) (nil fontified nil 92416 . 92417) (nil fontified nil 92227 . 92416) (nil fontified nil 92226 . 92227) (nil fontified nil 92146 . 92226) (nil fontified nil 92145 . 92146) (nil fontified nil 91990 . 92145) (nil fontified nil 91989 . 91990) (nil fontified nil 91921 . 91989) (nil fontified nil 91907 . 91921) (nil fontified nil 91877 . 91907) (nil fontified nil 91876 . 91877) (nil fontified nil 91775 . 91876) (nil fontified nil 91774 . 91775) (nil fontified nil 91573 . 91774) (nil fontified nil 91572 . 91573) (nil fontified nil 91367 . 91572) (nil fontified nil 91366 . 91367) (nil fontified nil 91310 . 91366) (nil fontified nil 91296 . 91310) (nil fontified nil 91256 . 91296) (nil fontified nil 91255 . 91256) (nil fontified nil 91107 . 91255) (nil fontified nil 91106 . 91107) (nil fontified nil 91008 . 91106) (nil fontified nil 90985 . 91008) (nil fontified nil 90984 . 90985) (nil fontified nil 90736 . 90984) (nil fontified nil 90735 . 90736) (nil fontified nil 90648 . 90735) (90648 . 94454)) nil (26047 62864 407030 764000) 0 nil])
([nil nil ((92940 . 92945)) nil (26047 62864 407020 925000) 0 nil])
([nil nil ((90985 . 90990)) nil (26047 62864 407020 238000) 0 nil])
([nil nil ((#("egamos ao terceiro tipo de persistência que podemos utilizar com o Docker, os tmpfs.
" 0 85 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -90650) (undo-tree-id1641 . -85) (undo-tree-id1642 . -85) 90735) nil (26047 62864 407019 391000) 0 nil])
([nil nil ((#("C" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -90648) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (#("h" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -90649) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) 90650) nil (26047 62864 407016 929000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 90648)) nil (26047 62864 407013 565000) 0 nil])
([nil nil ((91173 . 91174)) nil (26047 62864 407012 910000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 91214) (undo-tree-id1635 . -13) (undo-tree-id1636 . -13)) nil (26047 62864 407012 67000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -91812) (undo-tree-id1633 . -13) (undo-tree-id1634 . -13) 91825) nil (26047 62864 407009 869000) 0 nil])
([nil nil ((91782 . 91783)) nil (26047 62864 407007 870000) 0 nil])
([nil nil ((92120 . 92121)) nil (26047 62864 407007 214000) 0 nil])
([nil nil ((92258 . 92259)) nil (26047 62864 407006 570000) 0 nil])
([nil nil ((#("
Vamos sair do container atual.
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 9 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 9 32 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 92802) (undo-tree-id1631 . -32) (undo-tree-id1632 . -32)) nil (26047 62864 407005 739000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . 92802)) nil (26047 62864 407003 806000) 0 nil])
([nil nil ((92802 . 92803)) nil (26047 62864 407003 41000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -93133) (undo-tree-id1629 . -13) (undo-tree-id1630 . -13) 93146) nil (26047 62864 407002 209000) 0 nil])
([nil nil ((93070 . 93071)) nil (26047 62864 407000 181000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -93265) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) 93266) nil (26047 62864 406999 288000) 0 nil])
([nil nil ((93265 . 93266)) nil (26047 62864 406997 311000) 0 nil])
([nil nil ((#("COPIAR CÓDIGO" 0 13 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t)) . -93364) (undo-tree-id1625 . -13) (undo-tree-id1626 . -13) 93377) nil (26047 62864 406996 456000) 0 nil])
([nil nil ((93364 . 93365)) nil (26047 62864 406994 371000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("            " 0 7 (face org-indent) 7 12 (face org-indent)))) . -93364) (undo-tree-id1624 . -1) 93365) nil (26047 62864 406993 510000) 0 nil])
([nil nil ((93334 . 93335)) nil (26047 62864 406991 740000) 0 nil])
([nil nil ((93788 . 93789)) nil (26047 62864 406990 960000) 0 nil])
([nil nil ((93789 . 93791)) nil (26047 62864 406990 354000) 0 nil])
([nil nil ((93800 . 93801)) nil (26047 62864 406989 684000) 0 nil])
([nil nil ((93801 . 93802)) nil (26047 62864 406988 970000) 0 nil])
([nil nil ((93802 . 93803)) nil (26047 62864 406988 335000) 0 nil])
([nil nil ((93910 . 93911)) nil (26047 62864 406987 575000) 0 nil])
([nil nil ((93911 . 93913)) nil (26047 62864 406986 896000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93913) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93913) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93913) (#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93913) (#("e" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93913)) nil (26047 62864 406985 666000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93803) (#("s" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93803) (#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93803)) nil (26047 62864 406983 728000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93791)) nil (26047 62864 406982 333000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)) fontified t)) . 93791)) nil (26047 62864 406980 902000) 0 nil])
([nil current ((#("
Terminamos a parte de persistência de dados. A partir de agora, vamos pensar em algumas questões mais elaboradas, fazendo um grande apanhado de tudo o que aprendemos para colocar uma aplicação mais robusta em produção.

" 0 1 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 1 220 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t) 220 221 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified t rear-nonsticky t)) . -94076) (undo-tree-id1622 . -221) (undo-tree-id1623 . -221) 94297) nil (26047 62864 406977 501000) 0 nil])
nil
