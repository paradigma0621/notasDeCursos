(undo-tree-save-format-version . 1)
"0d6f2131614762101172c116fa15b1d85e36c735"
[nil nil nil nil (26037 27412 608645 704000) 0 nil]
([nil nil ((8091 . 8092) (t 26036 26237 137426 293000)) nil (26037 27412 608644 781000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8091) (undo-tree-id503 . -1) 8092) nil (26037 27412 608643 780000) 0 nil])
([nil nil ((8091 . 8101)) nil (26037 27412 608642 388000) 0 nil])
([nil nil ((8101 . 8120)) nil (26037 27412 608641 761000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8119) (undo-tree-id502 . -1) 8120) nil (26037 27412 608640 985000) 0 nil])
([nil nil ((8119 . 8128)) nil (26037 27412 608639 556000) 0 nil])
([nil nil ((8128 . 8129)) nil (26037 27412 608638 915000) 0 nil])
([nil nil ((8129 . 8138)) nil (26037 27412 608638 259000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8137) (undo-tree-id501 . -1) 8138) nil (26037 27412 608637 439000) 0 nil])
([nil nil ((7559 . 7579)) nil (26037 27412 608635 999000) 0 nil])
([nil nil ((8157 . 8158) 7579) nil (26037 27412 608635 271000) 0 nil])
([nil nil ((#("(máquina CI Daemon)" 0 19 (fontified t)) . 7560) (undo-tree-id495 . -19) (undo-tree-id496 . -19) (undo-tree-id497 . 19) (undo-tree-id498 . -1) (undo-tree-id499 . 1) (undo-tree-id500 . -19) (t 26037 4761 250352 70000)) nil (26037 27412 608634 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("        " 0 5 (face org-indent) 5 8 (face org-indent)))) . -7559) (undo-tree-id493 . -1) (undo-tree-id494 . -1) 7560) nil (26037 27412 608629 501000) 0 nil])
([nil nil ((8137 . 8141)) nil (26037 27412 608627 424000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8140) (undo-tree-id492 . -1) 8141) nil (26037 27412 608626 569000) 0 nil])
([nil nil ((8140 . 8148)) nil (26037 27412 608624 867000) 0 nil])
([nil nil ((8148 . 8164)) nil (26037 27412 608624 223000) 0 nil])
([nil nil ((8164 . 8165)) nil (26037 27412 608623 433000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8183 . 8184) (nil fontified nil 8165 . 8184) (8165 . 8184)) nil (26037 27412 608622 663000) 0 nil])
([nil nil ((#("(" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8165) (undo-tree-id490 . 1) (undo-tree-id491 . -1)) nil (26037 27412 608621 438000) 0 nil])
([nil nil ((8165 . 8166)) nil (26037 27412 608619 638000) 0 nil])
([nil nil ((8165 . 8166)) nil (26037 27412 608619 0) 0 nil])
([nil nil ((8174 . 8175)) nil (26037 27412 608618 299000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t rear-nonsticky t)) . -8185) (undo-tree-id487 . -1) (undo-tree-id488 . 1) (undo-tree-id489 . -1) 8186) nil (26037 27412 608617 326000) 0 nil])
([nil nil ((8165 . 8174) (t 26037 4807 981652 173000)) nil (26037 27412 608607 893000) 0 nil])
([nil nil ((8194 . 8215) (t 26037 4812 667780 742000)) nil (26037 27412 608606 989000) 0 nil])
([nil nil ((8215 . 8226)) nil (26037 27412 608606 180000) 0 nil])
([nil nil ((#("s" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8225) (undo-tree-id486 . -1) 8226) nil (26037 27412 608605 347000) 0 nil])
([nil nil ((8225 . 8241)) nil (26037 27412 608603 961000) 0 nil])
([nil nil ((8241 . 8245)) nil (26037 27412 608603 239000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8243) (undo-tree-id484 . -1) (#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8244) (undo-tree-id485 . -1) 8245) nil (26037 27412 608602 324000) 0 nil])
([nil nil ((8243 . 8244)) nil (26037 27412 608600 258000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8243) (undo-tree-id483 . -1) 8244) nil (26037 27412 608599 427000) 0 nil])
([nil nil ((8243 . 8255)) nil (26037 27412 608598 9000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8251) (undo-tree-id479 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8252) (undo-tree-id480 . -1) (#("t" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8253) (undo-tree-id481 . -1) (#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8254) (undo-tree-id482 . -1) 8255) nil (26037 27412 608596 669000) 0 nil])
([nil nil ((8251 . 8252)) nil (26037 27412 608593 95000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8251) (undo-tree-id478 . -1) 8252) nil (26037 27412 608592 152000) 0 nil])
([nil nil ((8251 . 8259)) nil (26037 27412 608590 653000) 0 nil])
([nil nil ((8259 . 8263) (t 26037 4837 375250 9000)) nil (26037 27412 608589 780000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8262) (undo-tree-id477 . -1) 8263) nil (26037 27412 608588 669000) 0 nil])
([nil nil ((8262 . 8263)) nil (26037 27412 608587 151000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8262) (undo-tree-id476 . -1) 8263) nil (26037 27412 608586 281000) 0 nil])
([nil nil ((8262 . 8283)) nil (26037 27412 608584 870000) 0 nil])
([nil nil ((8283 . 8292)) nil (26037 27412 608584 246000) 0 nil])
([nil nil ((8292 . 8308)) nil (26037 27412 608583 465000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8307) (undo-tree-id475 . -1) 8308) nil (26037 27412 608582 619000) 0 nil])
([nil nil ((8307 . 8311)) nil (26037 27412 608581 104000) 0 nil])
([nil nil ((#("o" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8309) (undo-tree-id473 . -1) (#("ç" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8310) (undo-tree-id474 . -1) 8311) nil (26037 27412 608580 130000) 0 nil])
([nil nil ((8309 . 8319)) nil (26037 27412 608578 19000) 0 nil])
([nil nil ((8320 . 8321) (t 26037 4921 745723 503000)) nil (26037 27412 608577 233000) 0 nil])
([nil nil ((8321 . 8341)) nil (26037 27412 608576 408000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8340) (undo-tree-id472 . -1) 8341) nil (26037 27412 608575 575000) 0 nil])
([nil nil ((8340 . 8341)) nil (26037 27412 608574 110000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8338) (undo-tree-id469 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8339) (undo-tree-id470 . -1) (#("E" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8340) (undo-tree-id471 . -1) 8341) nil (26037 27412 608572 980000) 0 nil])
([nil nil ((8338 . 8355)) nil (26037 27412 608569 606000) 0 nil])
([nil nil ((8355 . 8356)) nil (26037 27412 608568 988000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8355) (undo-tree-id468 . -1) 8356) nil (26037 27412 608568 191000) 0 nil])
([nil nil ((8355 . 8359)) nil (26037 27412 608566 790000) 0 nil])
([nil nil ((8337 . 8338)) nil (26037 27412 608566 131000) 0 nil])
([nil nil ((8350 . 8351)) nil (26037 27412 608565 344000) 0 nil])
([nil nil ((8361 . 8362)) nil (26037 27412 608564 688000) 0 nil])
([nil nil ((8362 . 8363)) nil (26037 27412 608564 13000) 0 nil])
([nil nil ((8320 . 8324)) nil (26037 27412 608563 371000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8323) (undo-tree-id467 . -1) 8324) nil (26037 27412 608562 522000) 0 nil])
([nil nil ((8323 . 8327)) nil (26037 27412 608561 114000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8324) (undo-tree-id464 . -1) (#("a" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8325) (undo-tree-id465 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8326) (undo-tree-id466 . -1) 8327) nil (26037 27412 608559 936000) 0 nil])
([nil nil ((8324 . 8325)) nil (26037 27412 608557 166000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8322) (undo-tree-id461 . -1) (#("ç" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8323) (undo-tree-id462 . -1) (#("l" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8324) (undo-tree-id463 . -1) 8325) nil (26037 27412 608556 55000) 0 nil])
([nil nil ((8322 . 8343)) nil (26037 27412 608553 18000) 0 nil])
([nil nil ((8343 . 8355)) nil (26037 27412 608552 387000) 0 nil])
([nil nil ((8355 . 8359)) nil (26037 27412 608551 732000) 0 nil])
([nil nil ((8359 . 8360)) nil (26037 27412 608551 8000) 0 nil])
([nil nil ((8320 . 8321)) nil (26037 27412 608550 337000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("a" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("n" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("i" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("u" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("q" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("á" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (#("m" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8176) (t 26037 5029 206006 13000)) nil (26037 27412 608548 850000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8174) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (#("?" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8175) (undo-tree-id459 . -1) (undo-tree-id460 . -1) 8176) nil (26037 27412 608546 469000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 8174)) nil (26037 27412 608542 522000) 0 nil])
([nil nil ((8165 . 8166)) nil (26037 27412 608541 869000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 8166)) nil (26037 27412 608541 116000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8165) (undo-tree-id456 . -1) 8166) nil (26037 27412 608540 282000) 0 nil])
([nil nil ((8165 . 8166)) nil (26037 27412 608538 853000) 0 nil])
([nil nil ((8174 . 8175)) nil (26037 27412 608538 195000) 0 nil])
([nil nil ((8184 . 8185)) nil (26037 27412 608537 502000) 0 nil])
([nil nil ((8395 . 8400) (t 26037 5125 891779 387000)) nil (26037 27412 608536 805000) 0 nil])
([nil nil ((#("V" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8399) (undo-tree-id455 . -1) 8400) nil (26037 27412 608535 800000) 0 nil])
([nil nil ((8399 . 8402)) nil (26037 27412 608534 411000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8399) (undo-tree-id452 . -1) (#("u" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8400) (undo-tree-id453 . -1) (#("i" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -8401) (undo-tree-id454 . -1) 8402) nil (26037 27412 608533 178000) 0 nil])
([nil nil ((8399 . 8413)) nil (26037 27412 608530 304000) 0 nil])
([nil nil ((8413 . 8414)) nil (26037 27412 608529 484000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8495 . 8496) (nil fontified nil 8414 . 8496) (8414 . 8496)) nil (26037 27412 608528 741000) 0 nil])
([nil nil ((8496 . 8497)) nil (26037 27412 608527 709000) 0 nil])
([nil nil ((8496 . 8497) (t 26037 5432 891577 403000)) nil (26037 27412 608527 1000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8559 . 8560) (nil fontified nil 8497 . 8560) (8497 . 8560)) nil (26037 27412 608525 980000) 0 nil])
([nil nil ((8496 . 8497) (t 26037 5439 795900 119000)) nil (26037 27412 608524 959000) 0 nil])
([nil nil ((8561 . 8562)) nil (26037 27412 608524 144000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -8561) (undo-tree-id451 . -1) 8562) nil (26037 27412 608523 292000) 0 nil])
([nil nil ((8561 . 8562)) nil (26037 27412 608521 747000) 0 nil])
([nil nil ((8394 . 8396) (t 26037 5443 284067 34000)) nil (26037 27412 608521 48000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8668 . 8669) (nil fontified nil 8604 . 8669) (nil fontified nil 8564 . 8604) (nil fontified nil 8522 . 8564) (nil fontified nil 8463 . 8522) (nil fontified nil 8396 . 8463) (8396 . 8669)) nil (26037 27412 608519 938000) 0 nil])
([nil nil ((8463 . 8465)) nil (26037 27412 608518 104000) 0 nil])
([nil nil ((8524 . 8526)) nil (26037 27412 608517 138000) 0 nil])
([nil nil ((8568 . 8570)) nil (26037 27412 608516 519000) 0 nil])
([nil nil ((8610 . 8612)) nil (26037 27412 608515 836000) 0 nil])
([nil nil ((8310 . 8311)) nil (26037 27412 608515 185000) 0 nil])
([nil nil ((8311 . 8312)) nil (26037 27412 608514 509000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 8312)) nil (26037 27412 608513 824000) 0 nil])
([nil nil ((#("fica sempre verificando o repositório - se subiu algo ele testa." 0 64 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8187) (undo-tree-id449 . -64) (undo-tree-id450 . -64) 8251 (t 26037 5491 270590 551000)) nil (26037 27412 608512 896000) 0 nil])
([nil nil ((#(":" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8185) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -8186) (undo-tree-id447 . -1) (undo-tree-id448 . -1) 8187) nil (26037 27412 608509 989000) 0 nil])
([nil nil ((8185 . 8186)) nil (26037 27412 608506 585000) 0 nil])
([nil nil ((8782 . 8803) (t 26037 5510 963728 212000)) nil (26037 27412 608505 889000) 0 nil])
([nil nil ((8803 . 8806)) nil (26037 27412 608505 47000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8805) (undo-tree-id444 . -1) 8806) nil (26037 27412 608504 204000) 0 nil])
([nil nil ((8805 . 8811)) nil (26037 27412 608502 783000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -8810) (undo-tree-id443 . -1) 8811) nil (26037 27412 608502 14000) 0 nil])
([nil nil ((8810 . 8818)) nil (26037 27412 608500 520000) 0 nil])
([nil nil ((8818 . 8819)) nil (26037 27412 608499 852000) 0 nil])
([nil nil ((8819 . 8822)) nil (26037 27412 608499 235000) 0 nil])
([nil nil ((8822 . 8841)) nil (26037 27412 608498 594000) 0 nil])
([nil nil ((8841 . 8842)) nil (26037 27412 608497 948000) 0 nil])
([nil nil ((#("Certificação de CI
" 0 18 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3) 18 19 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)))) . 8823) (undo-tree-id441 . -19) (undo-tree-id442 . -19) (t 26037 5540 205502 303000)) nil (26037 27412 608497 110000) 0 nil])
([nil nil ((8823 . 8844)) nil (26037 27412 608495 60000) 0 nil])
([nil nil ((8844 . 8847)) nil (26037 27412 608494 411000) 0 nil])
([nil nil ((8847 . 8848)) nil (26037 27412 608493 665000) 0 nil])
([nil nil ((8848 . 8852) (t 26037 6394 68259 831000)) nil (26037 27412 608492 959000) 0 nil])
([nil nil ((8852 . 8853)) nil (26037 27412 608492 151000) 0 nil])
([nil nil ((#("mani " 0 5 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 8848) (undo-tree-id439 . -5) (undo-tree-id440 . -5)) nil (26037 27412 608491 310000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10163 . 10164) (nil fontified nil 9903 . 10164) (nil fontified nil 9902 . 9903) (nil fontified nil 9754 . 9902) (nil fontified nil 9753 . 9754) (nil fontified nil 9469 . 9753) (nil fontified nil 9468 . 9469) (nil fontified nil 9358 . 9468) (nil fontified nil 9357 . 9358) (nil fontified nil 9301 . 9357) (nil fontified nil 9300 . 9301) (nil fontified nil 9184 . 9300) (nil fontified nil 9183 . 9184) (nil fontified nil 9131 . 9183) (nil fontified nil 9130 . 9131) (nil fontified nil 9094 . 9130) (nil fontified nil 9093 . 9094) (nil fontified nil 8848 . 9093) (8848 . 10164)) nil (26037 27412 608488 739000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 9130)) nil (26037 27412 608484 986000) 0 nil])
([nil nil ((9130 . 9131)) nil (26037 27412 608484 360000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 9357)) nil (26037 27412 608483 656000) 0 nil])
([nil nil ((9357 . 9358)) nil (26037 27412 608482 966000) 0 nil])
([nil nil ((9550 . 9551)) nil (26037 27412 608482 96000) 0 nil])
([nil nil ((9567 . 9568)) nil (26037 27412 608481 279000) 0 nil])
([nil nil ((10166 . 10167)) nil (26037 27412 608480 640000) 0 nil])
([nil nil ((10167 . 10168) (t 26037 6546 382500 619000)) nil (26037 27412 608479 911000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10596 . 10597) (nil fontified nil 10596 . 10597) (nil fontified nil 10468 . 10596) (nil fontified nil 10467 . 10468) (nil fontified nil 10168 . 10467) (10168 . 10597)) nil (26037 27412 608478 833000) 0 nil])
([nil nil ((10470 . 10471)) nil (26037 27412 608477 286000) 0 nil])
([nil nil ((10487 . 10488)) nil (26037 27412 608476 641000) 0 nil])
([nil nil ((329 . 330) (t 26037 6646 689346 951000)) nil (26037 27412 608475 821000) 0 nil])
([nil nil ((330 . 337)) nil (26037 27412 608474 996000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -336) (undo-tree-id438 . -1) 337) nil (26037 27412 608474 191000) 0 nil])
([nil nil ((336 . 355)) nil (26037 27412 608472 729000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -354) (undo-tree-id437 . -1) 355) nil (26037 27412 608471 881000) 0 nil])
([nil nil ((354 . 358)) nil (26037 27412 608470 491000) 0 nil])
([nil nil ((#("Última" 0 6 (fontified t face org-level-2)) . 333) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -6)) nil (26037 27412 608469 653000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 333) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 333)) nil (26037 27412 608467 118000) 0 nil])
([nil nil ((333 . 334)) nil (26037 27412 608466 309000) 0 nil])
([nil nil ((351 . 370)) nil (26037 27412 608465 554000) 0 nil])
([nil nil ((nil rear-nonsticky nil 375 . 376) (nil fontified nil 370 . 376) (370 . 376)) nil (26037 27412 608464 792000) 0 nil])
([nil nil ((#("Ú" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -370) (undo-tree-id428 . -1) (#("l" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -371) (undo-tree-id429 . -1) (#("t" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -372) (undo-tree-id430 . -1) (#("i" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -373) (undo-tree-id431 . -1) (#("m" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -374) (undo-tree-id432 . -1) (#("a" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t rear-nonsticky t face org-level-2)) . -375) (undo-tree-id433 . -1) 376) nil (26037 27412 608462 923000) 0 nil])
([nil nil ((nil rear-nonsticky nil 615 . 616) (nil fontified nil 370 . 616) (370 . 616)) nil (26037 27412 608457 40000) 0 nil])
([nil nil ((#("O termo DevOps foi mencionado pela primeira vez em 2009, em uma palestra chamada de 10+ Deploys Per Day, por uma dupla que trabalhava no Flickr. O termo vem da junção das palavras Development e Operations, mas qual é a real definição desse termo?" 0 245 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified nil face org-level-2) 245 246 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified nil rear-nonsticky nil face org-level-2)) . 370) (undo-tree-id427 . -246) (nil rear-nonsticky t 615 . 616)) nil (26037 27412 608455 877000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -368) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (#(" " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -369) (undo-tree-id425 . -1) (undo-tree-id426 . -1) 370) nil (26037 27412 608454 41000) 0 nil])
([nil nil ((368 . 369)) nil (26037 27412 608450 742000) 0 nil])
([nil nil ((nil rear-nonsticky nil 614 . 615) (nil fontified nil 369 . 615) (369 . 615)) nil (26037 27412 608449 971000) 0 nil])
([nil nil ((615 . 616)) nil (26037 27412 608448 876000) 0 nil])
([nil nil ((616 . 620)) nil (26037 27412 608448 65000) 0 nil])
([nil nil ((nil rear-nonsticky nil 866 . 867) (nil fontified nil 801 . 867) (nil fontified nil 781 . 801) (nil fontified nil 780 . 781) (nil fontified nil 779 . 780) (nil fontified nil 719 . 779) (nil fontified nil 699 . 719) (nil fontified nil 698 . 699) (nil fontified nil 697 . 698) (nil fontified nil 620 . 697) (620 . 867)) nil (26037 27412 608446 938000) 0 nil])
([nil nil ((#("
Alternativa correta" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t) 1 20 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -698) (undo-tree-id421 . -20) (undo-tree-id422 . -20) 718) nil (26037 27412 608444 247000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 697) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 697) (undo-tree-id420 . -1)) nil (26037 27412 608441 904000) 0 nil])
([nil nil ((697 . 701)) nil (26037 27412 608440 425000) 0 nil])
([nil nil ((#("A" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 761) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 761) (#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 761)) nil (26037 27412 608439 470000) 0 nil])
([nil nil ((#("lternativa correta" 0 18 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . -761) (undo-tree-id418 . -18) (undo-tree-id419 . -18) 779) nil (26037 27412 608438 268000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 761)) nil (26037 27412 608435 569000) 0 nil])
([nil nil ((761 . 765)) nil (26037 27412 608434 938000) 0 nil])
([nil nil ((831 . 832)) nil (26037 27412 608434 235000) 0 nil])
([nil nil ((832 . 836)) nil (26037 27412 608433 583000) 0 nil])
([nil nil ((nil rear-nonsticky nil 859 . 860) (nil fontified nil 837 . 860) (nil fontified nil 836 . 837) (836 . 860)) nil (26037 27412 608432 756000) 0 nil])
([nil nil ((860 . 861)) nil (26037 27412 608431 589000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t)) . 836)) nil (26037 27412 608430 852000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1062 . 1063) (nil fontified nil 860 . 1063) (860 . 1063)) nil (26037 27412 608430 121000) 0 nil])
([nil nil ((1063 . 1064)) nil (26037 27412 608429 82000) 0 nil])
([nil nil ((831 . 832)) nil (26037 27412 608428 459000) 0 nil])
([nil nil ((nil rear-nonsticky nil 912 . 913) (nil fontified nil 832 . 913) (832 . 913)) nil (26037 27412 608427 671000) 0 nil])
([nil nil ((913 . 914)) nil (26037 27412 608426 631000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 914)) nil (26037 27412 608425 893000) 0 nil])
([nil nil ((760 . 761)) nil (26037 27412 608425 244000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1006 . 1007) (nil fontified nil 761 . 1007) (761 . 1007)) nil (26037 27412 608424 464000) 0 nil])
([nil nil ((696 . 697)) nil (26037 27412 608423 473000) 0 nil])
([nil nil ((nil rear-nonsticky nil 908 . 909) (nil fontified nil 697 . 909) (697 . 909)) nil (26037 27412 608422 694000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 1606) (t 26037 23781 235949 741000)) nil (26037 27412 608421 554000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified t)) . 1562) (t 26037 23785 92218 475000)) nil (26037 27412 608420 523000) 0 nil])
([nil nil ((1562 . 1563)) nil (26037 27412 608419 167000) 0 nil])
([nil nil ((1605 . 1606)) nil (26037 27412 608418 468000) 0 nil])
([nil nil ((1606 . 1610)) nil (26037 27412 608417 847000) 0 nil])
([nil nil ((1610 . 1611)) nil (26037 27412 608417 144000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1754 . 1755) (nil fontified nil 1611 . 1755) (1611 . 1755)) nil (26037 27412 608416 415000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 1611)) nil (26037 27412 608415 340000) 0 nil])
([nil nil ((1611 . 1612)) nil (26037 27412 608414 703000) 0 nil])
([nil nil ((#("A diferença entre a entrega contínua e o deploy contínuo é, que no deploy contínuo todas as alterações realmente entra em produção, o tempo todo" 0 1 (fontified t) 1 143 (fontified t) 143 144 (fontified t rear-nonsticky t)) . 1611) (undo-tree-id415 . -144) (undo-tree-id416 . -144) (undo-tree-id417 . -144)) nil (26037 27412 608413 750000) 0 nil])
([nil nil ((#("** a" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide) 1 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 3 4 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 1606) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4)) nil (26037 27412 608411 111000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 1606) (#("
" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 1606) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1)) nil (26037 27412 608408 272000) 0 nil])
([nil nil ((nil fontified nil 1749 . 1750) (nil fontified nil 1607 . 1749) (nil fontified nil 1606 . 1607) (1606 . 1750)) nil (26037 27412 608404 590000) 0 nil])
([nil nil ((#("A diferença entre a entrega contínua e o deploy contínuo é, que no deploy contínuo todas as alterações realmente entra em produção, o tempo todo" 0 1 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 1 143 (line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil) 143 144 (rear-nonsticky t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) fontified nil)) . 1606) (undo-tree-id407 . -144) (nil fontified t 1749 . 1750)) nil (26037 27412 608403 225000) 0 nil])
([nil nil ((11875 . 11876)) nil (26037 27412 608401 853000) 0 nil])
([nil nil ((nil fontified nil 12019 . 12020) (nil fontified nil 11877 . 12019) (nil fontified nil 11876 . 11877) (11876 . 12020)) nil (26037 27412 608401 35000) 0 nil])
([nil nil ((11875 . 11877)) nil (26037 27412 608399 895000) 0 nil])
([nil nil ((nil fontified nil 11876 . 11879) (nil line-prefix #("*" 0 1 (face org-indent)) 11876 . 11879) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 11876 . 11879) (#("** " 0 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 11875) (11878 . 11882) (nil fontified t 11876 . 11878) (nil line-prefix "" 11876 . 11878) (nil wrap-prefix #("* " 0 2 (face org-indent)) 11876 . 11878) (nil face org-level-1 11876 . 11878) (#("* " 0 2 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 11875) (11877 . 11880)) nil (26037 27412 608398 629000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12027 . 12028) (nil fontified nil 11879 . 12028) (11879 . 12028)) nil (26037 27412 608396 258000) 0 nil])
([nil nil ((#("í" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -11879) (undo-tree-id402 . -1) (#("c" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -11880) (undo-tree-id403 . -1) (#("o" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -11881) (undo-tree-id404 . -1) (#("n" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -11882) (undo-tree-id405 . -1) (#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -11883) (undo-tree-id406 . -1) 11884) nil (26037 27412 608394 454000) 0 nil])
([nil nil ((11879 . 11885)) nil (26037 27412 608389 998000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide)) . 11875) (#("*" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-hide)) . 11875)) nil (26037 27412 608389 42000) 0 nil])
([nil nil ((#("Entrega Contínua: confiabilidade e qualidade na implantação de software" 0 70 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1) 70 71 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t rear-nonsticky t face org-level-1)) . -11956) (undo-tree-id400 . -71) (undo-tree-id401 . -71) 12027) nil (26037 27412 608387 968000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t face org-level-1)) . -11955) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 11956) nil (26037 27412 608385 796000) 0 nil])
([nil nil ((12100 . 12101) 11955) nil (26037 27412 608383 731000) 0 nil])
([nil nil ((12101 . 12102) (t 26037 24333 354675 311000)) nil (26037 27412 608382 741000) 0 nil])
([nil nil ((12102 . 12112)) nil (26037 27412 608381 911000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -12111) (undo-tree-id397 . -1) 12112) nil (26037 27412 608380 870000) 0 nil])
([nil nil ((12111 . 12128)) nil (26037 27412 608379 493000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -12127) (undo-tree-id396 . -1) 12128) nil (26037 27412 608378 510000) 0 nil])
([nil nil ((12127 . 12132)) nil (26037 27412 608376 993000) 0 nil])
([nil nil ((12101 . 12102)) nil (26037 27412 608376 223000) 0 nil])
([nil nil ((12102 . 12119)) nil (26037 27412 608375 593000) 0 nil])
([nil nil ((12101 . 12102)) nil (26037 27412 608374 856000) 0 nil])
([nil nil ((12102 . 12105)) nil (26037 27412 608374 152000) 0 nil])
([nil nil ((12101 . 12110)) nil (26037 27412 608373 143000) 0 nil])
([nil nil ((#("D" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12104) (undo-tree-id390 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12105) (undo-tree-id391 . -1) (#("m" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12106) (undo-tree-id392 . -1) (#("i" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12107) (undo-tree-id393 . -1) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12108) (undo-tree-id394 . -1) (#("u" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12109) (undo-tree-id395 . -1) 12110) nil (26037 27412 608371 627000) 0 nil])
([nil nil ((12104 . 12114)) nil (26037 27412 608366 587000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12112) (undo-tree-id388 . -1) (#("n" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12113) (undo-tree-id389 . -1) 12114) nil (26037 27412 608365 667000) 0 nil])
([nil nil ((12112 . 12114)) nil (26037 27412 608363 482000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . -12113) (undo-tree-id387 . -1) 12114) nil (26037 27412 608362 722000) 0 nil])
([nil nil ((12113 . 12129)) nil (26037 27412 608360 926000) 0 nil])
([nil nil ((12129 . 12130)) nil (26037 27412 608360 195000) 0 nil])
([nil nil ((12130 . 12147)) nil (26037 27412 608359 524000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -12145) (undo-tree-id385 . -1) (#(" " 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -12146) (undo-tree-id386 . -1) 12147) nil (26037 27412 608358 553000) 0 nil])
([nil nil ((12145 . 12147)) nil (26037 27412 608356 385000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -12146) (undo-tree-id384 . -1) 12147) nil (26037 27412 608355 624000) 0 nil])
([nil nil ((12146 . 12148)) nil (26037 27412 608354 56000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) face org-level-3)) . -12147) (undo-tree-id383 . -1) 12148) nil (26037 27412 608353 273000) 0 nil])
([nil nil ((12147 . 12150)) nil (26037 27412 608351 805000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("       " 0 5 (face org-indent) 5 7 (face org-indent)))) . 12151) (#("*" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 12151) (#("*" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide)) . 12151)) nil (26037 27412 608350 888000) 0 nil])
([nil nil ((12169 . 12170)) nil (26037 27412 608349 801000) 0 nil])
([nil nil ((12179 . 12183)) nil (26037 27412 608349 171000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 12187)) nil (26037 27412 608348 418000) 0 nil])
([nil nil ((12187 . 12190)) nil (26037 27412 608347 784000) 0 nil])
([nil nil ((12207 . 12219)) nil (26037 27412 608347 69000) 0 nil])
([nil nil ((12219 . 12240)) nil (26037 27412 608346 351000) 0 nil])
([nil nil ((12240 . 12247)) nil (26037 27412 608345 641000) 0 nil])
([nil nil ((12247 . 12248)) nil (26037 27412 608345 23000) 0 nil])
([nil nil ((2627 . 2628) (t 26037 24741 782853 782000)) nil (26037 27412 608344 256000) 0 nil])
([nil nil ((2628 . 2649)) nil (26037 27412 608343 270000) 0 nil])
([nil nil ((2649 . 2670)) nil (26037 27412 608342 513000) 0 nil])
([nil nil ((2670 . 2675)) nil (26037 27412 608341 853000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2674) (undo-tree-id382 . -1) 2675) nil (26037 27412 608340 933000) 0 nil])
([nil nil ((2674 . 2678)) nil (26037 27412 608339 486000) 0 nil])
([nil nil ((2678 . 2690)) nil (26037 27412 608338 696000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2683) (undo-tree-id375 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2684) (undo-tree-id376 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2685) (undo-tree-id377 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2686) (undo-tree-id378 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2687) (undo-tree-id379 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2688) (undo-tree-id380 . -1) (#("q" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2689) (undo-tree-id381 . -1) 2690) nil (26037 27412 608336 874000) 0 nil])
([nil nil ((2683 . 2687)) nil (26037 27412 608330 994000) 0 nil])
([nil nil ((#("q" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2684) (undo-tree-id372 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2685) (undo-tree-id373 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2686) (undo-tree-id374 . -1) 2687) nil (26037 27412 608329 857000) 0 nil])
([nil nil ((2684 . 2705)) nil (26037 27412 608326 993000) 0 nil])
([nil nil ((2705 . 2716)) nil (26037 27412 608326 333000) 0 nil])
([nil nil ((2716 . 2727)) nil (26037 27412 608325 646000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2720) (undo-tree-id365 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2721) (undo-tree-id366 . -1) (#("t" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2722) (undo-tree-id367 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2723) (undo-tree-id368 . -1) (#("o" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2724) (undo-tree-id369 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2725) (undo-tree-id370 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2726) (undo-tree-id371 . -1) 2727) nil (26037 27412 608323 886000) 0 nil])
([nil nil ((2720 . 2738)) nil (26037 27412 608317 751000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2736) (undo-tree-id363 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2737) (undo-tree-id364 . -1) 2738) nil (26037 27412 608316 815000) 0 nil])
([nil nil ((2736 . 2757)) nil (26037 27412 608314 628000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2756) (undo-tree-id362 . -1) 2757) nil (26037 27412 608313 866000) 0 nil])
([nil nil ((2756 . 2757)) nil (26037 27412 608312 428000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2754) (undo-tree-id359 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2755) (undo-tree-id360 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2756) (undo-tree-id361 . -1) 2757) nil (26037 27412 608311 291000) 0 nil])
([nil nil ((2754 . 2757)) nil (26037 27412 608308 330000) 0 nil])
([nil nil ((12301 . 12302)) nil (26037 27412 608307 728000) 0 nil])
([nil nil ((12321 . 12322)) nil (26037 27412 608307 46000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12321) (undo-tree-id358 . -1) 12322) nil (26037 27412 608306 247000) 0 nil])
([nil nil ((12308 . 12309)) nil (26037 27412 608304 785000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t)) . -12308) (undo-tree-id357 . -1) 12309) nil (26037 27412 608303 976000) 0 nil])
([nil nil ((12322 . 12323)) nil (26037 27412 608302 287000) 0 nil])
([nil nil ((12380 . 12381) (t 26037 24846 747216 976000)) nil (26037 27412 608301 596000) 0 nil])
([nil nil ((12381 . 12387)) nil (26037 27412 608300 711000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12385) (undo-tree-id355 . -1) (#("p" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12386) (undo-tree-id356 . -1) 12387) nil (26037 27412 608299 703000) 0 nil])
([nil nil ((12385 . 12389)) nil (26037 27412 608297 506000) 0 nil])
([nil nil ((12389 . 12390)) nil (26037 27412 608296 877000) 0 nil])
([nil nil ((12390 . 12393)) nil (26037 27412 608296 130000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("        " 0 5 (face org-indent) 5 8 (face org-indent)))) . -12390) (undo-tree-id352 . -1) (#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("        " 0 5 (face org-indent) 5 8 (face org-indent)))) . -12391) (undo-tree-id353 . -1) (#("f" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("        " 0 5 (face org-indent) 5 8 (face org-indent)))) . -12392) (undo-tree-id354 . -1) 12393) nil (26037 27412 608294 885000) 0 nil])
([nil nil ((12390 . 12410)) nil (26037 27412 608291 881000) 0 nil])
([nil nil ((12410 . 12411)) nil (26037 27412 608291 171000) 0 nil])
([nil nil ((12411 . 12413)) nil (26037 27412 608290 469000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("        " 0 5 (face org-indent) 5 8 (face org-indent)))) . -12412) (undo-tree-id351 . -1) 12413) nil (26037 27412 608289 619000) 0 nil])
([nil nil ((12412 . 12431)) nil (26037 27412 608288 175000) 0 nil])
([nil nil ((12431 . 12432)) nil (26037 27412 608287 542000) 0 nil])
([nil nil ((12432 . 12433)) nil (26037 27412 608286 866000) 0 nil])
([nil nil ((12433 . 12434)) nil (26037 27412 608286 237000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("          " 0 5 (face org-indent) 5 10 (face org-indent)))) . -12432) (undo-tree-id349 . -1) (#("-" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("            " 0 5 (face org-indent) 5 12 (face org-indent)))) . -12433) (undo-tree-id350 . -1) 12434) nil (26037 27412 608285 91000) 0 nil])
([nil nil ((12432 . 12437)) nil (26037 27412 608282 921000) 0 nil])
([nil nil ((12437 . 12456)) nil (26037 27412 608282 202000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("         " 0 5 (face org-indent) 5 9 (face org-indent)))) . -12455) (undo-tree-id348 . -1) 12456) nil (26037 27412 608281 405000) 0 nil])
([nil nil ((12455 . 12456)) nil (26037 27412 608279 939000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("         " 0 5 (face org-indent) 5 9 (face org-indent)))) . -12455) (undo-tree-id347 . -1) 12456) nil (26037 27412 608278 824000) 0 nil])
([nil nil ((12455 . 12456)) nil (26037 27412 608277 164000) 0 nil])
([nil nil ((12456 . 12457)) nil (26037 27412 608276 491000) 0 nil])
([nil nil ((12457 . 12460) (t 26037 24974 833843 515000)) nil (26037 27412 608275 756000) 0 nil])
([nil nil ((12460 . 12463)) nil (26037 27412 608274 918000) 0 nil])
([nil nil ((12463 . 12482)) nil (26037 27412 608274 142000) 0 nil])
([nil nil ((12482 . 12483)) nil (26037 27412 608273 417000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12494 . 12495) (nil fontified nil 12483 . 12495) (12483 . 12495)) nil (26037 27412 608272 482000) 0 nil])
([nil nil ((12495 . 12496)) nil (26037 27412 608271 469000) 0 nil])
([nil nil ((12496 . 12497)) nil (26037 27412 608270 739000) 0 nil])
([nil nil ((12497 . 12498)) nil (26037 27412 608270 69000) 0 nil])
([nil nil ((12498 . 12502)) nil (26037 27412 608269 394000) 0 nil])
([nil nil ((#("G" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("          " 0 5 (face org-indent) 5 10 (face org-indent)))) . -12499) (undo-tree-id344 . -1) (#("e" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("          " 0 5 (face org-indent) 5 10 (face org-indent)))) . -12500) (undo-tree-id345 . -1) (#("r" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("          " 0 5 (face org-indent) 5 10 (face org-indent)))) . -12501) (undo-tree-id346 . -1) 12502) nil (26037 27412 608268 324000) 0 nil])
([nil nil ((12499 . 12506)) nil (26037 27412 608265 241000) 0 nil])
([nil nil ((12506 . 12509)) nil (26037 27412 608264 601000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("            " 0 5 (face org-indent) 5 12 (face org-indent)))) . -12508) (undo-tree-id343 . -1) 12509) nil (26037 27412 608263 439000) 0 nil])
([nil nil ((12508 . 12513)) nil (26037 27412 608262 80000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("            " 0 5 (face org-indent) 5 12 (face org-indent)))) . -12512) (undo-tree-id342 . -1) 12513) nil (26037 27412 608261 225000) 0 nil])
([nil nil ((12512 . 12527)) nil (26037 27412 608259 843000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("            " 0 5 (face org-indent) 5 12 (face org-indent)))) . -12526) (undo-tree-id341 . -1) 12527) nil (26037 27412 608258 952000) 0 nil])
([nil nil ((12526 . 12533)) nil (26037 27412 608257 581000) 0 nil])
([nil nil ((12495 . 12506)) nil (26037 27412 608256 888000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12501) (undo-tree-id336 . -1) (#("e" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12502) (undo-tree-id337 . -1) (#("c" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12503) (undo-tree-id338 . -1) (#("o" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12504) (undo-tree-id339 . -1) (#("m" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . -12505) (undo-tree-id340 . -1) 12506) nil (26037 27412 608255 131000) 0 nil])
([nil nil ((12501 . 12511)) nil (26037 27412 608250 734000) 0 nil])
([nil nil ((12549 . 12550)) nil (26037 27412 608250 101000) 0 nil])
([nil nil ((12550 . 12551)) nil (26037 27412 608249 431000) 0 nil])
([nil nil ((12483 . 12488)) nil (26037 27412 608248 792000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("          " 0 7 (face org-indent) 7 10 (face org-indent)))) . 12518) (#("	" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("              " 0 7 (face org-indent) 7 14 (face org-indent)))) . 12518)) nil (26037 27412 608247 717000) 0 nil])
([nil nil ((12518 . 12523)) nil (26037 27412 608246 835000) 0 nil])
([nil nil ((12557 . 12558)) nil (26037 27412 608246 109000) 0 nil])
([nil nil ((12558 . 12559)) nil (26037 27412 608245 436000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12558) (undo-tree-id335 . -1) 12559) nil (26037 27412 608244 535000) 0 nil])
([nil nil ((12558 . 12576)) nil (26037 27412 608243 153000) 0 nil])
([nil nil ((#("u" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12574) (undo-tree-id333 . -1) (#("s" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12575) (undo-tree-id334 . -1) 12576) nil (26037 27412 608242 159000) 0 nil])
([nil nil ((12574 . 12586)) nil (26037 27412 608240 73000) 0 nil])
([nil nil ((12586 . 12589)) nil (26037 27412 608239 364000) 0 nil])
([nil nil ((#("g" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12585) (undo-tree-id329 . -1) (#("á" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12586) (undo-tree-id330 . -1) (#("v" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12587) (undo-tree-id331 . -1) (#("e" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12588) (undo-tree-id332 . -1) 12589) nil (26037 27412 608238 224000) 0 nil])
([nil nil ((12585 . 12588)) nil (26037 27412 608234 637000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12586) (undo-tree-id327 . -1) (#("l" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12587) (undo-tree-id328 . -1) 12588) nil (26037 27412 608233 710000) 0 nil])
([nil nil ((12586 . 12589)) nil (26037 27412 608231 576000) 0 nil])
([nil nil ((12589 . 12590)) nil (26037 27412 608230 934000) 0 nil])
([nil nil ((12590 . 12591)) nil (26037 27412 608230 164000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12590) (undo-tree-id326 . -1) 12591) nil (26037 27412 608229 312000) 0 nil])
([nil nil ((12590 . 12598)) nil (26037 27412 608227 777000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12593) (undo-tree-id321 . -1) (#("r" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12594) (undo-tree-id322 . -1) (#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12595) (undo-tree-id323 . -1) (#(":" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12596) (undo-tree-id324 . -1) (#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12597) (undo-tree-id325 . -1) 12598) nil (26037 27412 608226 320000) 0 nil])
([nil nil ((12593 . 12597)) nil (26037 27412 608216 83000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12595) (undo-tree-id319 . -1) (#("T" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12596) (undo-tree-id320 . -1) 12597) nil (26037 27412 608215 17000) 0 nil])
([nil nil ((12595 . 12613)) nil (26037 27412 608212 897000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12611) (undo-tree-id317 . -1) (#("s" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12612) (undo-tree-id318 . -1) 12613) nil (26037 27412 608211 975000) 0 nil])
([nil nil ((12611 . 12621)) nil (26037 27412 608209 870000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12619) (undo-tree-id315 . -1) (#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12620) (undo-tree-id316 . -1) 12621) nil (26037 27412 608208 744000) 0 nil])
([nil nil ((12619 . 12620)) nil (26037 27412 608206 593000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12618) (undo-tree-id313 . -1) (#("r" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12619) (undo-tree-id314 . -1) 12620) nil (26037 27412 608205 635000) 0 nil])
([nil nil ((12618 . 12630)) nil (26037 27412 608203 488000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12627) (undo-tree-id310 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12628) (undo-tree-id311 . -1) (#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12629) (undo-tree-id312 . -1) 12630) nil (26037 27412 608202 447000) 0 nil])
([nil nil ((12627 . 12630)) nil (26037 27412 608199 188000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12628) (undo-tree-id308 . -1) (#("c" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12629) (undo-tree-id309 . -1) 12630) nil (26037 27412 608197 996000) 0 nil])
([nil nil ((12628 . 12634)) nil (26037 27412 608195 668000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12631) (undo-tree-id305 . -1) (#("ó" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12632) (undo-tree-id306 . -1) (#("b" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12633) (undo-tree-id307 . -1) 12634) nil (26037 27412 608194 465000) 0 nil])
([nil nil ((12631 . 12637)) nil (26037 27412 608190 917000) 0 nil])
([nil nil ((12637 . 12638)) nil (26037 27412 608190 275000) 0 nil])
([nil nil ((12638 . 12643)) nil (26037 27412 608189 588000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -12642) (undo-tree-id304 . -1) 12643) nil (26037 27412 608188 679000) 0 nil])
([nil nil ((12642 . 12644)) nil (26037 27412 608187 107000) 0 nil])
([nil nil ((12644 . 12657)) nil (26037 27412 608186 468000) 0 nil])
([nil nil ((12659 . 12660)) nil (26037 27412 608185 590000) 0 nil])
([nil nil ((#("	" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("              " 0 9 (face org-indent) 9 14 (face org-indent)))) . -12658) (undo-tree-id302 . -1) (#("-" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("                " 0 9 (face org-indent) 9 16 (face org-indent)))) . -12659) (undo-tree-id303 . -1) 12660) nil (26037 27412 608184 640000) 0 nil])
([nil nil ((12658 . 12677)) nil (26037 27412 608182 86000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12676) (undo-tree-id301 . -1) 12677) nil (26037 27412 608181 257000) 0 nil])
([nil nil ((12676 . 12679)) nil (26037 27412 608179 745000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12678) (undo-tree-id300 . -1) 12679) nil (26037 27412 608178 901000) 0 nil])
([nil nil ((12678 . 12681)) nil (26037 27412 608177 438000) 0 nil])
([nil nil ((12681 . 12682)) nil (26037 27412 608176 751000) 0 nil])
([nil nil ((12682 . 12689)) nil (26037 27412 608176 40000) 0 nil])
([nil nil ((12689 . 12690)) nil (26037 27412 608175 376000) 0 nil])
([nil nil ((12690 . 12691)) nil (26037 27412 608174 658000) 0 nil])
([nil nil ((12689 . 12697)) nil (26037 27412 608173 938000) 0 nil])
([nil nil ((12697 . 12701)) nil (26037 27412 608173 243000) 0 nil])
([nil nil ((12701 . 12702)) nil (26037 27412 608172 593000) 0 nil])
([nil nil ((12702 . 12723)) nil (26037 27412 608171 891000) 0 nil])
([nil nil ((12723 . 12732)) nil (26037 27412 608171 239000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)))) . -12728) (undo-tree-id296 . -1) (#("l" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)))) . -12729) (undo-tree-id297 . -1) (#("i" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)))) . -12730) (undo-tree-id298 . -1) (#("e" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)))) . -12731) (undo-tree-id299 . -1) 12732) nil (26037 27412 608169 568000) 0 nil])
([nil nil ((12728 . 12733)) nil (26037 27412 608165 842000) 0 nil])
([nil nil ((12733 . 12734)) nil (26037 27412 608165 138000) 0 nil])
([nil nil ((12734 . 12754)) nil (26037 27412 608164 492000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)))) . -12753) (undo-tree-id295 . -1) 12754) nil (26037 27412 608163 617000) 0 nil])
([nil nil ((12753 . 12761)) nil (26037 27412 608162 179000) 0 nil])
([nil nil ((12761 . 12762)) nil (26037 27412 608161 484000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12514 . 12515) (nil fontified nil 12502 . 12515) (12502 . 12515)) nil (26037 27412 608160 693000) 0 nil])
([nil nil ((#(" não indicados" 0 1 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified t rear-nonsticky t face org-level-4) 1 14 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -12514) (undo-tree-id293 . -14) (undo-tree-id294 . -14) 12528) nil (26037 27412 608159 409000) 0 nil])
([nil nil ((12763 . 12764) 12514) nil (26037 27412 608157 203000) 0 nil])
([nil nil ((12516 . 12517) (t 26037 25716 323804 727000)) nil (26037 27412 608156 206000) 0 nil])
([nil nil ((12637 . 12640)) nil (26037 27412 608155 311000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14964 . 14965) (nil fontified nil 14915 . 14965) (nil fontified nil 14895 . 14915) (nil fontified nil 14855 . 14895) (nil fontified nil 14854 . 14855) (nil fontified nil 14727 . 14854) (nil fontified nil 14726 . 14727) (nil fontified nil 14604 . 14726) (nil fontified nil 14603 . 14604) (nil fontified nil 14446 . 14603) (nil fontified nil 14445 . 14446) (nil fontified nil 14197 . 14445) (nil fontified nil 14196 . 14197) (nil fontified nil 14163 . 14196) (nil fontified nil 14162 . 14163) (nil fontified nil 14052 . 14162) (nil fontified nil 14051 . 14052) (nil fontified nil 13919 . 14051) (nil fontified nil 13918 . 13919) (nil fontified nil 13479 . 13918) (nil fontified nil 13478 . 13479) (nil fontified nil 13461 . 13478) (nil fontified nil 13460 . 13461) (nil fontified nil 13349 . 13460) (nil fontified nil 13348 . 13349) (nil fontified nil 13079 . 13348) (nil fontified nil 13078 . 13079) (nil fontified nil 12678 . 13078) (nil fontified nil 12677 . 12678) (nil fontified nil 12640 . 12677) (12640 . 14965)) nil (26037 27412 608153 330000) 0 nil])
([nil nil ((#("1. Gerenciamento manual de ambientes" 0 36 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)) fontified t)) . 12640) (undo-tree-id291 . -36) (undo-tree-id292 . -36)) nil (26037 27412 608147 244000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 12640) (#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 12640)) nil (26037 27412 608145 95000) 0 nil])
([nil nil ((#("Cada ambiente precisa ser configurado e reconfigurado, e temos vários. Deveria ser fácil destruir o pipeline e reconstruí-lo com a mesma facilidade. Se etapas que já são complexas forem executadas manualmente teremos a presença de erros e inconsistências. " 0 256 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -12640) (undo-tree-id289 . -256) (undo-tree-id290 . -256) 12896) nil (26037 27412 608144 72000) 0 nil])
([nil nil ((13054 . 13055)) nil (26037 27412 608142 10000) 0 nil])
([nil nil ((#("***** Deploy manual
resultado: deploy lento
regra: Duas tarefas
1) Escolher a versão do release
2) Click no \"deploy button\"

	
" 0 3 (fontified t face org-hide) 3 4 (fontified t face org-hide) 4 6 (fontified t face org-level-5) 6 19 (fontified t face org-level-5) 19 20 (fontified t) 20 44 (fontified t) 44 64 (fontified t) 64 96 (fontified t) 96 124 (fontified t) 124 125 (fontified t) 125 126 (fontified t) 126 127 (fontified t)) . 14673) (undo-tree-id287 . -127) (undo-tree-id288 . -127) 14800) nil (26037 27412 608141 112000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 12638)) nil (26037 27412 608138 956000) 0 nil])
([nil nil ((12638 . 12639)) nil (26037 27412 608137 935000) 0 nil])
([nil nil ((12639 . 12640)) nil (26037 27412 608137 250000) 0 nil])
([nil nil ((13168 . 13169)) nil (26037 27412 608136 565000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13295 . 13296) (nil fontified nil 13295 . 13296) (nil fontified nil 13294 . 13295) (nil fontified nil 13293 . 13294) (nil fontified nil 13265 . 13293) (nil fontified nil 13233 . 13265) (nil fontified nil 13213 . 13233) (nil fontified nil 13189 . 13213) (nil fontified nil 13188 . 13189) (nil fontified nil 13175 . 13188) (nil fontified nil 13173 . 13175) (nil fontified nil 13172 . 13173) (nil fontified nil 13169 . 13172) (13169 . 13296)) nil (26037 27412 608135 254000) 0 nil])
([nil nil ((#("Todos os ambientes são tratados como código, versionados e criados de maneira automatizada." 0 91 (fontified t)) . 13076) (undo-tree-id285 . -91) (undo-tree-id286 . -91) 13167) nil (26037 27412 608131 932000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12616) (undo-tree-id264 . -1) (#("t" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12617) (undo-tree-id265 . -1) (#("r" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12618) (undo-tree-id266 . -1) (#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12619) (undo-tree-id267 . -1) (#("t" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12620) (undo-tree-id268 . -1) (#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12621) (undo-tree-id269 . -1) (#("d" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12622) (undo-tree-id270 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12623) (undo-tree-id271 . -1) (#("s" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12624) (undo-tree-id272 . -1) (#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12625) (undo-tree-id273 . -1) (#("c" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12626) (undo-tree-id274 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12627) (undo-tree-id275 . -1) (#("m" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12628) (undo-tree-id276 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12629) (undo-tree-id277 . -1) (#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12630) (undo-tree-id278 . -1) (#("c" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12631) (undo-tree-id279 . -1) (#("ó" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12632) (undo-tree-id280 . -1) (#("d" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12633) (undo-tree-id281 . -1) (#("i" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12634) (undo-tree-id282 . -1) (#("g" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12635) (undo-tree-id283 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12636) (undo-tree-id284 . -1) 12637) nil (26037 27412 608127 170000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12597) (undo-tree-id245 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12598) (undo-tree-id246 . -1) (#("d" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12599) (undo-tree-id247 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12600) (undo-tree-id248 . -1) (#("s" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12601) (undo-tree-id249 . -1) (#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12602) (undo-tree-id250 . -1) (#("a" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12603) (undo-tree-id251 . -1) (#("m" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12604) (undo-tree-id252 . -1) (#("b" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12605) (undo-tree-id253 . -1) (#("i" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12606) (undo-tree-id254 . -1) (#("e" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12607) (undo-tree-id255 . -1) (#("n" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12608) (undo-tree-id256 . -1) (#("t" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12609) (undo-tree-id257 . -1) (#("e" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12610) (undo-tree-id258 . -1) (#("s" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12611) (undo-tree-id259 . -1) (#(" " 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12612) (undo-tree-id260 . -1) (#("s" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12613) (undo-tree-id261 . -1) (#("ã" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12614) (undo-tree-id262 . -1) (#("o" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -12615) (undo-tree-id263 . -1) 12616) nil (26037 27412 608108 120000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12687 . 12688) (nil fontified nil 12597 . 12688) (12597 . 12688)) nil (26037 27412 608092 712000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 12691)) nil (26037 27412 608091 579000) 0 nil])
([nil nil ((#("
A regra de ouro é: 
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 1 21 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13106) (undo-tree-id243 . -21) (undo-tree-id244 . -21) 13127) nil (26037 27412 608090 638000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 13105) (undo-tree-id242 . -1)) nil (26037 27412 608088 453000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 13105)) nil (26037 27412 608087 33000) 0 nil])
([nil nil ((#(" apenas duas tarefas devem ser executadas manualmente: escolher a versão do release e o clique em \"deploy buttom." 0 113 (fontified t)) . 13709) (undo-tree-id240 . -113) (undo-tree-id241 . -113) 13822) nil (26037 27412 608086 168000) 0 nil])
([nil nil ((#(" Duas tarefas
1) Escolher a versão do release
2) Click no \"deploy button\"" 0 14 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 14 46 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)) fontified t) 46 73 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)) fontified t)) . 13155) (undo-tree-id238 . -73) (undo-tree-id239 . -73)) nil (26037 27412 608083 446000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13267 . 13268) (nil fontified nil 13155 . 13268) (13155 . 13268)) nil (26037 27412 608081 418000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 13149)) nil (26037 27412 608080 251000) 0 nil])
([nil nil ((13149 . 13150)) nil (26037 27412 608079 586000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13125) (undo-tree-id237 . -1) 13126) nil (26037 27412 608078 629000) 0 nil])
([nil nil ((13125 . 13126)) nil (26037 27412 608077 60000) 0 nil])
([nil nil ((#("	

2. Deploy manual
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("              " 0 9 (face org-indent) 9 14 (face org-indent)) fontified t) 1 2 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("              " 0 9 (face org-indent) 9 14 (face org-indent)) fontified t rear-nonsticky t) 2 3 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 3 20 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("             " 0 9 (face org-indent) 9 13 (face org-indent)) fontified t)) . 13270) (undo-tree-id235 . -20) (undo-tree-id236 . -20)) nil (26037 27412 608076 7000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 13270)) nil (26037 27412 608074 54000) 0 nil])
([nil nil ((#("
A regra de ouro é:
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 1 20 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13709) (undo-tree-id233 . -20) (undo-tree-id234 . -20) 13729) nil (26037 27412 608072 999000) 0 nil])
([nil nil ((13148 . 13154)) nil (26037 27412 608070 661000) 0 nil])
([nil nil ((#("ṕ" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13153) (undo-tree-id232 . -1) 13154) nil (26037 27412 608069 562000) 0 nil])
([nil nil ((13153 . 13166)) nil (26037 27412 608067 843000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13165) (undo-tree-id231 . -1) 13166) nil (26037 27412 608066 824000) 0 nil])
([nil nil ((13160 . 13161)) nil (26037 27412 608065 257000) 0 nil])
([nil nil ((13166 . 13181)) nil (26037 27412 608064 557000) 0 nil])
([nil nil ((13854 . 13860)) nil (26037 27412 608063 911000) 0 nil])
([nil nil ((#("3" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . 13860)) nil (26037 27412 608063 157000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . 13860) (#("." 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . 13860)) nil (26037 27412 608062 371000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 13890)) nil (26037 27412 608061 430000) 0 nil])
([nil nil ((#("é" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("           " 0 9 (face org-indent) 9 11 (face org-indent)) fontified t)) . 14297) (#("o" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("s" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("a" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("c" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("           " 0 9 (face org-indent) 9 11 (face org-indent)) fontified t)) . 14297) (#("e" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("t" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("s" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("e" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("n" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("           " 0 9 (face org-indent) 9 11 (face org-indent)) fontified t)) . 14297) (#("a" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("r" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("g" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("e" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#("r" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297) (#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("           " 0 9 (face org-indent) 9 11 (face org-indent)) fontified t)) . 14297) (#("A" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 14297)) nil (26037 27412 608058 125000) 0 nil])
([nil nil ((14297 . 14302)) nil (26037 27412 608054 328000) 0 nil])
([nil nil ((#("Regra: deployment faz parte do desenvolvimento desde a primeira interação, todos definem um delivery team." 0 5 (fontified t) 5 106 (fontified t)) . 14297) (undo-tree-id229 . -106) (undo-tree-id230 . -106)) nil (26037 27412 608053 493000) 0 nil])
([nil nil ((13890 . 13891)) nil (26037 27412 608051 649000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13995 . 13996) (nil fontified nil 13895 . 13996) (nil fontified nil 13890 . 13895) (13890 . 13996)) nil (26037 27412 608050 853000) 0 nil])
([nil nil ((13996 . 13997)) nil (26037 27412 608049 550000) 0 nil])
([nil nil ((#("


Conhecemos três antipatterns clássicos que atrapalham a agilidade da construção de um projeto confiável. Devemos portanto ter:

Gerenciamento automatizado de ambientes
Deploy automatizado
Deploy frequente em cada ciclo de desenvolvimento

" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 1 2 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 2 3 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 3 130 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 130 131 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 131 171 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 171 191 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 191 221 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 221 240 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 240 241 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t rear-nonsticky t) 241 242 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . -14404) (undo-tree-id227 . -242) (undo-tree-id228 . -242) 14646) nil (26037 27412 608048 588000) 0 nil])
([nil nil ((13890 . 13891) (t 26037 25981 462844 544000)) nil (26037 27412 608046 519000) 0 nil])
([nil nil ((13890 . 13905)) nil (26037 27412 608045 570000) 0 nil])
([nil nil ((#("i" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13902) (undo-tree-id224 . -1) (#("c" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13903) (undo-tree-id225 . -1) (#("a" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13904) (undo-tree-id226 . -1) 13905) nil (26037 27412 608044 45000) 0 nil])
([nil nil ((13902 . 13923)) nil (26037 27412 608041 75000) 0 nil])
([nil nil ((13923 . 13925)) nil (26037 27412 608040 415000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13924) (undo-tree-id223 . -1) 13925) nil (26037 27412 608039 535000) 0 nil])
([nil nil ((13924 . 13929)) nil (26037 27412 608037 993000) 0 nil])
([nil nil ((13929 . 13938)) nil (26037 27412 608037 369000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13937) (undo-tree-id222 . -1) 13938) nil (26037 27412 608036 153000) 0 nil])
([nil nil ((13937 . 13938)) nil (26037 27412 608034 650000) 0 nil])
([nil nil ((#("a" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13937) (undo-tree-id221 . -1) 13938) nil (26037 27412 608033 782000) 0 nil])
([nil nil ((13937 . 13958)) nil (26037 27412 608032 369000) 0 nil])
([nil nil ((13958 . 13963)) nil (26037 27412 608031 663000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13962) (undo-tree-id220 . -1) 13963) nil (26037 27412 608030 894000) 0 nil])
([nil nil ((13962 . 13975)) nil (26037 27412 608029 216000) 0 nil])
([nil nil ((#("g" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13973) (undo-tree-id218 . -1) (#("á" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13974) (undo-tree-id219 . -1) 13975) nil (26037 27412 608028 86000) 0 nil])
([nil nil ((13973 . 13985)) nil (26037 27412 608025 407000) 0 nil])
([nil nil ((#("p" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13983) (undo-tree-id216 . -1) (#("a" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -13984) (undo-tree-id217 . -1) 13985) nil (26037 27412 608024 306000) 0 nil])
([nil nil ((13983 . 13997)) nil (26037 27412 608016 847000) 0 nil])
([nil nil ((13997 . 13998)) nil (26037 27412 608016 218000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 13998)) nil (26037 27412 608015 401000) 0 nil])
([nil nil ((12230 . 12231) (t 26037 26030 761900 604000)) nil (26037 27412 608014 690000) 0 nil])
([nil nil ((#("A diferença entre a entrega contínua e o deploy contínuo é, que no deploy contínuo todas as alterações realmente entra em produção, o tempo todo." 0 1 (fontified t) 1 143 (fontified t) 143 144 (rear-nonsticky t fontified t) 144 145 (fontified t)) . 12086) (undo-tree-id214 . -145) (undo-tree-id215 . -145) 12231) nil (26037 27412 608013 506000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 12086)) nil (26037 27412 608011 482000) 0 nil])
([nil nil ((14367 . 14371)) nil (26037 27412 608010 772000) 0 nil])
([nil nil ((14371 . 14372)) nil (26037 27412 608010 143000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14516 . 14517) (nil fontified nil 14516 . 14517) (nil fontified nil 14515 . 14516) (nil fontified nil 14373 . 14515) (nil fontified nil 14372 . 14373) (14372 . 14517)) nil (26037 27412 608009 210000) 0 nil])
([nil nil ((14371 . 14376)) nil (26037 27412 608007 723000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14370) (undo-tree-id208 . -1) (#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14371) (undo-tree-id209 . -1) (#("n" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14372) (undo-tree-id210 . -1) (#("t" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14373) (undo-tree-id211 . -1) (#("r" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14374) (undo-tree-id212 . -1) (#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14375) (undo-tree-id213 . -1) 14376) nil (26037 27412 608006 2000) 0 nil])
([nil nil ((14370 . 14371)) nil (26037 27412 608000 843000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14406 . 14407) (nil fontified nil 14371 . 14407) (14371 . 14407)) nil (26037 27412 608000 49000) 0 nil])
([nil nil ((#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14371)) nil (26037 27412 607998 917000) 0 nil])
([nil nil ((14371 . 14372)) nil (26037 27412 607997 867000) 0 nil])
([nil current ((#("o" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14388) (#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14388) (#("e" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14388)) nil (26037 27426 625195 849000) 0 nil])
([nil nil ((14388 . 14389)) ((#("x" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14388) (undo-tree-id807 . -1)) (26037 27426 592998 991000) 0 nil])
([nil nil ((#("x" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14388) (undo-tree-id207 . -1) 14389) ((14388 . 14389)) (26037 27426 559155 223000) 0 nil])
([nil nil ((14388 . 14390)) ((#("cs" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3) 1 2 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14388) (undo-tree-id806 . -2)) (26037 27426 525427 94000) 0 nil])
([nil nil ((#("c" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14388) (undo-tree-id205 . -1) (#("s" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . -14389) (undo-tree-id206 . -1) 14390) ((14388 . 14390)) (26037 27426 491695 534000) 0 nil])
([nil nil ((14388 . 14390)) ((#("vs" 0 2 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14388)) (26037 27426 453780 808000) 0 nil])
([nil nil ((#("d" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14391)) ((14391 . 14392)) (26037 27426 422269 70000) 0 nil])
([nil nil ((14391 . 14392)) ((#("D" 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 14391) (undo-tree-id805 . -1)) (26037 27426 393404 386000) 0 nil])
([nil nil ((14552 . 14553) 14392) ((#("
" 0 1 (fontified t line-prefix #("      " 0 5 (face org-indent)) wrap-prefix #("      " 0 5 (face org-indent) 5 6 (face org-indent)))) . 14552) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1)) (26037 27426 352664 173000) 0 nil])
([nil nil ((14553 . 14564) (t 26037 26160 627396 311000)) ((#("**** Pergut" 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide) 3 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 5 10 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 10 11 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 14553) (undo-tree-id769 . -10) (undo-tree-id770 . -10) (undo-tree-id771 . -10) (undo-tree-id772 . -10) (undo-tree-id773 . -10) (undo-tree-id774 . -10) (undo-tree-id775 . -10) (undo-tree-id776 . -10) (undo-tree-id777 . -10) (undo-tree-id778 . -10) (undo-tree-id779 . -10) (undo-tree-id780 . -10) (undo-tree-id781 . -10) (undo-tree-id782 . -10) (undo-tree-id783 . -10) (undo-tree-id784 . -10) (undo-tree-id785 . -10) (undo-tree-id786 . -11)) (26037 27426 338894 823000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14563) (undo-tree-id204 . -1) 14564) ((14563 . 14564)) (26037 27426 289993 190000) 0 nil])
([nil nil ((14563 . 14575)) ((#("nta da Aluna" 0 10 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 10 11 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 11 12 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 14563) (undo-tree-id751 . -10) (undo-tree-id752 . -10) (undo-tree-id753 . -10) (undo-tree-id754 . -10) (undo-tree-id755 . -10) (undo-tree-id756 . -10) (undo-tree-id757 . -10) (undo-tree-id758 . -10) (undo-tree-id759 . -10) (undo-tree-id760 . -10) (undo-tree-id761 . -10) (undo-tree-id762 . -10) (undo-tree-id763 . -10) (undo-tree-id764 . -10) (undo-tree-id765 . -10) (undo-tree-id766 . -10) (undo-tree-id767 . -10) (undo-tree-id768 . -12)) (26037 27425 790377 305000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14573) (undo-tree-id202 . -1) (#("a" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -14574) (undo-tree-id203 . -1) 14575) ((14573 . 14575)) (26037 27425 107958 773000) 0 nil])
([nil nil ((14573 . 14578)) ((#("ra im" 0 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 14573) (undo-tree-id733 . -5) (undo-tree-id734 . -5) (undo-tree-id735 . -5) (undo-tree-id736 . -5) (undo-tree-id737 . -5) (undo-tree-id738 . -5) (undo-tree-id739 . -5) (undo-tree-id740 . -5) (undo-tree-id741 . -5) (undo-tree-id742 . -5) (undo-tree-id743 . -5) (undo-tree-id744 . -5) (undo-tree-id745 . -5) (undo-tree-id746 . -5) (undo-tree-id747 . -5) (undo-tree-id748 . -5) (undo-tree-id749 . -5) (undo-tree-id750 . -5)) (26037 27425 80119 556000) 0 nil])
([nil nil ((14578 . 14588)) ((#("portante: " 0 10 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 14578) (undo-tree-id715 . -10) (undo-tree-id716 . -10) (undo-tree-id717 . -10) (undo-tree-id718 . -10) (undo-tree-id719 . -10) (undo-tree-id720 . -10) (undo-tree-id721 . -10) (undo-tree-id722 . -10) (undo-tree-id723 . -10) (undo-tree-id724 . -10) (undo-tree-id725 . -10) (undo-tree-id726 . -10) (undo-tree-id727 . -10) (undo-tree-id728 . -10) (undo-tree-id729 . -10) (undo-tree-id730 . -10) (undo-tree-id731 . -10) (undo-tree-id732 . -10)) (26037 27425 46311 693000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14647 . 14648) (nil fontified nil 14588 . 14648) (14588 . 14648)) ((#("Qual é a diferença entre entrega contínua e deploy contínuo?" 0 59 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil face org-level-4) 59 60 (line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) fontified nil rear-nonsticky nil face org-level-4)) . 14588) (undo-tree-id698 . -60) (undo-tree-id699 . -60) (undo-tree-id700 . -60) (undo-tree-id701 . -60) (undo-tree-id702 . -60) (undo-tree-id703 . -60) (undo-tree-id704 . -60) (undo-tree-id705 . -60) (undo-tree-id706 . -60) (undo-tree-id707 . -60) (undo-tree-id708 . -60) (undo-tree-id709 . -60) (undo-tree-id710 . -60) (undo-tree-id711 . -60) (undo-tree-id712 . -60) (undo-tree-id713 . -60) (undo-tree-id714 . -60) (nil rear-nonsticky t 14647 . 14648)) (26037 27425 15008 643000) 0 nil])
([nil nil ((14648 . 14649)) ((#("
" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)))) . 14648) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1)) (26037 27424 986438 414000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15495 . 15496) (nil fontified nil 15257 . 15496) (nil fontified nil 15256 . 15257) (nil fontified nil 15255 . 15256) (nil fontified nil 15197 . 15255) (nil fontified nil 15177 . 15197) (nil fontified nil 15176 . 15177) (nil fontified nil 14939 . 15176) (nil fontified nil 14938 . 14939) (nil fontified nil 14937 . 14938) (nil fontified nil 14799 . 14937) (nil fontified nil 14779 . 14799) (nil fontified nil 14778 . 14779) (nil fontified nil 14777 . 14778) (nil fontified nil 14649 . 14777) (14649 . 15496)) ((#("A entrega contínua é totalmente automatizada, sem nenhuma aprovação humana, e o deploy contínuo depende de uma aprovação humana


Alternativa correta
No deploy contínuo, todas alterações entram em produção, sem nenhuma aprovação humana. A entrega contínua depende de uma aprovação humana


Alternativa correta! O importante é que, na entrega contínua, as alterações não entrem em produção automaticamente, pois existe um motivo de negócio (marketing, por exemplo). Tecnicamente, não existe nenhuma razão para reter alterações.

Alternativa correta
Nenhuma, ambos são especializações da integração contínua


Alternativa errada! Ambos têm a integração contínua como base, mas a diferença é que na entrega contínua, o software será publicado apenas diante da liberação humana. No deploy contínuo, todas alterações entram automaticamente em produção." 0 127 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 127 128 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 128 129 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 129 130 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 130 149 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 149 150 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 150 287 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 287 288 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 288 289 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 289 290 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 290 500 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 500 527 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 527 528 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 528 547 (fontified nil line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent))) 547 548 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 548 605 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 605 606 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 606 607 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 607 608 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 608 846 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 846 847 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil rear-nonsticky nil)) . 14649) (undo-tree-id666 . -847) (undo-tree-id667 . -128) (undo-tree-id668 . -128) (undo-tree-id669 . -527) (undo-tree-id670 . -847) (undo-tree-id671 . -847) (undo-tree-id672 . -847) (undo-tree-id673 . -847) (undo-tree-id674 . -847) (undo-tree-id675 . -847) (undo-tree-id676 . -847) (undo-tree-id677 . -847) (undo-tree-id678 . -847) (undo-tree-id679 . -847) (undo-tree-id680 . -847) (nil fontified t 14776 . 14777) (nil fontified t 14649 . 14776) (nil fontified t 14777 . 14778) (nil fontified t 14778 . 14779) (nil fontified t 14798 . 14799) (nil fontified t 14779 . 14798) (nil fontified t 14936 . 14937) (nil fontified t 14799 . 14936) (nil fontified t 14937 . 14938) (nil fontified t 14938 . 14939) (nil fontified t 15149 . 15176) (nil fontified t 14939 . 15149) (nil fontified t 15176 . 15177) (nil fontified t 15196 . 15197) (nil fontified t 15177 . 15196) (nil fontified t 15254 . 15255) (nil fontified t 15197 . 15254) (nil fontified t 15255 . 15256) (nil fontified t 15256 . 15257) (nil rear-nonsticky t 15495 . 15496)) (26037 27424 952948 293000) 0 nil])
([nil nil ((14649 . 14654)) ((#("**** " 0 3 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-hide) 3 4 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 4 5 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 14649) (undo-tree-id665 . -4)) (26037 27424 452445 991000) 0 nil])
([nil nil ((14653 . 14654)) ((#("*" 0 1 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5)) . 14653)) (26037 27423 808785 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14980 . 14981) (nil fontified nil 14783 . 14981) (14783 . 14981)) ((#("Alternativa errada! É justamente contrário: na entrega contínua, o software será publicado apenas diante da liberação humana. No deploy contínuo, todas alterações entram automaticamente em produção." 0 197 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified nil) 197 198 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified nil rear-nonsticky nil)) . 14783) (undo-tree-id664 . -198) (nil rear-nonsticky t 14980 . 14981)) (26037 27423 308027 141000) 0 nil])
([nil nil ((#("

Alternativa correta" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 1 2 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t) 2 21 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -14981) (undo-tree-id200 . -21) (undo-tree-id201 . -21) 15002) ((14981 . 15002)) (26037 27422 759061 956000) 0 nil])
([nil nil ((14982 . 14988)) ((#("***** " 0 4 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-hide) 4 6 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . 14982)) (26037 27422 725267 795000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 15126) (#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 15126)) ((15126 . 15127) (15126 . 15127)) (26037 27422 691174 999000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . -15363) (undo-tree-id198 . -1) (undo-tree-id199 . -1) 15364) ((15363 . 15364)) (26037 27422 658157 122000) 0 nil])
([nil nil ((#("Alternativa correta" 0 19 (fontified t)) . 15363) (undo-tree-id196 . -19) (undo-tree-id197 . -19) 15382) ((15363 . 15382)) (26037 27422 622627 678000) 0 nil])
([nil nil ((15363 . 15368)) ((#("*****" 0 4 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t) 4 5 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t face (bold) font-lock-multiline t org-emphasis t)) . 15363) (undo-tree-id663 . -5)) (26037 27422 585670 896000) 0 nil])
([nil nil ((15368 . 15369)) ((#(" " 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t face org-level-5)) . 15368) (undo-tree-id662 . -1)) (26037 27422 556039 263000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) fontified t)) . 15369)) ((15369 . 15370)) (26037 27422 524491 215000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 15427) (#("
" 0 1 (line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) fontified t)) . 15427)) ((15427 . 15428) (15427 . 15428)) (26037 27422 488134 684000) 0 nil])
([nil nil ((15666 . 15667) 15427) ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 15666) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1)) (26037 27422 456879 410000) 0 nil])
([nil nil ((15667 . 15673) (t 26037 26311 808073 206000)) ((#("***** " 0 3 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-hide) 3 4 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-hide) 4 5 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5) 5 6 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5)) . 15667) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -6)) (26037 27422 424874 829000) 0 nil])
([nil nil ((#("*" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)) face (bold) font-lock-multiline t org-emphasis t)) . -15671) (undo-tree-id194 . -1) (#(" " 0 1 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5)) . -15672) (undo-tree-id195 . -1) 15673) ((15671 . 15673)) (26037 27422 390960 382000) 0 nil])
([nil nil ((15671 . 15680)) ((#(" melhor r" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 1 8 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 8 9 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 15671) (undo-tree-id631 . -8) (undo-tree-id632 . -8) (undo-tree-id633 . -8) (undo-tree-id634 . -8) (undo-tree-id635 . -8) (undo-tree-id636 . -8) (undo-tree-id637 . -8) (undo-tree-id638 . -8) (undo-tree-id639 . -9)) (26037 27422 357865 60000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . -15679) (undo-tree-id193 . -1) 15680) ((15679 . 15680)) (26037 27422 324235 316000) 0 nil])
([nil nil ((15679 . 15686)) ((#("dizendo" 0 7 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 15679) (undo-tree-id623 . -7) (undo-tree-id624 . -7) (undo-tree-id625 . -7) (undo-tree-id626 . -7) (undo-tree-id627 . -7) (undo-tree-id628 . -7) (undo-tree-id629 . -7) (undo-tree-id630 . -7)) (26037 27422 290548 641000) 0 nil])
([nil nil ((15686 . 15687)) ((#("
" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)))) . 15686) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1)) (26037 27422 258699 190000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15741 . 15742) (nil fontified nil 15687 . 15742) (15687 . 15742)) ((#("O Deploy Contínuo coloca qualquer alteração em produção" 0 54 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 54 55 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil rear-nonsticky nil)) . 15687) (undo-tree-id608 . -55) (undo-tree-id609 . -55) (undo-tree-id610 . -55) (undo-tree-id611 . -55) (undo-tree-id612 . -55) (undo-tree-id613 . -55) (undo-tree-id614 . -55) (nil rear-nonsticky t 15741 . 15742)) (26037 27422 227301 243000) 0 nil])
([nil nil ((15742 . 15743)) ((#("
" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 15742) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1)) (26037 27422 187013 142000) 0 nil])
([nil nil ((15743 . 15757) (t 26037 26557 462051 764000)) ((#("** Fundamentos" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide) 1 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 3 14 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 15743) (undo-tree-id595 . -14) (undo-tree-id596 . -14) (undo-tree-id597 . -14) (undo-tree-id598 . -14) (undo-tree-id599 . -14) (undo-tree-id600 . -14)) (26037 27422 147474 461000) 0 nil])
([nil nil ((15757 . 15758) 12287) ((#("
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15757) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1)) (26037 27422 104640 268000) 0 nil])
([nil nil ((2757 . 2759) (t 26037 26581 409488 558000)) ((#("

" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2757)) (26037 27422 67958 19000) 0 nil])
([nil nil ((2628 . 2629)) ((#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628)) (26037 27422 35940 41000) 0 nil])
([nil nil ((2628 . 2646)) ((#("Não é só porque vc" 0 17 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 17 18 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628) (undo-tree-id588 . -18)) (26037 27422 7802 619000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2645) (undo-tree-id192 . -1) 2646) ((2645 . 2646)) (26037 27421 972912 986000) 0 nil])
([nil nil ((2645 . 2649)) ((#("ocÊ " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 2 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 3 4 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2645) (undo-tree-id587 . -4)) (26037 27421 941949 320000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2646) (undo-tree-id189 . -1) (#("Ê" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2647) (undo-tree-id190 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2648) (undo-tree-id191 . -1) 2649) ((2646 . 2649)) (26037 27421 909389 432000) 0 nil])
([nil nil ((2646 . 2651)) ((#("cê su" 0 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 3 4 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 4 5 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2646) (undo-tree-id586 . -5)) (26037 27421 874694 282000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2649) (undo-tree-id187 . -1) (#("u" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2650) (undo-tree-id188 . -1) 2651) ((2649 . 2651)) (26037 27421 840903 234000) 0 nil])
([nil nil ((2649 . 2669)) ((#("usa Jenkins que voce" 0 19 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 19 20 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2649) (undo-tree-id585 . -20)) (26037 27421 810361 4000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2668) (undo-tree-id186 . -1) 2669) ((2668 . 2669)) (26037 27421 778014 251000) 0 nil])
([nil nil ((2668 . 2681)) ((#("ê faz integra" 0 13 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2668) (undo-tree-id584 . -13)) (26037 27421 747760 250000) 0 nil])
([nil nil ((2681 . 2694)) ((#("ção contínua." 0 13 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2681) (undo-tree-id583 . -13)) (26037 27421 728248 480000) 0 nil])
([nil nil ((2694 . 2695)) ((#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2694)) (26037 27421 724739 261000) 0 nil])
([nil nil ((2694 . 2695) (t 26037 27012 787807 508000)) ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2694) (undo-tree-id582 . -1)) (26037 27421 657546 310000) 0 nil])
([nil nil ((2695 . 2716)) ((#("(AP: Não é porque o J" 0 21 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2695) (undo-tree-id581 . -21)) (26037 27421 624270 948000) 0 nil])
([nil nil ((2716 . 2721)) ((#("enkis" 0 4 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 4 5 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2716) (undo-tree-id580 . -5)) (26037 27421 589786 608000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2720) (undo-tree-id185 . -1) 2721) ((2720 . 2721)) (26037 27421 553899 485000) 0 nil])
([nil nil ((2720 . 2729)) ((#("ns est'an" 0 6 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 6 7 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 7 8 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 8 9 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2720) (undo-tree-id579 . -9)) (26037 27421 518603 174000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2726) (undo-tree-id182 . -1) (#("a" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2727) (undo-tree-id183 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . -2728) (undo-tree-id184 . -1) 2729) ((2726 . 2729)) (26037 27421 484518 292000) 0 nil])
([nil nil ((2726 . 2728)) ((#("á " 0 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2726) (undo-tree-id578 . -2)) (26037 27421 455669 665000) 0 nil])
([nil nil ((2728 . 2731)) ((#("no " 0 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2728)) (26037 27421 423654 309000) 0 nil])
([nil nil ((#("Não é só porque você usa Jenkins que você faz integração contínua. (AP: Não é porque o Jenkins está no " 0 103 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628) (undo-tree-id180 . -103) (undo-tree-id181 . -103)) ((2628 . 2731)) (26037 27421 388209 323000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628) (#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628)) ((2628 . 2629) (2628 . 2629)) (26037 27421 360003 703000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15853 . 15854) (nil fontified nil 15760 . 15854) (15760 . 15854) (t 26037 27151 504822 467000)) ((#("Entregar software com alta qualidade e grande valor, de maneira eficiente, rápida e confiável\"" 0 93 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 93 94 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 15760) (undo-tree-id572 . -94) (undo-tree-id573 . -94) (undo-tree-id574 . -94) (undo-tree-id575 . -94) (undo-tree-id576 . -94) (undo-tree-id577 . -94) (nil rear-nonsticky t 15853 . 15854)) (26037 27421 321210 565000) 0 nil])
([nil nil ((15854 . 15855)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15854) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1)) (26037 27421 290252 813000) 0 nil])
([nil nil ((15855 . 15875)) ((#("A meta da integração" 0 19 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 19 20 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15855) (undo-tree-id560 . -19) (undo-tree-id561 . -19) (undo-tree-id562 . -19) (undo-tree-id563 . -19) (undo-tree-id564 . -19) (undo-tree-id565 . -20)) (26037 27421 254963 806000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -15874) (undo-tree-id179 . -1) 15875) ((15874 . 15875)) (26037 27421 222410 495000) 0 nil])
([nil nil ((15874 . 15878)) ((#("o có" 0 3 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 3 4 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15874) (undo-tree-id554 . -3) (undo-tree-id555 . -3) (undo-tree-id556 . -3) (undo-tree-id557 . -3) (undo-tree-id558 . -3) (undo-tree-id559 . -4)) (26037 27421 189242 487000) 0 nil])
([nil nil ((#("ó" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -15877) (undo-tree-id178 . -1) 15878) ((15877 . 15878)) (26037 27421 156239 388000) 0 nil])
([nil nil ((15877 . 15898)) ((#("ontínua é colocar coi" 0 21 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15877) (undo-tree-id548 . -21) (undo-tree-id549 . -21) (undo-tree-id550 . -21) (undo-tree-id551 . -21) (undo-tree-id552 . -21) (undo-tree-id553 . -21)) (26037 27421 122906 849000) 0 nil])
([nil nil ((15898 . 15902)) ((#("sa e" 0 4 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15898) (undo-tree-id542 . -4) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4)) (26037 27421 89667 296000) 0 nil])
([nil nil ((15902 . 15910)) ((#("m proodd" 0 5 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 5 6 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 6 7 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 7 8 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15902) (undo-tree-id536 . -5) (undo-tree-id537 . -5) (undo-tree-id538 . -5) (undo-tree-id539 . -5) (undo-tree-id540 . -5) (undo-tree-id541 . -8)) (26037 27421 57691 95000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -15907) (undo-tree-id175 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -15908) (undo-tree-id176 . -1) (#("d" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -15909) (undo-tree-id177 . -1) 15910) ((15907 . 15910)) (26037 27421 24379 745000) 0 nil])
([nil nil ((15907 . 15912)) ((#("duçã." 0 4 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 4 5 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15907) (undo-tree-id530 . -4) (undo-tree-id531 . -4) (undo-tree-id532 . -4) (undo-tree-id533 . -4) (undo-tree-id534 . -4) (undo-tree-id535 . -5)) (26037 27420 988828 668000) 0 nil])
([nil nil ((#("." 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . -15911) (undo-tree-id174 . -1) 15912) ((15911 . 15912)) (26037 27420 951094 202000) 0 nil])
([nil nil ((15911 . 15913)) ((#("o." 0 2 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15911) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2)) (26037 27420 920996 846000) 0 nil])
([nil nil ((15913 . 15914)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15913) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1)) (26037 27420 890003 571000) 0 nil])
([nil nil ((15855 . 15856) (t 26037 27213 807494 878000)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15855)) (26037 27420 856542 701000) 0 nil])
([nil nil ((15915 . 15917) (t 26037 27216 223443 540000)) ((#("

" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15915) (undo-tree-id513 . -1) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -1) (undo-tree-id518 . -2)) (26037 27420 830499 580000) 0 nil])
([nil nil ((nil rear-nonsticky nil 16551 . 16552) (nil fontified nil 16551 . 16552) (nil fontified nil 16524 . 16551) (nil fontified nil 16523 . 16524) (nil fontified nil 16500 . 16523) (nil fontified nil 16499 . 16500) (nil fontified nil 16482 . 16499) (nil fontified nil 16481 . 16482) (nil fontified nil 16469 . 16481) (nil fontified nil 16468 . 16469) (nil fontified nil 16452 . 16468) (nil fontified nil 16451 . 16452) (nil fontified nil 16437 . 16451) (nil fontified nil 16436 . 16437) (nil fontified nil 16385 . 16436) (nil fontified nil 16384 . 16385) (nil fontified nil 16220 . 16384) (nil fontified nil 16219 . 16220) (nil fontified nil 16124 . 16219) (nil fontified nil 16123 . 16124) (nil fontified nil 16073 . 16123) (nil fontified nil 16072 . 16073) (nil fontified nil 15917 . 16072) (15917 . 16552)) ((#("Definimos rapidamente a integração contínua, etapa essencial para se chegar até a entrega contínua. Mas quais são os princípios que norteiam esta prática?

Podemos definir a entrega contínua como o ato de>

Entregar software com alta qualidade e grande valor, de maneira eficiente, rápida e confiável\"

A métrica principal é o software executável que satisfaz o cliente. O deploy não deve ser algo complexo ou extraordinário, sim algo simples,fácil e de baixo risco.

Vejamos os princípios básicos da entrega contínua:

I. Automatize

*II. Versione *

III. Repita

V. Defina \"done\"

VI. Crie delivery team

VII. Use melhoria contínua

" 0 155 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 155 156 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 156 205 (fontified nil line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 205 206 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 206 207 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 207 302 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 302 303 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 303 467 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 467 468 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 468 500 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 500 519 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 519 520 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 520 533 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 533 534 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 534 535 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 535 551 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 551 552 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 552 564 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 564 565 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 565 582 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 582 583 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 583 606 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 606 607 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 607 634 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 634 635 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 15917) (undo-tree-id510 . -207) (undo-tree-id511 . -156) (undo-tree-id512 . -205) (nil fontified t 15917 . 16072) (nil fontified t 16072 . 16073) (nil fontified t 16122 . 16123) (nil fontified t 16073 . 16122) (nil fontified t 16123 . 16124) (nil fontified t 16124 . 16219) (nil fontified t 16219 . 16220) (nil fontified t 16220 . 16384) (nil fontified t 16384 . 16385) (nil fontified t 16417 . 16436) (nil fontified t 16385 . 16417) (nil fontified t 16436 . 16437) (nil fontified t 16450 . 16451) (nil fontified t 16437 . 16450) (nil fontified t 16451 . 16452) (nil fontified t 16452 . 16468) (nil fontified t 16468 . 16469) (nil fontified t 16469 . 16481) (nil fontified t 16481 . 16482) (nil fontified t 16482 . 16499) (nil fontified t 16499 . 16500) (nil fontified t 16500 . 16523) (nil fontified t 16523 . 16524) (nil fontified t 16524 . 16551) (nil rear-nonsticky t 16551 . 16552)) (26037 27420 789591 786000) 0 nil])
([nil nil ((#("Podemos definir a entrega contínua como o ato de>" 0 49 (fontified t)) . 16073) (undo-tree-id172 . -49) (undo-tree-id173 . -49) 16122) ((16073 . 16122)) (26037 27420 755962 623000) 0 nil])
([nil nil ((15760 . 15761)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15760)) (26037 27420 722790 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 15808 . 15809) (nil fontified nil 15760 . 15809) (15760 . 15809)) ((#("Podemos definir a entrega contínua como o ato de>" 0 48 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 48 49 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 15760) (undo-tree-id509 . -49) (nil rear-nonsticky t 15808 . 15809)) (26037 27420 689759 41000) 0 nil])
([nil nil ((#(">" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t rear-nonsticky t)) . -15808) (undo-tree-id171 . -1) 15809) ((15808 . 15809)) (26037 27420 657702 787000) 0 nil])
([nil nil ((15808 . 15810)) ((#(": " 0 2 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15808) (undo-tree-id508 . -2)) (26037 27420 623773 525000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15810)) ((15810 . 15811)) (26037 27420 590204 937000) 0 nil])
([nil nil ((15810 . 15811)) ((#("\"" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15810)) (26037 27420 557197 467000) 0 nil])
([nil nil ((15966 . 15967)) ((#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)))) . 15966)) (26037 27420 524711 433000) 0 nil])
([nil nil ((#("
Definimos rapidamente a integração contínua, etapa essencial para se chegar até a entrega contínua. Mas quais são os princípios que norteiam esta prática?
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 1 156 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -15968) (undo-tree-id168 . -156) (undo-tree-id169 . -1) (undo-tree-id170 . -156) 16124) ((15968 . 16124)) (26037 27420 488290 371000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968) (#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968) (undo-tree-id167 . -1)) ((15968 . 15969) (15968 . 15969)) (26037 27420 451937 768000) 0 nil])
([nil nil ((#("
Entregar software com alta qualidade e grande valor, de maneira eficiente, rápida e confiável\"
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 1 96 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . -15968) (undo-tree-id164 . -96) (undo-tree-id165 . -1) (undo-tree-id166 . -96) 16064) ((15968 . 16064)) (26037 27420 417664 124000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968)) ((15968 . 15969)) (26037 27420 386522 793000) 0 nil])
([nil nil ((16185 . 16189)) ((#("*** " 0 2 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-hide) 2 4 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 16185)) (26037 27420 359170 650000) 0 nil])
([nil nil ((#("*** " 0 2 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-hide) 2 4 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t face org-level-3)) . 16185) (t 26037 27347 864660 395000)) ((16185 . 16189)) (26037 27420 322679 712000) 0 nil])
([nil nil ((15968 . 15969)) ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968)) (26037 27420 292706 132000) 0 nil])
([nil nil ((15968 . 16064)) ((#("
Entregar software com alta qualidade e grande valor, de maneira eficiente, rápida e confiável\"
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t) 1 96 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968) (undo-tree-id507 . -1)) (26037 27420 257743 460000) 0 nil])
([nil nil ((15968 . 15969) (15968 . 15969)) ((#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil)) . 15968) (#("
" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968) (undo-tree-id506 . -1)) (26037 27420 223700 151000) 0 nil])
([nil nil ((15968 . 16124)) ((#("
Definimos rapidamente a integração contínua, etapa essencial para se chegar até a entrega contínua. Mas quais são os princípios que norteiam esta prática?
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 1 156 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15968) (undo-tree-id505 . -1)) (26037 27420 189866 763000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("     " 0 3 (face org-indent) 3 5 (face org-indent)))) . 15966)) ((15966 . 15967)) (26037 27420 156950 795000) 0 nil])
([nil nil ((#("\"" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15810)) ((15810 . 15811)) (26037 27420 123420 523000) 0 nil])
([nil nil ((15810 . 15811)) ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15810)) (26037 27420 89580 449000) 0 nil])
([nil nil ((#(": " 0 2 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t)) . 15808) (undo-tree-id163 . -2)) ((15808 . 15810)) (26037 27420 57273 385000) 0 nil])
([nil nil ((15808 . 15809)) ((#(">" 0 1 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified t rear-nonsticky t)) . 15808)) (26037 27420 22700 239000) 0 nil])
([nil nil ((#("Podemos definir a entrega contínua como o ato de>" 0 48 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 48 49 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 15760) (undo-tree-id162 . -49) (nil rear-nonsticky t 15808 . 15809)) ((nil rear-nonsticky nil 15808 . 15809) (15760 . 15809)) (26037 27419 989119 901000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15760)) ((15760 . 15761)) (26037 27419 954938 607000) 0 nil])
([nil nil ((16073 . 16122)) ((#("Podemos definir a entrega contínua como o ato de>" 0 49 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 16073)) (26037 27419 924818 926000) 0 nil])
([nil nil ((#("Definimos rapidamente a integração contínua, etapa essencial para se chegar até a entrega contínua. Mas quais são os princípios que norteiam esta prática?

Podemos definir a entrega contínua como o ato de>

Entregar software com alta qualidade e grande valor, de maneira eficiente, rápida e confiável\"

A métrica principal é o software executável que satisfaz o cliente. O deploy não deve ser algo complexo ou extraordinário, sim algo simples,fácil e de baixo risco.

Vejamos os princípios básicos da entrega contínua:

I. Automatize

*II. Versione *

III. Repita

V. Defina \"done\"

VI. Crie delivery team

VII. Use melhoria contínua

" 0 155 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 155 156 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 156 205 (fontified nil line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 205 206 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 206 207 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 207 302 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 302 303 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 303 467 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 467 468 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 468 500 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 500 519 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 519 520 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 520 533 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 533 534 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 534 535 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 535 551 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 551 552 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 552 564 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 564 565 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 565 582 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 582 583 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 583 606 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 606 607 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 607 634 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 634 635 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 15917) (undo-tree-id159 . -205) (undo-tree-id160 . -207) (undo-tree-id161 . -156) (nil fontified t 15917 . 16072) (nil fontified t 16072 . 16073) (nil fontified t 16122 . 16123) (nil fontified t 16073 . 16122) (nil fontified t 16123 . 16124) (nil fontified t 16124 . 16219) (nil fontified t 16219 . 16220) (nil fontified t 16220 . 16384) (nil fontified t 16384 . 16385) (nil fontified t 16417 . 16436) (nil fontified t 16385 . 16417) (nil fontified t 16436 . 16437) (nil fontified t 16450 . 16451) (nil fontified t 16437 . 16450) (nil fontified t 16451 . 16452) (nil fontified t 16452 . 16468) (nil fontified t 16468 . 16469) (nil fontified t 16469 . 16481) (nil fontified t 16481 . 16482) (nil fontified t 16482 . 16499) (nil fontified t 16499 . 16500) (nil fontified t 16500 . 16523) (nil fontified t 16523 . 16524) (nil fontified t 16524 . 16551) (nil rear-nonsticky t 16551 . 16552)) ((nil rear-nonsticky nil 16551 . 16552) (nil fontified nil 16524 . 16551) (nil fontified nil 16523 . 16524) (nil fontified nil 16500 . 16523) (nil fontified nil 16499 . 16500) (nil fontified nil 16482 . 16499) (nil fontified nil 16481 . 16482) (nil fontified nil 16469 . 16481) (nil fontified nil 16468 . 16469) (nil fontified nil 16452 . 16468) (nil fontified nil 16451 . 16452) (nil fontified nil 16437 . 16450) (nil fontified nil 16450 . 16451) (nil fontified nil 16436 . 16437) (nil fontified nil 16385 . 16417) (nil fontified nil 16417 . 16436) (nil fontified nil 16384 . 16385) (nil fontified nil 16220 . 16384) (nil fontified nil 16219 . 16220) (nil fontified nil 16124 . 16219) (nil fontified nil 16123 . 16124) (nil fontified nil 16073 . 16122) (nil fontified nil 16122 . 16123) (nil fontified nil 16072 . 16073) (nil fontified nil 15917 . 16072) (15917 . 16552)) (26037 27419 888003 202000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15915) (undo-tree-id153 . -1) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -1)) ((15915 . 15917)) (26037 27419 851031 433000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15855)) ((15855 . 15856)) (26037 27419 817936 893000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15913) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1)) ((15913 . 15914)) (26037 27419 784115 485000) 0 nil])
([nil nil ((#("o." 0 2 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15911) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2)) ((15911 . 15913)) (26037 27419 753998 175000) 0 nil])
([nil nil ((15911 . 15912)) ((#("." 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15911)) (26037 27419 724823 72000) 0 nil])
([nil nil ((#("duçã." 0 4 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 4 5 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15907) (undo-tree-id136 . -4) (undo-tree-id137 . -5) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4)) ((15907 . 15912)) (26037 27419 689916 815000) 0 nil])
([nil nil ((15907 . 15910)) ((#("odd" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 1 2 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 2 3 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15907)) (26037 27419 656450 899000) 0 nil])
([nil nil ((#("m proodd" 0 5 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 5 6 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 6 7 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 7 8 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15902) (undo-tree-id130 . -5) (undo-tree-id131 . -8) (undo-tree-id132 . -5) (undo-tree-id133 . -5) (undo-tree-id134 . -5) (undo-tree-id135 . -5)) ((15902 . 15910)) (26037 27419 623657 114000) 0 nil])
([nil nil ((#("sa e" 0 4 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15898) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4)) ((15898 . 15902)) (26037 27419 589712 474000) 0 nil])
([nil nil ((#("ontínua é colocar coi" 0 21 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15877) (undo-tree-id118 . -21) (undo-tree-id119 . -21) (undo-tree-id120 . -21) (undo-tree-id121 . -21) (undo-tree-id122 . -21) (undo-tree-id123 . -21)) ((15877 . 15898)) (26037 27419 557898 973000) 0 nil])
([nil nil ((15877 . 15878)) ((#("ó" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15877)) (26037 27419 524696 455000) 0 nil])
([nil nil ((#("o có" 0 3 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 3 4 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15874) (undo-tree-id112 . -3) (undo-tree-id113 . -4) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3)) ((15874 . 15878)) (26037 27419 494859 524000) 0 nil])
([nil nil ((15874 . 15875)) ((#("o" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15874)) (26037 27419 481152 195000) 0 nil])
([nil nil ((#("A meta da integração" 0 19 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent))) 19 20 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15855) (undo-tree-id106 . -19) (undo-tree-id107 . -20) (undo-tree-id108 . -19) (undo-tree-id109 . -19) (undo-tree-id110 . -19) (undo-tree-id111 . -19)) ((15855 . 15875)) (26037 27419 449902 805000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) . 15854) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1)) ((15854 . 15855)) (26037 27419 407794 693000) 0 nil])
([nil nil ((#("Entregar software com alta qualidade e grande valor, de maneira eficiente, rápida e confiável\"" 0 93 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil) 93 94 (line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)) fontified nil rear-nonsticky nil)) . 15760) (undo-tree-id94 . -94) (undo-tree-id95 . -94) (undo-tree-id96 . -94) (undo-tree-id97 . -94) (undo-tree-id98 . -94) (undo-tree-id99 . -94) (nil rear-nonsticky t 15853 . 15854)) ((nil rear-nonsticky nil 15853 . 15854) (15760 . 15854)) (26037 27419 376578 414000) 0 nil])
([nil nil ((2628 . 2629) (2628 . 2629)) ((#("
" 0 1 (fontified nil line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628) (#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628)) (26037 27418 876265 81000) 0 nil])
([nil nil ((2628 . 2731)) ((#("Não é só porque você usa Jenkins que você faz integração contínua. (AP: Não é porque o Jenkins está no " 0 17 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 17 18 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 18 21 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 21 40 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 40 53 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 53 66 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 66 67 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 67 88 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 88 92 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 92 98 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 98 100 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 100 103 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628) (undo-tree-id504 . -100)) (26037 27418 760681 677000) 0 nil])
([nil nil ((#("no " 0 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2728)) ((2728 . 2731)) (26037 27418 660202 884000) 0 nil])
([nil nil ((#("á " 0 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2726) (undo-tree-id93 . -2)) ((2726 . 2728)) (26037 27418 116684 618000) 0 nil])
([nil nil ((2726 . 2729)) ((#("'an" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 2 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2726)) (26037 27417 942264 752000) 0 nil])
([nil nil ((#("ns est'an" 0 6 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 6 7 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 7 8 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 8 9 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2720) (undo-tree-id92 . -9)) ((2720 . 2729)) (26037 27417 796119 939000) 0 nil])
([nil nil ((2720 . 2721)) ((#("s" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2720)) (26037 27417 662702 801000) 0 nil])
([nil nil ((#("enkis" 0 4 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 4 5 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2716) (undo-tree-id91 . -5)) ((2716 . 2721)) (26037 27417 532485 440000) 0 nil])
([nil nil ((#("(AP: Não é porque o J" 0 21 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2695) (undo-tree-id90 . -21)) ((2695 . 2716)) (26037 27417 404293 296000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2694) (undo-tree-id89 . -1)) ((2694 . 2695)) (26037 27417 211649 862000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2694)) ((2694 . 2695)) (26037 27417 79043 121000) 0 nil])
([nil nil ((#("ção contínua." 0 13 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2681) (undo-tree-id88 . -13)) ((2681 . 2694)) (26037 27416 948312 752000) 0 nil])
([nil nil ((#("ê faz integra" 0 13 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2668) (undo-tree-id87 . -13)) ((2668 . 2681)) (26037 27416 820231 901000) 0 nil])
([nil nil ((2668 . 2669)) ((#("e" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2668)) (26037 27416 692264 59000) 0 nil])
([nil nil ((#("usa Jenkins que voce" 0 19 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 19 20 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2649) (undo-tree-id86 . -20)) ((2649 . 2669)) (26037 27416 452085 419000) 0 nil])
([nil nil ((2649 . 2651)) ((#("su" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2649)) (26037 27416 80628 552000) 0 nil])
([nil nil ((#("cê su" 0 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 3 4 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 4 5 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2646) (undo-tree-id85 . -5)) ((2646 . 2651)) (26037 27415 932250 43000) 0 nil])
([nil nil ((2646 . 2649)) ((#("cÊ " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 2 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2646)) (26037 27415 716242 385000) 0 nil])
([nil nil ((#("ocÊ " 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 2 3 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 3 4 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2645) (undo-tree-id84 . -4)) ((2645 . 2649)) (26037 27415 436115 668000) 0 nil])
([nil nil ((2645 . 2646)) ((#("c" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2645)) (26037 27414 977322 473000) 0 nil])
([nil nil ((#("Não é só porque vc" 0 17 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 17 18 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628) (undo-tree-id83 . -18)) ((2628 . 2646)) (26037 27414 876370 6000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2628)) ((2628 . 2629)) (26037 27414 748156 879000) 0 nil])
([nil nil ((#("

" 0 1 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent))) 1 2 (fontified t line-prefix #("  " 0 1 (face org-indent)) wrap-prefix #("  " 0 1 (face org-indent) 1 2 (face org-indent)))) . 2757)) ((2757 . 2759)) (26037 27414 613191 163000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)))) . 15757) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1)) ((15757 . 15758)) (26037 27414 484107 140000) 0 nil])
([nil nil ((#("** Fundamentos" 0 1 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide) 1 3 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2) 3 14 (fontified nil line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 15743) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -14) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14)) ((15743 . 15757)) (26037 27414 381064 647000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)))) . 15742) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1)) ((15742 . 15743)) (26037 27414 228387 117000) 0 nil])
([nil nil ((#("O Deploy Contínuo coloca qualquer alteração em produção" 0 54 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil) 54 55 (line-prefix #("        " 0 7 (face org-indent)) wrap-prefix #("        " 0 7 (face org-indent) 7 8 (face org-indent)) fontified nil rear-nonsticky nil)) . 15687) (undo-tree-id54 . -55) (undo-tree-id55 . -55) (undo-tree-id56 . -55) (undo-tree-id57 . -55) (undo-tree-id58 . -55) (undo-tree-id59 . -55) (undo-tree-id60 . -55) (undo-tree-id61 . -55) (nil rear-nonsticky t 15741 . 15742)) ((nil rear-nonsticky nil 15741 . 15742) (15687 . 15742)) (26037 27414 116172 916000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)))) . 15686) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1)) ((15686 . 15687)) (26037 27413 988330 224000) 0 nil])
([nil nil ((#("dizendo" 0 7 (fontified nil line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 15679) (undo-tree-id36 . -7) (undo-tree-id37 . -7) (undo-tree-id38 . -7) (undo-tree-id39 . -7) (undo-tree-id40 . -7) (undo-tree-id41 . -7) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7)) ((15679 . 15686)) (26037 27413 468457 782000) 0 nil])
([nil nil ((15679 . 15680)) ((#("r" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 15679)) (26037 27413 337821 356000) 0 nil])
([nil nil ((#(" melhor r" 0 1 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 1 8 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4) 8 9 (fontified t line-prefix #("***" 0 3 (face org-indent)) wrap-prefix #("******* " 0 3 (face org-indent) 3 8 (face org-indent)) face org-level-4)) . 15671) (undo-tree-id26 . -8) (undo-tree-id27 . -9) (undo-tree-id28 . -8) (undo-tree-id29 . -8) (undo-tree-id30 . -8) (undo-tree-id31 . -8) (undo-tree-id32 . -8) (undo-tree-id33 . -8) (undo-tree-id34 . -8) (undo-tree-id35 . -8)) ((15671 . 15680)) (26037 27413 212330 676000) 0 nil])
([nil nil ((15671 . 15673)) ((#("* " 0 1 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5) 1 2 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5)) . 15671)) (26037 27413 78706 387000) 0 nil])
([nil nil ((#("***** " 0 3 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-hide) 3 4 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-hide) 4 5 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5) 5 6 (fontified t line-prefix #("****" 0 4 (face org-indent)) wrap-prefix #("********* " 0 4 (face org-indent) 4 10 (face org-indent)) face org-level-5)) . 15667) (undo-tree-id15 . -4) (undo-tree-id16 . -6) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4)) ((15667 . 15673)) (26037 27412 972184 685000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 15666) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) ((15666 . 15667)) (26037 27412 862027 7000) 0 nil])
([nil nil ((15666 . 15667)) ((#("/" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 15666)) (26037 27412 752103 479000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 15666) (undo-tree-id1 . -1)) ((15666 . 15667)) (26037 27412 664771 359000) 0 nil])
([nil nil ((15666 . 15667)) ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 15666) (t 26037 27397 687613 524000)) (26037 27412 608883 847000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t line-prefix #("          " 0 9 (face org-indent)) wrap-prefix #("          " 0 9 (face org-indent) 9 10 (face org-indent)))) . 15666) (undo-tree-id0 . -1) (t 26037 27397 687613 524000)) ((15666 . 15667)) (26037 27412 607336 62000) 0 nil])
nil
